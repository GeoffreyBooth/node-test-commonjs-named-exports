{
	"packagesWithOnlyDefaultCommonJSExport": [],
	"packagesWithAllNamesDetected": [
		{
			"name": "redis",
			"transpiled": false,
			"expectedNames": [
				"debug_mode",
				"debugMode",
				"createClient",
				"RedisClient",
				"print",
				"Multi",
				"AbortError",
				"RedisError",
				"ParserError",
				"ReplyError",
				"AggregateError",
				"add_command",
				"addCommand"
			],
			"detectedNames": [
				"debug_mode",
				"debugMode",
				"createClient",
				"RedisClient",
				"print",
				"Multi",
				"AbortError",
				"RedisError",
				"ParserError",
				"ReplyError",
				"AggregateError",
				"add_command",
				"addCommand"
			],
			"missingNames": []
		},
		{
			"name": "uuid",
			"transpiled": true,
			"expectedNames": [
				"v1",
				"v3",
				"v4",
				"v5"
			],
			"detectedNames": [
				"v1",
				"v3",
				"v4",
				"v5"
			],
			"missingNames": []
		},
		{
			"name": "ramda",
			"transpiled": false,
			"expectedNames": [
				"F",
				"T",
				"__",
				"add",
				"addIndex",
				"adjust",
				"all",
				"allPass",
				"always",
				"and",
				"any",
				"anyPass",
				"ap",
				"aperture",
				"append",
				"apply",
				"applySpec",
				"applyTo",
				"ascend",
				"assoc",
				"assocPath",
				"binary",
				"bind",
				"both",
				"call",
				"chain",
				"clamp",
				"clone",
				"comparator",
				"complement",
				"compose",
				"composeK",
				"composeP",
				"composeWith",
				"concat",
				"cond",
				"construct",
				"constructN",
				"contains",
				"converge",
				"countBy",
				"curry",
				"curryN",
				"dec",
				"defaultTo",
				"descend",
				"difference",
				"differenceWith",
				"dissoc",
				"dissocPath",
				"divide",
				"drop",
				"dropLast",
				"dropLastWhile",
				"dropRepeats",
				"dropRepeatsWith",
				"dropWhile",
				"either",
				"empty",
				"endsWith",
				"eqBy",
				"eqProps",
				"equals",
				"evolve",
				"filter",
				"find",
				"findIndex",
				"findLast",
				"findLastIndex",
				"flatten",
				"flip",
				"forEach",
				"forEachObjIndexed",
				"fromPairs",
				"groupBy",
				"groupWith",
				"gt",
				"gte",
				"has",
				"hasIn",
				"hasPath",
				"head",
				"identical",
				"identity",
				"ifElse",
				"inc",
				"includes",
				"indexBy",
				"indexOf",
				"init",
				"innerJoin",
				"insert",
				"insertAll",
				"intersection",
				"intersperse",
				"into",
				"invert",
				"invertObj",
				"invoker",
				"is",
				"isEmpty",
				"isNil",
				"join",
				"juxt",
				"keys",
				"keysIn",
				"last",
				"lastIndexOf",
				"length",
				"lens",
				"lensIndex",
				"lensPath",
				"lensProp",
				"lift",
				"liftN",
				"lt",
				"lte",
				"map",
				"mapAccum",
				"mapAccumRight",
				"mapObjIndexed",
				"match",
				"mathMod",
				"max",
				"maxBy",
				"mean",
				"median",
				"memoizeWith",
				"merge",
				"mergeAll",
				"mergeDeepLeft",
				"mergeDeepRight",
				"mergeDeepWith",
				"mergeDeepWithKey",
				"mergeLeft",
				"mergeRight",
				"mergeWith",
				"mergeWithKey",
				"min",
				"minBy",
				"modulo",
				"move",
				"multiply",
				"nAry",
				"negate",
				"none",
				"not",
				"nth",
				"nthArg",
				"o",
				"objOf",
				"of",
				"omit",
				"once",
				"or",
				"otherwise",
				"over",
				"pair",
				"partial",
				"partialRight",
				"partition",
				"path",
				"paths",
				"pathEq",
				"pathOr",
				"pathSatisfies",
				"pick",
				"pickAll",
				"pickBy",
				"pipe",
				"pipeK",
				"pipeP",
				"pipeWith",
				"pluck",
				"prepend",
				"product",
				"project",
				"prop",
				"propEq",
				"propIs",
				"propOr",
				"propSatisfies",
				"props",
				"range",
				"reduce",
				"reduceBy",
				"reduceRight",
				"reduceWhile",
				"reduced",
				"reject",
				"remove",
				"repeat",
				"replace",
				"reverse",
				"scan",
				"sequence",
				"set",
				"slice",
				"sort",
				"sortBy",
				"sortWith",
				"split",
				"splitAt",
				"splitEvery",
				"splitWhen",
				"startsWith",
				"subtract",
				"sum",
				"symmetricDifference",
				"symmetricDifferenceWith",
				"tail",
				"take",
				"takeLast",
				"takeLastWhile",
				"takeWhile",
				"tap",
				"test",
				"andThen",
				"times",
				"toLower",
				"toPairs",
				"toPairsIn",
				"toString",
				"toUpper",
				"transduce",
				"transpose",
				"traverse",
				"trim",
				"tryCatch",
				"type",
				"unapply",
				"unary",
				"uncurryN",
				"unfold",
				"union",
				"unionWith",
				"uniq",
				"uniqBy",
				"uniqWith",
				"unless",
				"unnest",
				"until",
				"update",
				"useWith",
				"values",
				"valuesIn",
				"view",
				"when",
				"where",
				"whereEq",
				"without",
				"xor",
				"xprod",
				"zip",
				"zipObj",
				"zipWith",
				"thunkify"
			],
			"detectedNames": [
				"F",
				"T",
				"__",
				"add",
				"addIndex",
				"adjust",
				"all",
				"allPass",
				"always",
				"and",
				"any",
				"anyPass",
				"ap",
				"aperture",
				"append",
				"apply",
				"applySpec",
				"applyTo",
				"ascend",
				"assoc",
				"assocPath",
				"binary",
				"bind",
				"both",
				"call",
				"chain",
				"clamp",
				"clone",
				"comparator",
				"complement",
				"compose",
				"composeK",
				"composeP",
				"composeWith",
				"concat",
				"cond",
				"construct",
				"constructN",
				"contains",
				"converge",
				"countBy",
				"curry",
				"curryN",
				"dec",
				"defaultTo",
				"descend",
				"difference",
				"differenceWith",
				"dissoc",
				"dissocPath",
				"divide",
				"drop",
				"dropLast",
				"dropLastWhile",
				"dropRepeats",
				"dropRepeatsWith",
				"dropWhile",
				"either",
				"empty",
				"endsWith",
				"eqBy",
				"eqProps",
				"equals",
				"evolve",
				"filter",
				"find",
				"findIndex",
				"findLast",
				"findLastIndex",
				"flatten",
				"flip",
				"forEach",
				"forEachObjIndexed",
				"fromPairs",
				"groupBy",
				"groupWith",
				"gt",
				"gte",
				"has",
				"hasIn",
				"hasPath",
				"head",
				"identical",
				"identity",
				"ifElse",
				"inc",
				"includes",
				"indexBy",
				"indexOf",
				"init",
				"innerJoin",
				"insert",
				"insertAll",
				"intersection",
				"intersperse",
				"into",
				"invert",
				"invertObj",
				"invoker",
				"is",
				"isEmpty",
				"isNil",
				"join",
				"juxt",
				"keys",
				"keysIn",
				"last",
				"lastIndexOf",
				"length",
				"lens",
				"lensIndex",
				"lensPath",
				"lensProp",
				"lift",
				"liftN",
				"lt",
				"lte",
				"map",
				"mapAccum",
				"mapAccumRight",
				"mapObjIndexed",
				"match",
				"mathMod",
				"max",
				"maxBy",
				"mean",
				"median",
				"memoizeWith",
				"merge",
				"mergeAll",
				"mergeDeepLeft",
				"mergeDeepRight",
				"mergeDeepWith",
				"mergeDeepWithKey",
				"mergeLeft",
				"mergeRight",
				"mergeWith",
				"mergeWithKey",
				"min",
				"minBy",
				"modulo",
				"move",
				"multiply",
				"nAry",
				"negate",
				"none",
				"not",
				"nth",
				"nthArg",
				"o",
				"objOf",
				"of",
				"omit",
				"once",
				"or",
				"otherwise",
				"over",
				"pair",
				"partial",
				"partialRight",
				"partition",
				"path",
				"paths",
				"pathEq",
				"pathOr",
				"pathSatisfies",
				"pick",
				"pickAll",
				"pickBy",
				"pipe",
				"pipeK",
				"pipeP",
				"pipeWith",
				"pluck",
				"prepend",
				"product",
				"project",
				"prop",
				"propEq",
				"propIs",
				"propOr",
				"propSatisfies",
				"props",
				"range",
				"reduce",
				"reduceBy",
				"reduceRight",
				"reduceWhile",
				"reduced",
				"reject",
				"remove",
				"repeat",
				"replace",
				"reverse",
				"scan",
				"sequence",
				"set",
				"slice",
				"sort",
				"sortBy",
				"sortWith",
				"split",
				"splitAt",
				"splitEvery",
				"splitWhen",
				"startsWith",
				"subtract",
				"sum",
				"symmetricDifference",
				"symmetricDifferenceWith",
				"tail",
				"take",
				"takeLast",
				"takeLastWhile",
				"takeWhile",
				"tap",
				"test",
				"andThen",
				"times",
				"toLower",
				"toPairs",
				"toPairsIn",
				"toString",
				"toUpper",
				"transduce",
				"transpose",
				"traverse",
				"trim",
				"tryCatch",
				"type",
				"unapply",
				"unary",
				"uncurryN",
				"unfold",
				"union",
				"unionWith",
				"uniq",
				"uniqBy",
				"uniqWith",
				"unless",
				"unnest",
				"until",
				"update",
				"useWith",
				"values",
				"valuesIn",
				"view",
				"when",
				"where",
				"whereEq",
				"without",
				"xor",
				"xprod",
				"zip",
				"zipObj",
				"zipWith",
				"thunkify"
			],
			"missingNames": []
		},
		{
			"name": "ember-cli-htmlbars",
			"transpiled": false,
			"expectedNames": [
				"TemplateCompilerPlugin"
			],
			"detectedNames": [
				"TemplateCompilerPlugin"
			],
			"missingNames": []
		},
		{
			"name": "babel-core",
			"transpiled": true,
			"expectedNames": [
				"File",
				"options",
				"buildExternalHelpers",
				"template",
				"resolvePlugin",
				"resolvePreset",
				"version",
				"util",
				"messages",
				"types",
				"traverse",
				"OptionManager",
				"Pipeline",
				"analyse",
				"transform",
				"transformFromAst",
				"Plugin",
				"transformFile",
				"transformFileSync"
			],
			"detectedNames": [
				"File",
				"options",
				"buildExternalHelpers",
				"template",
				"resolvePlugin",
				"resolvePreset",
				"version",
				"util",
				"messages",
				"types",
				"traverse",
				"OptionManager",
				"Pipeline",
				"analyse",
				"transform",
				"transformFromAst",
				"Plugin",
				"transformFile",
				"transformFileSync"
			],
			"missingNames": []
		},
		{
			"name": "path-to-regexp",
			"transpiled": true,
			"expectedNames": [
				"parse",
				"compile",
				"tokensToFunction",
				"match",
				"regexpToFunction",
				"tokensToRegexp",
				"pathToRegexp"
			],
			"detectedNames": [
				"parse",
				"compile",
				"tokensToFunction",
				"match",
				"regexpToFunction",
				"tokensToRegexp",
				"pathToRegexp"
			],
			"missingNames": []
		},
		{
			"name": "immutable",
			"transpiled": true,
			"expectedNames": [
				"version",
				"Collection",
				"Iterable",
				"Seq",
				"Map",
				"OrderedMap",
				"List",
				"Stack",
				"Set",
				"OrderedSet",
				"Record",
				"Range",
				"Repeat",
				"is",
				"fromJS",
				"hash",
				"isImmutable",
				"isCollection",
				"isKeyed",
				"isIndexed",
				"isAssociative",
				"isOrdered",
				"isValueObject",
				"get",
				"getIn",
				"has",
				"hasIn",
				"merge",
				"mergeDeep",
				"mergeWith",
				"mergeDeepWith",
				"remove",
				"removeIn",
				"set",
				"setIn",
				"update",
				"updateIn"
			],
			"detectedNames": [
				"version",
				"Collection",
				"Iterable",
				"Seq",
				"Map",
				"OrderedMap",
				"List",
				"Stack",
				"Set",
				"OrderedSet",
				"Record",
				"Range",
				"Repeat",
				"is",
				"fromJS",
				"hash",
				"isImmutable",
				"isCollection",
				"isKeyed",
				"isIndexed",
				"isAssociative",
				"isOrdered",
				"isValueObject",
				"get",
				"getIn",
				"has",
				"hasIn",
				"merge",
				"mergeDeep",
				"mergeWith",
				"mergeDeepWith",
				"remove",
				"removeIn",
				"set",
				"setIn",
				"update",
				"updateIn"
			],
			"missingNames": []
		},
		{
			"name": "js-base64",
			"transpiled": false,
			"expectedNames": [
				"Base64"
			],
			"detectedNames": [
				"Base64"
			],
			"missingNames": []
		},
		{
			"name": "array-flatten",
			"transpiled": true,
			"expectedNames": [
				"flatten"
			],
			"detectedNames": [
				"flatten"
			],
			"missingNames": []
		},
		{
			"name": "recast",
			"transpiled": true,
			"expectedNames": [
				"types",
				"parse",
				"visit",
				"print",
				"prettyPrint",
				"run"
			],
			"detectedNames": [
				"types",
				"parse",
				"visit",
				"print",
				"prettyPrint",
				"run"
			],
			"missingNames": []
		},
		{
			"name": "soap",
			"transpiled": true,
			"expectedNames": [
				"security",
				"Client",
				"HttpClient",
				"BasicAuthSecurity",
				"BearerSecurity",
				"ClientSSLSecurity",
				"ClientSSLSecurityPFX",
				"NTLMSecurity",
				"WSSecurity",
				"WSSecurityCert",
				"Server",
				"passwordDigest",
				"WSDL",
				"createClient",
				"createClientAsync",
				"listen"
			],
			"detectedNames": [
				"security",
				"Client",
				"HttpClient",
				"BasicAuthSecurity",
				"BearerSecurity",
				"ClientSSLSecurity",
				"ClientSSLSecurityPFX",
				"NTLMSecurity",
				"WSSecurity",
				"WSSecurityCert",
				"Server",
				"passwordDigest",
				"WSDL",
				"createClient",
				"createClientAsync",
				"listen"
			],
			"missingNames": []
		},
		{
			"name": "googleapis",
			"transpiled": true,
			"expectedNames": [
				"google",
				"GoogleApis",
				"abusiveexperiencereport_v1",
				"acceleratedmobilepageurl_v1",
				"accessapproval_v1",
				"accessapproval_v1beta1",
				"accesscontextmanager_v1",
				"accesscontextmanager_v1beta",
				"adexchangebuyer_v1_2",
				"adexchangebuyer_v1_3",
				"adexchangebuyer_v1_4",
				"adexchangebuyer2_v2beta1",
				"adexperiencereport_v1",
				"admin_datatransfer_v1",
				"admin_directory_v1",
				"admin_reports_v1",
				"admob_v1",
				"adsense_v1_4",
				"adsensehost_v4_1",
				"alertcenter_v1beta1",
				"analytics_v3",
				"analyticsreporting_v4",
				"androiddeviceprovisioning_v1",
				"androidenterprise_v1",
				"androidmanagement_v1",
				"androidpublisher_v1_1",
				"androidpublisher_v1",
				"androidpublisher_v2",
				"androidpublisher_v3",
				"appengine_v1",
				"appengine_v1alpha",
				"appengine_v1beta",
				"appsactivity_v1",
				"bigquery_v2",
				"bigqueryconnection_v1beta1",
				"bigquerydatatransfer_v1",
				"bigqueryreservation_v1",
				"bigqueryreservation_v1alpha2",
				"bigqueryreservation_v1beta1",
				"bigtableadmin_v1",
				"bigtableadmin_v2",
				"billingbudgets_v1beta1",
				"binaryauthorization_v1",
				"binaryauthorization_v1beta1",
				"blogger_v2",
				"blogger_v3",
				"books_v1",
				"calendar_v3",
				"chat_v1",
				"civicinfo_v2",
				"classroom_v1",
				"cloudasset_v1",
				"cloudasset_v1beta1",
				"cloudasset_v1p1beta1",
				"cloudasset_v1p4beta1",
				"cloudbilling_v1",
				"cloudbuild_v1",
				"cloudbuild_v1alpha1",
				"cloudbuild_v1alpha2",
				"clouddebugger_v2",
				"clouderrorreporting_v1beta1",
				"cloudfunctions_v1",
				"cloudfunctions_v1beta2",
				"cloudidentity_v1",
				"cloudidentity_v1beta1",
				"cloudiot_v1",
				"cloudkms_v1",
				"cloudprofiler_v2",
				"cloudresourcemanager_v1",
				"cloudresourcemanager_v1beta1",
				"cloudresourcemanager_v2",
				"cloudresourcemanager_v2beta1",
				"cloudscheduler_v1",
				"cloudscheduler_v1beta1",
				"cloudsearch_v1",
				"cloudshell_v1",
				"cloudshell_v1alpha1",
				"cloudtasks_v2",
				"cloudtasks_v2beta2",
				"cloudtasks_v2beta3",
				"cloudtrace_v1",
				"cloudtrace_v2",
				"cloudtrace_v2beta1",
				"composer_v1",
				"composer_v1beta1",
				"compute_alpha",
				"compute_beta",
				"compute_v1",
				"container_v1",
				"container_v1beta1",
				"containeranalysis_v1alpha1",
				"containeranalysis_v1beta1",
				"content_v2_1",
				"content_v2",
				"customsearch_v1",
				"datacatalog_v1beta1",
				"dataflow_v1b3",
				"datafusion_v1beta1",
				"dataproc_v1",
				"dataproc_v1beta2",
				"datastore_v1",
				"datastore_v1beta1",
				"datastore_v1beta3",
				"deploymentmanager_alpha",
				"deploymentmanager_v2",
				"deploymentmanager_v2beta",
				"dfareporting_v3_3",
				"dfareporting_v3_4",
				"dialogflow_v2",
				"dialogflow_v2beta1",
				"digitalassetlinks_v1",
				"discovery_v1",
				"displayvideo_v1",
				"dlp_v2",
				"dns_v1",
				"dns_v1beta2",
				"dns_v2beta1",
				"docs_v1",
				"domainsrdap_v1",
				"doubleclickbidmanager_v1_1",
				"doubleclickbidmanager_v1",
				"doubleclicksearch_v2",
				"drive_v2",
				"drive_v3",
				"driveactivity_v2",
				"factchecktools_v1alpha1",
				"fcm_v1",
				"file_v1",
				"file_v1beta1",
				"firebase_v1beta1",
				"firebasedynamiclinks_v1",
				"firebasehosting_v1beta1",
				"firebaseml_v1beta2",
				"firebaserules_v1",
				"firestore_v1",
				"firestore_v1beta1",
				"firestore_v1beta2",
				"fitness_v1",
				"games_v1",
				"gamesConfiguration_v1configuration",
				"gamesManagement_v1management",
				"gameservices_v1beta",
				"genomics_v1",
				"genomics_v1alpha2",
				"genomics_v2alpha1",
				"gmail_v1",
				"groupsmigration_v1",
				"groupssettings_v1",
				"healthcare_v1",
				"healthcare_v1beta1",
				"homegraph_v1",
				"iam_v1",
				"iamcredentials_v1",
				"iap_v1",
				"iap_v1beta1",
				"identitytoolkit_v3",
				"indexing_v3",
				"jobs_v2",
				"jobs_v3",
				"jobs_v3p1beta1",
				"kgsearch_v1",
				"language_v1",
				"language_v1beta1",
				"language_v1beta2",
				"libraryagent_v1",
				"licensing_v1",
				"lifesciences_v2beta",
				"logging_v2",
				"managedidentities_v1",
				"managedidentities_v1alpha1",
				"managedidentities_v1beta1",
				"manufacturers_v1",
				"memcache_v1beta2",
				"ml_v1",
				"monitoring_v1",
				"monitoring_v3",
				"networkmanagement_v1beta1",
				"oauth2_v2",
				"osconfig_v1",
				"osconfig_v1beta",
				"oslogin_v1",
				"oslogin_v1alpha",
				"oslogin_v1beta",
				"pagespeedonline_v2",
				"pagespeedonline_v4",
				"pagespeedonline_v5",
				"people_v1",
				"playcustomapp_v1",
				"plus_v1",
				"policytroubleshooter_v1",
				"policytroubleshooter_v1beta",
				"poly_v1",
				"prod_tt_sasportal_v1alpha1",
				"pubsub_v1",
				"pubsub_v1beta1a",
				"pubsub_v1beta2",
				"recommender_v1beta1",
				"redis_v1",
				"redis_v1beta1",
				"remotebuildexecution_v1",
				"remotebuildexecution_v1alpha",
				"remotebuildexecution_v2",
				"reseller_v1",
				"run_v1",
				"run_v1alpha1",
				"run_v1beta1",
				"runtimeconfig_v1",
				"runtimeconfig_v1beta1",
				"safebrowsing_v4",
				"sasportal_v1alpha1",
				"script_v1",
				"searchconsole_v1",
				"secretmanager_v1",
				"secretmanager_v1beta1",
				"securitycenter_v1",
				"securitycenter_v1beta1",
				"securitycenter_v1p1alpha1",
				"securitycenter_v1p1beta1",
				"serviceconsumermanagement_v1",
				"serviceconsumermanagement_v1beta1",
				"servicecontrol_v1",
				"servicedirectory_v1beta1",
				"servicemanagement_v1",
				"servicenetworking_v1",
				"servicenetworking_v1beta",
				"serviceusage_v1",
				"serviceusage_v1beta1",
				"sheets_v4",
				"siteVerification_v1",
				"slides_v1",
				"sourcerepo_v1",
				"spanner_v1",
				"speech_v1",
				"speech_v1p1beta1",
				"speech_v2beta1",
				"sql_v1beta4",
				"storage_v1",
				"storage_v1beta2",
				"storagetransfer_v1",
				"streetviewpublish_v1",
				"tagmanager_v1",
				"tagmanager_v2",
				"tasks_v1",
				"testing_v1",
				"texttospeech_v1",
				"texttospeech_v1beta1",
				"toolresults_v1beta3",
				"tpu_v1",
				"tpu_v1alpha1",
				"translate_v2",
				"translate_v3",
				"translate_v3beta1",
				"vault_v1",
				"verifiedaccess_v1",
				"videointelligence_v1",
				"videointelligence_v1beta2",
				"videointelligence_v1p1beta1",
				"videointelligence_v1p2beta1",
				"videointelligence_v1p3beta1",
				"vision_v1",
				"vision_v1p1beta1",
				"vision_v1p2beta1",
				"webfonts_v1",
				"webmasters_v3",
				"websecurityscanner_v1",
				"websecurityscanner_v1alpha",
				"websecurityscanner_v1beta",
				"youtube_v3",
				"youtubeAnalytics_v1",
				"youtubeAnalytics_v2",
				"youtubereporting_v1"
			],
			"detectedNames": [
				"google",
				"GoogleApis",
				"abusiveexperiencereport_v1",
				"acceleratedmobilepageurl_v1",
				"accessapproval_v1",
				"accessapproval_v1beta1",
				"accesscontextmanager_v1",
				"accesscontextmanager_v1beta",
				"adexchangebuyer_v1_2",
				"adexchangebuyer_v1_3",
				"adexchangebuyer_v1_4",
				"adexchangebuyer2_v2beta1",
				"adexperiencereport_v1",
				"admin_datatransfer_v1",
				"admin_directory_v1",
				"admin_reports_v1",
				"admob_v1",
				"adsense_v1_4",
				"adsensehost_v4_1",
				"alertcenter_v1beta1",
				"analytics_v3",
				"analyticsreporting_v4",
				"androiddeviceprovisioning_v1",
				"androidenterprise_v1",
				"androidmanagement_v1",
				"androidpublisher_v1_1",
				"androidpublisher_v1",
				"androidpublisher_v2",
				"androidpublisher_v3",
				"appengine_v1",
				"appengine_v1alpha",
				"appengine_v1beta",
				"appsactivity_v1",
				"bigquery_v2",
				"bigqueryconnection_v1beta1",
				"bigquerydatatransfer_v1",
				"bigqueryreservation_v1",
				"bigqueryreservation_v1alpha2",
				"bigqueryreservation_v1beta1",
				"bigtableadmin_v1",
				"bigtableadmin_v2",
				"billingbudgets_v1beta1",
				"binaryauthorization_v1",
				"binaryauthorization_v1beta1",
				"blogger_v2",
				"blogger_v3",
				"books_v1",
				"calendar_v3",
				"chat_v1",
				"civicinfo_v2",
				"classroom_v1",
				"cloudasset_v1",
				"cloudasset_v1beta1",
				"cloudasset_v1p1beta1",
				"cloudasset_v1p4beta1",
				"cloudbilling_v1",
				"cloudbuild_v1",
				"cloudbuild_v1alpha1",
				"cloudbuild_v1alpha2",
				"clouddebugger_v2",
				"clouderrorreporting_v1beta1",
				"cloudfunctions_v1",
				"cloudfunctions_v1beta2",
				"cloudidentity_v1",
				"cloudidentity_v1beta1",
				"cloudiot_v1",
				"cloudkms_v1",
				"cloudprofiler_v2",
				"cloudresourcemanager_v1",
				"cloudresourcemanager_v1beta1",
				"cloudresourcemanager_v2",
				"cloudresourcemanager_v2beta1",
				"cloudscheduler_v1",
				"cloudscheduler_v1beta1",
				"cloudsearch_v1",
				"cloudshell_v1",
				"cloudshell_v1alpha1",
				"cloudtasks_v2",
				"cloudtasks_v2beta2",
				"cloudtasks_v2beta3",
				"cloudtrace_v1",
				"cloudtrace_v2",
				"cloudtrace_v2beta1",
				"composer_v1",
				"composer_v1beta1",
				"compute_alpha",
				"compute_beta",
				"compute_v1",
				"container_v1",
				"container_v1beta1",
				"containeranalysis_v1alpha1",
				"containeranalysis_v1beta1",
				"content_v2_1",
				"content_v2",
				"customsearch_v1",
				"datacatalog_v1beta1",
				"dataflow_v1b3",
				"datafusion_v1beta1",
				"dataproc_v1",
				"dataproc_v1beta2",
				"datastore_v1",
				"datastore_v1beta1",
				"datastore_v1beta3",
				"deploymentmanager_alpha",
				"deploymentmanager_v2",
				"deploymentmanager_v2beta",
				"dfareporting_v3_3",
				"dfareporting_v3_4",
				"dialogflow_v2",
				"dialogflow_v2beta1",
				"digitalassetlinks_v1",
				"discovery_v1",
				"displayvideo_v1",
				"dlp_v2",
				"dns_v1",
				"dns_v1beta2",
				"dns_v2beta1",
				"docs_v1",
				"domainsrdap_v1",
				"doubleclickbidmanager_v1_1",
				"doubleclickbidmanager_v1",
				"doubleclicksearch_v2",
				"drive_v2",
				"drive_v3",
				"driveactivity_v2",
				"factchecktools_v1alpha1",
				"fcm_v1",
				"file_v1",
				"file_v1beta1",
				"firebase_v1beta1",
				"firebasedynamiclinks_v1",
				"firebasehosting_v1beta1",
				"firebaseml_v1beta2",
				"firebaserules_v1",
				"firestore_v1",
				"firestore_v1beta1",
				"firestore_v1beta2",
				"fitness_v1",
				"games_v1",
				"gamesConfiguration_v1configuration",
				"gamesManagement_v1management",
				"gameservices_v1beta",
				"genomics_v1",
				"genomics_v1alpha2",
				"genomics_v2alpha1",
				"gmail_v1",
				"groupsmigration_v1",
				"groupssettings_v1",
				"healthcare_v1",
				"healthcare_v1beta1",
				"homegraph_v1",
				"iam_v1",
				"iamcredentials_v1",
				"iap_v1",
				"iap_v1beta1",
				"identitytoolkit_v3",
				"indexing_v3",
				"jobs_v2",
				"jobs_v3",
				"jobs_v3p1beta1",
				"kgsearch_v1",
				"language_v1",
				"language_v1beta1",
				"language_v1beta2",
				"libraryagent_v1",
				"licensing_v1",
				"lifesciences_v2beta",
				"logging_v2",
				"managedidentities_v1",
				"managedidentities_v1alpha1",
				"managedidentities_v1beta1",
				"manufacturers_v1",
				"memcache_v1beta2",
				"ml_v1",
				"monitoring_v1",
				"monitoring_v3",
				"networkmanagement_v1beta1",
				"oauth2_v2",
				"osconfig_v1",
				"osconfig_v1beta",
				"oslogin_v1",
				"oslogin_v1alpha",
				"oslogin_v1beta",
				"pagespeedonline_v2",
				"pagespeedonline_v4",
				"pagespeedonline_v5",
				"people_v1",
				"playcustomapp_v1",
				"plus_v1",
				"policytroubleshooter_v1",
				"policytroubleshooter_v1beta",
				"poly_v1",
				"prod_tt_sasportal_v1alpha1",
				"pubsub_v1",
				"pubsub_v1beta1a",
				"pubsub_v1beta2",
				"recommender_v1beta1",
				"redis_v1",
				"redis_v1beta1",
				"remotebuildexecution_v1",
				"remotebuildexecution_v1alpha",
				"remotebuildexecution_v2",
				"reseller_v1",
				"run_v1",
				"run_v1alpha1",
				"run_v1beta1",
				"runtimeconfig_v1",
				"runtimeconfig_v1beta1",
				"safebrowsing_v4",
				"sasportal_v1alpha1",
				"script_v1",
				"searchconsole_v1",
				"secretmanager_v1",
				"secretmanager_v1beta1",
				"securitycenter_v1",
				"securitycenter_v1beta1",
				"securitycenter_v1p1alpha1",
				"securitycenter_v1p1beta1",
				"serviceconsumermanagement_v1",
				"serviceconsumermanagement_v1beta1",
				"servicecontrol_v1",
				"servicedirectory_v1beta1",
				"servicemanagement_v1",
				"servicenetworking_v1",
				"servicenetworking_v1beta",
				"serviceusage_v1",
				"serviceusage_v1beta1",
				"sheets_v4",
				"siteVerification_v1",
				"slides_v1",
				"sourcerepo_v1",
				"spanner_v1",
				"speech_v1",
				"speech_v1p1beta1",
				"speech_v2beta1",
				"sql_v1beta4",
				"storage_v1",
				"storage_v1beta2",
				"storagetransfer_v1",
				"streetviewpublish_v1",
				"tagmanager_v1",
				"tagmanager_v2",
				"tasks_v1",
				"testing_v1",
				"texttospeech_v1",
				"texttospeech_v1beta1",
				"toolresults_v1beta3",
				"tpu_v1",
				"tpu_v1alpha1",
				"translate_v2",
				"translate_v3",
				"translate_v3beta1",
				"vault_v1",
				"verifiedaccess_v1",
				"videointelligence_v1",
				"videointelligence_v1beta2",
				"videointelligence_v1p1beta1",
				"videointelligence_v1p2beta1",
				"videointelligence_v1p3beta1",
				"vision_v1",
				"vision_v1p1beta1",
				"vision_v1p2beta1",
				"webfonts_v1",
				"webmasters_v3",
				"websecurityscanner_v1",
				"websecurityscanner_v1alpha",
				"websecurityscanner_v1beta",
				"youtube_v3",
				"youtubeAnalytics_v1",
				"youtubeAnalytics_v2",
				"youtubereporting_v1"
			],
			"missingNames": []
		},
		{
			"name": "error",
			"transpiled": false,
			"expectedNames": [
				"SError",
				"WError",
				"MultiError",
				"findCauseByName",
				"fullStack",
				"wrapf",
				"errorf",
				"getTypeName"
			],
			"detectedNames": [
				"SError",
				"WError",
				"MultiError",
				"findCauseByName",
				"fullStack",
				"wrapf",
				"errorf",
				"getTypeName"
			],
			"missingNames": []
		},
		{
			"name": "mqtt",
			"transpiled": false,
			"expectedNames": [
				"connect",
				"MqttClient",
				"Client",
				"Store"
			],
			"detectedNames": [
				"connect",
				"MqttClient",
				"Client",
				"Store"
			],
			"missingNames": []
		},
		{
			"name": "domhandler",
			"transpiled": true,
			"expectedNames": [
				"Node",
				"Element",
				"DataNode",
				"NodeWithChildren",
				"DomHandler"
			],
			"detectedNames": [
				"Node",
				"Element",
				"DataNode",
				"NodeWithChildren",
				"DomHandler"
			],
			"missingNames": []
		},
		{
			"name": "lower-case",
			"transpiled": true,
			"expectedNames": [
				"localeLowerCase",
				"lowerCase"
			],
			"detectedNames": [
				"localeLowerCase",
				"lowerCase"
			],
			"missingNames": []
		},
		{
			"name": "sentence-case",
			"transpiled": true,
			"expectedNames": [
				"sentenceCaseTransform",
				"sentenceCase"
			],
			"detectedNames": [
				"sentenceCaseTransform",
				"sentenceCase"
			],
			"missingNames": []
		},
		{
			"name": "redux",
			"transpiled": true,
			"expectedNames": [
				"__DO_NOT_USE__ActionTypes",
				"applyMiddleware",
				"bindActionCreators",
				"combineReducers",
				"compose",
				"createStore"
			],
			"detectedNames": [
				"__DO_NOT_USE__ActionTypes",
				"applyMiddleware",
				"bindActionCreators",
				"combineReducers",
				"compose",
				"createStore"
			],
			"missingNames": []
		},
		{
			"name": "upper-case",
			"transpiled": true,
			"expectedNames": [
				"localeUpperCase",
				"upperCase"
			],
			"detectedNames": [
				"localeUpperCase",
				"upperCase"
			],
			"missingNames": []
		},
		{
			"name": "ast-types",
			"transpiled": true,
			"expectedNames": [
				"namedTypes",
				"astNodesAreEquivalent",
				"builders",
				"builtInTypes",
				"defineMethod",
				"eachField",
				"finalize",
				"getBuilderName",
				"getFieldNames",
				"getFieldValue",
				"getSupertypeNames",
				"NodePath",
				"Path",
				"PathVisitor",
				"someField",
				"Type",
				"use",
				"visit"
			],
			"detectedNames": [
				"namedTypes",
				"astNodesAreEquivalent",
				"builders",
				"builtInTypes",
				"defineMethod",
				"eachField",
				"finalize",
				"getBuilderName",
				"getFieldNames",
				"getFieldValue",
				"getSupertypeNames",
				"NodePath",
				"Path",
				"PathVisitor",
				"someField",
				"Type",
				"use",
				"visit"
			],
			"missingNames": []
		},
		{
			"name": "camel-case",
			"transpiled": true,
			"expectedNames": [
				"camelCaseTransform",
				"camelCaseTransformMerge",
				"camelCase"
			],
			"detectedNames": [
				"camelCaseTransform",
				"camelCaseTransformMerge",
				"camelCase"
			],
			"missingNames": []
		},
		{
			"name": "selenium-webdriver",
			"transpiled": false,
			"expectedNames": [
				"Browser",
				"Builder",
				"Button",
				"By",
				"Capabilities",
				"Capability",
				"Condition",
				"FileDetector",
				"Key",
				"Origin",
				"Session",
				"ThenableWebDriver",
				"WebDriver",
				"WebElement",
				"WebElementCondition",
				"WebElementPromise",
				"error",
				"logging",
				"promise",
				"until"
			],
			"detectedNames": [
				"Browser",
				"Builder",
				"Button",
				"By",
				"Capabilities",
				"Capability",
				"Condition",
				"FileDetector",
				"Key",
				"Origin",
				"Session",
				"ThenableWebDriver",
				"WebDriver",
				"WebElement",
				"WebElementCondition",
				"WebElementPromise",
				"error",
				"logging",
				"promise",
				"until"
			],
			"missingNames": []
		},
		{
			"name": "react-router",
			"transpiled": false,
			"expectedNames": [
				"MemoryRouter",
				"Prompt",
				"Redirect",
				"Route",
				"Router",
				"StaticRouter",
				"Switch",
				"__HistoryContext",
				"__RouterContext",
				"generatePath",
				"matchPath",
				"useHistory",
				"useLocation",
				"useParams",
				"useRouteMatch",
				"withRouter"
			],
			"detectedNames": [
				"MemoryRouter",
				"Prompt",
				"Redirect",
				"Route",
				"Router",
				"StaticRouter",
				"Switch",
				"__HistoryContext",
				"__RouterContext",
				"generatePath",
				"matchPath",
				"useHistory",
				"useLocation",
				"useParams",
				"useRouteMatch",
				"withRouter"
			],
			"missingNames": []
		},
		{
			"name": "google-auth-library",
			"transpiled": true,
			"expectedNames": [
				"auth",
				"GoogleAuth",
				"Compute",
				"GCPEnv",
				"IAMAuth",
				"IdTokenClient",
				"JWTAccess",
				"JWT",
				"CodeChallengeMethod",
				"OAuth2Client",
				"LoginTicket",
				"UserRefreshClient",
				"DefaultTransporter"
			],
			"detectedNames": [
				"auth",
				"GoogleAuth",
				"Compute",
				"GCPEnv",
				"IAMAuth",
				"IdTokenClient",
				"JWTAccess",
				"JWT",
				"CodeChallengeMethod",
				"OAuth2Client",
				"LoginTicket",
				"UserRefreshClient",
				"DefaultTransporter"
			],
			"missingNames": []
		},
		{
			"name": "flux-standard-action",
			"transpiled": true,
			"expectedNames": [
				"isFSA",
				"isError"
			],
			"detectedNames": [
				"isFSA",
				"isError"
			],
			"missingNames": []
		},
		{
			"name": "abab",
			"transpiled": false,
			"expectedNames": [
				"atob",
				"btoa"
			],
			"detectedNames": [
				"atob",
				"btoa"
			],
			"missingNames": []
		},
		{
			"name": "emailjs",
			"transpiled": true,
			"expectedNames": [
				"AUTH_METHODS",
				"BUFFERSIZE",
				"DEFAULT_TIMEOUT",
				"MIME64CHUNK",
				"MIMECHUNK",
				"Message",
				"SMTPClient",
				"SMTPConnection",
				"SMTPError",
				"SMTPErrorStates",
				"SMTPResponseMonitor",
				"SMTPState",
				"addressparser",
				"getRFC2822Date",
				"getRFC2822DateUTC",
				"mimeEncode",
				"mimeWordEncode"
			],
			"detectedNames": [
				"AUTH_METHODS",
				"BUFFERSIZE",
				"DEFAULT_TIMEOUT",
				"MIME64CHUNK",
				"MIMECHUNK",
				"Message",
				"SMTPClient",
				"SMTPConnection",
				"SMTPError",
				"SMTPErrorStates",
				"SMTPResponseMonitor",
				"SMTPState",
				"addressparser",
				"getRFC2822Date",
				"getRFC2822DateUTC",
				"mimeEncode",
				"mimeWordEncode"
			],
			"missingNames": []
		},
		{
			"name": "stdio",
			"transpiled": true,
			"expectedNames": [
				"getopt",
				"read",
				"readLine",
				"ProgressBar",
				"ask"
			],
			"detectedNames": [
				"getopt",
				"read",
				"readLine",
				"ProgressBar",
				"ask"
			],
			"missingNames": []
		},
		{
			"name": "es6-promisify",
			"transpiled": true,
			"expectedNames": [
				"promisify"
			],
			"detectedNames": [
				"promisify"
			],
			"missingNames": []
		},
		{
			"name": "remarkable",
			"transpiled": true,
			"expectedNames": [
				"Remarkable",
				"utils"
			],
			"detectedNames": [
				"Remarkable",
				"utils"
			],
			"missingNames": []
		},
		{
			"name": "random-js",
			"transpiled": true,
			"expectedNames": [
				"Random",
				"browserCrypto",
				"nativeMath",
				"MersenneTwister19937",
				"nodeCrypto",
				"bool",
				"date",
				"dice",
				"die",
				"hex",
				"int32",
				"int53",
				"int53Full",
				"integer",
				"pick",
				"picker",
				"real",
				"realZeroToOneExclusive",
				"realZeroToOneInclusive",
				"sample",
				"shuffle",
				"string",
				"uint32",
				"uint53",
				"uint53Full",
				"uuid4",
				"createEntropy"
			],
			"detectedNames": [
				"Random",
				"browserCrypto",
				"nativeMath",
				"MersenneTwister19937",
				"nodeCrypto",
				"bool",
				"date",
				"dice",
				"die",
				"hex",
				"int32",
				"int53",
				"int53Full",
				"integer",
				"pick",
				"picker",
				"real",
				"realZeroToOneExclusive",
				"realZeroToOneInclusive",
				"sample",
				"shuffle",
				"string",
				"uint32",
				"uint53",
				"uint53Full",
				"uuid4",
				"createEntropy"
			],
			"missingNames": []
		},
		{
			"name": "lacona-phrase",
			"transpiled": true,
			"expectedNames": [
				"Phrase",
				"Source",
				"createElement"
			],
			"detectedNames": [
				"Phrase",
				"Source",
				"createElement"
			],
			"missingNames": []
		},
		{
			"name": "node-localstorage",
			"transpiled": false,
			"expectedNames": [
				"LocalStorage",
				"JSONStorage",
				"QUOTA_EXCEEDED_ERR"
			],
			"detectedNames": [
				"LocalStorage",
				"JSONStorage",
				"QUOTA_EXCEEDED_ERR"
			],
			"missingNames": []
		},
		{
			"name": "rxjs",
			"transpiled": true,
			"expectedNames": [
				"Observable",
				"ConnectableObservable",
				"GroupedObservable",
				"observable",
				"Subject",
				"BehaviorSubject",
				"ReplaySubject",
				"AsyncSubject",
				"asap",
				"asapScheduler",
				"async",
				"asyncScheduler",
				"queue",
				"queueScheduler",
				"animationFrame",
				"animationFrameScheduler",
				"VirtualTimeScheduler",
				"VirtualAction",
				"Scheduler",
				"Subscription",
				"Subscriber",
				"Notification",
				"NotificationKind",
				"pipe",
				"noop",
				"identity",
				"isObservable",
				"ArgumentOutOfRangeError",
				"EmptyError",
				"ObjectUnsubscribedError",
				"UnsubscriptionError",
				"TimeoutError",
				"bindCallback",
				"bindNodeCallback",
				"combineLatest",
				"concat",
				"defer",
				"empty",
				"forkJoin",
				"from",
				"fromEvent",
				"fromEventPattern",
				"generate",
				"iif",
				"interval",
				"merge",
				"never",
				"of",
				"onErrorResumeNext",
				"pairs",
				"partition",
				"race",
				"range",
				"throwError",
				"timer",
				"using",
				"zip",
				"scheduled",
				"EMPTY",
				"NEVER",
				"config"
			],
			"detectedNames": [
				"Observable",
				"ConnectableObservable",
				"GroupedObservable",
				"observable",
				"Subject",
				"BehaviorSubject",
				"ReplaySubject",
				"AsyncSubject",
				"asap",
				"asapScheduler",
				"async",
				"asyncScheduler",
				"queue",
				"queueScheduler",
				"animationFrame",
				"animationFrameScheduler",
				"VirtualTimeScheduler",
				"VirtualAction",
				"Scheduler",
				"Subscription",
				"Subscriber",
				"Notification",
				"NotificationKind",
				"pipe",
				"noop",
				"identity",
				"isObservable",
				"ArgumentOutOfRangeError",
				"EmptyError",
				"ObjectUnsubscribedError",
				"UnsubscriptionError",
				"TimeoutError",
				"bindCallback",
				"bindNodeCallback",
				"combineLatest",
				"concat",
				"defer",
				"empty",
				"forkJoin",
				"from",
				"fromEvent",
				"fromEventPattern",
				"generate",
				"iif",
				"interval",
				"merge",
				"never",
				"of",
				"onErrorResumeNext",
				"pairs",
				"partition",
				"race",
				"range",
				"throwError",
				"timer",
				"using",
				"zip",
				"scheduled",
				"EMPTY",
				"NEVER",
				"config"
			],
			"missingNames": []
		},
		{
			"name": "webdriverio",
			"transpiled": true,
			"expectedNames": [
				"SevereServiceError",
				"remote",
				"attach",
				"multiremote"
			],
			"detectedNames": [
				"SevereServiceError",
				"remote",
				"attach",
				"multiremote"
			],
			"missingNames": []
		},
		{
			"name": "event-kit",
			"transpiled": false,
			"expectedNames": [
				"Emitter",
				"Disposable",
				"CompositeDisposable"
			],
			"detectedNames": [
				"Emitter",
				"Disposable",
				"CompositeDisposable"
			],
			"missingNames": []
		},
		{
			"name": "snake-case",
			"transpiled": true,
			"expectedNames": [
				"snakeCase"
			],
			"detectedNames": [
				"snakeCase"
			],
			"missingNames": []
		},
		{
			"name": "is-npm",
			"transpiled": false,
			"expectedNames": [
				"isNpmOrYarn",
				"isNpm",
				"isYarn"
			],
			"detectedNames": [
				"isNpmOrYarn",
				"isNpm",
				"isYarn"
			],
			"missingNames": []
		},
		{
			"name": "simple-statistics",
			"transpiled": true,
			"expectedNames": [
				"BayesianClassifier",
				"PerceptronModel",
				"addToMean",
				"average",
				"averageSimple",
				"bayesian",
				"bernoulliDistribution",
				"binomialDistribution",
				"bisect",
				"chiSquaredDistributionTable",
				"chiSquaredGoodnessOfFit",
				"chunk",
				"ckmeans",
				"combinations",
				"combinationsReplacement",
				"combineMeans",
				"combineVariances",
				"cumulativeStdNormalProbability",
				"epsilon",
				"equalIntervalBreaks",
				"erf",
				"errorFunction",
				"extent",
				"extentSorted",
				"factorial",
				"gamma",
				"gammaln",
				"geometricMean",
				"harmonicMean",
				"interquartileRange",
				"inverseErrorFunction",
				"iqr",
				"kde",
				"kernelDensityEstimation",
				"linearRegression",
				"linearRegressionLine",
				"mad",
				"max",
				"maxSorted",
				"mean",
				"meanSimple",
				"median",
				"medianAbsoluteDeviation",
				"medianSorted",
				"min",
				"minSorted",
				"mode",
				"modeFast",
				"modeSorted",
				"numericSort",
				"perceptron",
				"permutationTest",
				"permutationsHeap",
				"poissonDistribution",
				"probit",
				"product",
				"quantile",
				"quantileRank",
				"quantileRankSorted",
				"quantileSorted",
				"quickselect",
				"rSquared",
				"rms",
				"rootMeanSquare",
				"sample",
				"sampleCorrelation",
				"sampleCovariance",
				"sampleKurtosis",
				"sampleSkewness",
				"sampleStandardDeviation",
				"sampleVariance",
				"sampleWithReplacement",
				"shuffle",
				"shuffleInPlace",
				"sign",
				"standardDeviation",
				"standardNormalTable",
				"subtractFromMean",
				"sum",
				"sumNthPowerDeviations",
				"sumSimple",
				"tTest",
				"tTestTwoSample",
				"uniqueCountSorted",
				"variance",
				"zScore"
			],
			"detectedNames": [
				"BayesianClassifier",
				"PerceptronModel",
				"addToMean",
				"average",
				"averageSimple",
				"bayesian",
				"bernoulliDistribution",
				"binomialDistribution",
				"bisect",
				"chiSquaredDistributionTable",
				"chiSquaredGoodnessOfFit",
				"chunk",
				"ckmeans",
				"combinations",
				"combinationsReplacement",
				"combineMeans",
				"combineVariances",
				"cumulativeStdNormalProbability",
				"epsilon",
				"equalIntervalBreaks",
				"erf",
				"errorFunction",
				"extent",
				"extentSorted",
				"factorial",
				"gamma",
				"gammaln",
				"geometricMean",
				"harmonicMean",
				"interquartileRange",
				"inverseErrorFunction",
				"iqr",
				"kde",
				"kernelDensityEstimation",
				"linearRegression",
				"linearRegressionLine",
				"mad",
				"max",
				"maxSorted",
				"mean",
				"meanSimple",
				"median",
				"medianAbsoluteDeviation",
				"medianSorted",
				"min",
				"minSorted",
				"mode",
				"modeFast",
				"modeSorted",
				"numericSort",
				"perceptron",
				"permutationTest",
				"permutationsHeap",
				"poissonDistribution",
				"probit",
				"product",
				"quantile",
				"quantileRank",
				"quantileRankSorted",
				"quantileSorted",
				"quickselect",
				"rSquared",
				"rms",
				"rootMeanSquare",
				"sample",
				"sampleCorrelation",
				"sampleCovariance",
				"sampleKurtosis",
				"sampleSkewness",
				"sampleStandardDeviation",
				"sampleVariance",
				"sampleWithReplacement",
				"shuffle",
				"shuffleInPlace",
				"sign",
				"standardDeviation",
				"standardNormalTable",
				"subtractFromMean",
				"sum",
				"sumNthPowerDeviations",
				"sumSimple",
				"tTest",
				"tTestTwoSample",
				"uniqueCountSorted",
				"variance",
				"zScore"
			],
			"missingNames": []
		},
		{
			"name": "jsdoctypeparser",
			"transpiled": false,
			"expectedNames": [
				"parse",
				"JSDocTypeSyntaxError",
				"JSDocSyntaxError",
				"ClosureSyntaxError",
				"TypeScriptSyntaxError",
				"publish",
				"createDefaultPublisher",
				"traverse",
				"NodeType",
				"SyntaxType"
			],
			"detectedNames": [
				"parse",
				"JSDocTypeSyntaxError",
				"JSDocSyntaxError",
				"ClosureSyntaxError",
				"TypeScriptSyntaxError",
				"publish",
				"createDefaultPublisher",
				"traverse",
				"NodeType",
				"SyntaxType"
			],
			"missingNames": []
		},
		{
			"name": "path-type",
			"transpiled": false,
			"expectedNames": [
				"isFile",
				"isDirectory",
				"isSymlink",
				"isFileSync",
				"isDirectorySync",
				"isSymlinkSync"
			],
			"detectedNames": [
				"isFile",
				"isDirectory",
				"isSymlink",
				"isFileSync",
				"isDirectorySync",
				"isSymlinkSync"
			],
			"missingNames": []
		},
		{
			"name": "param-case",
			"transpiled": true,
			"expectedNames": [
				"paramCase"
			],
			"detectedNames": [
				"paramCase"
			],
			"missingNames": []
		},
		{
			"name": "uri-js",
			"transpiled": true,
			"expectedNames": [
				"SCHEMES",
				"pctEncChar",
				"pctDecChars",
				"parse",
				"removeDotSegments",
				"serialize",
				"resolveComponents",
				"resolve",
				"normalize",
				"equal",
				"escapeComponent",
				"unescapeComponent"
			],
			"detectedNames": [
				"SCHEMES",
				"pctEncChar",
				"pctDecChars",
				"parse",
				"removeDotSegments",
				"serialize",
				"resolveComponents",
				"resolve",
				"normalize",
				"equal",
				"escapeComponent",
				"unescapeComponent"
			],
			"missingNames": []
		},
		{
			"name": "lorem-ipsum",
			"transpiled": true,
			"expectedNames": [
				"LoremIpsum",
				"loremIpsum"
			],
			"detectedNames": [
				"LoremIpsum",
				"loremIpsum"
			],
			"missingNames": []
		},
		{
			"name": "pascal-case",
			"transpiled": true,
			"expectedNames": [
				"pascalCaseTransform",
				"pascalCaseTransformMerge",
				"pascalCase"
			],
			"detectedNames": [
				"pascalCaseTransform",
				"pascalCaseTransformMerge",
				"pascalCase"
			],
			"missingNames": []
		},
		{
			"name": "ml-matrix",
			"transpiled": true,
			"expectedNames": [
				"AbstractMatrix",
				"CHO",
				"CholeskyDecomposition",
				"EVD",
				"EigenvalueDecomposition",
				"LU",
				"LuDecomposition",
				"Matrix",
				"MatrixColumnSelectionView",
				"MatrixColumnView",
				"MatrixFlipColumnView",
				"MatrixFlipRowView",
				"MatrixRowSelectionView",
				"MatrixRowView",
				"MatrixSelectionView",
				"MatrixSubView",
				"MatrixTransposeView",
				"NIPALS",
				"Nipals",
				"QR",
				"QrDecomposition",
				"SVD",
				"SingularValueDecomposition",
				"WrapperMatrix1D",
				"WrapperMatrix2D",
				"correlation",
				"covariance",
				"determinant",
				"inverse",
				"linearDependencies",
				"pseudoInverse",
				"solve",
				"wrap"
			],
			"detectedNames": [
				"AbstractMatrix",
				"CHO",
				"CholeskyDecomposition",
				"EVD",
				"EigenvalueDecomposition",
				"LU",
				"LuDecomposition",
				"Matrix",
				"MatrixColumnSelectionView",
				"MatrixColumnView",
				"MatrixFlipColumnView",
				"MatrixFlipRowView",
				"MatrixRowSelectionView",
				"MatrixRowView",
				"MatrixSelectionView",
				"MatrixSubView",
				"MatrixTransposeView",
				"NIPALS",
				"Nipals",
				"QR",
				"QrDecomposition",
				"SVD",
				"SingularValueDecomposition",
				"WrapperMatrix1D",
				"WrapperMatrix2D",
				"correlation",
				"covariance",
				"determinant",
				"inverse",
				"linearDependencies",
				"pseudoInverse",
				"solve",
				"wrap"
			],
			"missingNames": []
		},
		{
			"name": "phosphor-signaling",
			"transpiled": false,
			"expectedNames": [
				"Signal",
				"disconnectSender",
				"disconnectReceiver",
				"clearSignalData"
			],
			"detectedNames": [
				"Signal",
				"disconnectSender",
				"disconnectReceiver",
				"clearSignalData"
			],
			"missingNames": []
		},
		{
			"name": "upper-case-first",
			"transpiled": true,
			"expectedNames": [
				"upperCaseFirst"
			],
			"detectedNames": [
				"upperCaseFirst"
			],
			"missingNames": []
		},
		{
			"name": "detect-browser",
			"transpiled": true,
			"expectedNames": [
				"BrowserInfo",
				"NodeInfo",
				"SearchBotDeviceInfo",
				"BotInfo",
				"ReactNativeInfo",
				"detect",
				"browserName",
				"parseUserAgent",
				"detectOS",
				"getNodeVersion"
			],
			"detectedNames": [
				"BrowserInfo",
				"NodeInfo",
				"SearchBotDeviceInfo",
				"BotInfo",
				"ReactNativeInfo",
				"detect",
				"browserName",
				"parseUserAgent",
				"detectOS",
				"getNodeVersion"
			],
			"missingNames": []
		},
		{
			"name": "inline-style-prefixer",
			"transpiled": true,
			"expectedNames": [
				"createPrefixer",
				"prefix"
			],
			"detectedNames": [
				"createPrefixer",
				"prefix"
			],
			"missingNames": []
		},
		{
			"name": "title-case",
			"transpiled": true,
			"expectedNames": [
				"titleCase"
			],
			"detectedNames": [
				"titleCase"
			],
			"missingNames": []
		},
		{
			"name": "tapable",
			"transpiled": true,
			"expectedNames": [
				"Tapable",
				"SyncHook",
				"SyncBailHook",
				"SyncWaterfallHook",
				"SyncLoopHook",
				"AsyncParallelHook",
				"AsyncParallelBailHook",
				"AsyncSeriesHook",
				"AsyncSeriesBailHook",
				"AsyncSeriesWaterfallHook",
				"HookMap",
				"MultiHook"
			],
			"detectedNames": [
				"Tapable",
				"SyncHook",
				"SyncBailHook",
				"SyncWaterfallHook",
				"SyncLoopHook",
				"AsyncParallelHook",
				"AsyncParallelBailHook",
				"AsyncSeriesHook",
				"AsyncSeriesBailHook",
				"AsyncSeriesWaterfallHook",
				"HookMap",
				"MultiHook"
			],
			"missingNames": []
		},
		{
			"name": "json2csv",
			"transpiled": false,
			"expectedNames": [
				"Parser",
				"AsyncParser",
				"Transform",
				"parse",
				"parseAsync",
				"transforms"
			],
			"detectedNames": [
				"Parser",
				"AsyncParser",
				"Transform",
				"parse",
				"parseAsync",
				"transforms"
			],
			"missingNames": []
		},
		{
			"name": "redux-actions",
			"transpiled": true,
			"expectedNames": [
				"combineActions",
				"createAction",
				"createActions",
				"createCurriedAction",
				"handleAction",
				"handleActions"
			],
			"detectedNames": [
				"combineActions",
				"createAction",
				"createActions",
				"createCurriedAction",
				"handleAction",
				"handleActions"
			],
			"missingNames": []
		},
		{
			"name": "react-motion",
			"transpiled": true,
			"expectedNames": [
				"Motion",
				"StaggeredMotion",
				"TransitionMotion",
				"spring",
				"presets",
				"stripStyle",
				"reorderKeys"
			],
			"detectedNames": [
				"Motion",
				"StaggeredMotion",
				"TransitionMotion",
				"spring",
				"presets",
				"stripStyle",
				"reorderKeys"
			],
			"missingNames": []
		},
		{
			"name": "most",
			"transpiled": true,
			"expectedNames": [
				"Stream",
				"of",
				"just",
				"empty",
				"never",
				"from",
				"periodic",
				"fromEvent",
				"observe",
				"forEach",
				"drain",
				"loop",
				"scan",
				"reduce",
				"unfold",
				"iterate",
				"generate",
				"concat",
				"startWith",
				"map",
				"constant",
				"tap",
				"ap",
				"transduce",
				"flatMap",
				"chain",
				"join",
				"continueWith",
				"flatMapEnd",
				"concatMap",
				"mergeConcurrently",
				"merge",
				"mergeArray",
				"combine",
				"combineArray",
				"sample",
				"sampleArray",
				"sampleWith",
				"zip",
				"zipArray",
				"switchLatest",
				"switch",
				"filter",
				"skipRepeats",
				"distinct",
				"skipRepeatsWith",
				"distinctBy",
				"take",
				"skip",
				"slice",
				"takeWhile",
				"skipWhile",
				"skipAfter",
				"takeUntil",
				"until",
				"skipUntil",
				"since",
				"during",
				"delay",
				"timestamp",
				"throttle",
				"debounce",
				"fromPromise",
				"awaitPromises",
				"await",
				"recoverWith",
				"flatMapError",
				"throwError",
				"multicast",
				"defaultScheduler",
				"PropagateTask"
			],
			"detectedNames": [
				"Stream",
				"of",
				"just",
				"empty",
				"never",
				"from",
				"periodic",
				"fromEvent",
				"observe",
				"forEach",
				"drain",
				"loop",
				"scan",
				"reduce",
				"unfold",
				"iterate",
				"generate",
				"concat",
				"startWith",
				"map",
				"constant",
				"tap",
				"ap",
				"transduce",
				"flatMap",
				"chain",
				"join",
				"continueWith",
				"flatMapEnd",
				"concatMap",
				"mergeConcurrently",
				"merge",
				"mergeArray",
				"combine",
				"combineArray",
				"sample",
				"sampleArray",
				"sampleWith",
				"zip",
				"zipArray",
				"switchLatest",
				"switch",
				"filter",
				"skipRepeats",
				"distinct",
				"skipRepeatsWith",
				"distinctBy",
				"take",
				"skip",
				"slice",
				"takeWhile",
				"skipWhile",
				"skipAfter",
				"takeUntil",
				"until",
				"skipUntil",
				"since",
				"during",
				"delay",
				"timestamp",
				"throttle",
				"debounce",
				"fromPromise",
				"awaitPromises",
				"await",
				"recoverWith",
				"flatMapError",
				"throwError",
				"multicast",
				"defaultScheduler",
				"PropagateTask"
			],
			"missingNames": []
		}
	],
	"packagesWithSomeNamesDetected": [
		{
			"name": "commander",
			"transpiled": false,
			"expectedNames": [
				"_events",
				"_eventsCount",
				"_maxListeners",
				"commands",
				"options",
				"parent",
				"_allowUnknownOption",
				"_args",
				"rawArgs",
				"_scriptPath",
				"_name",
				"_optionValues",
				"_storeOptionsAsProperties",
				"_passCommandToAction",
				"_actionResults",
				"_actionHandler",
				"_executableHandler",
				"_executableFile",
				"_defaultCommandName",
				"_exitCallback",
				"_aliases",
				"_hidden",
				"_helpFlags",
				"_helpDescription",
				"_helpShortFlag",
				"_helpLongFlag",
				"_hasImplicitHelpCommand",
				"_helpCommandName",
				"_helpCommandnameAndArgs",
				"_helpCommandDescription",
				"program",
				"Command",
				"Option",
				"CommanderError",
				null
			],
			"detectedNames": [
				"program",
				"Command",
				"Option",
				"CommanderError"
			],
			"missingNames": [
				"_events",
				"_eventsCount",
				"_maxListeners",
				"commands",
				"options",
				"parent",
				"_allowUnknownOption",
				"_args",
				"rawArgs",
				"_scriptPath",
				"_name",
				"_optionValues",
				"_storeOptionsAsProperties",
				"_passCommandToAction",
				"_actionResults",
				"_actionHandler",
				"_executableHandler",
				"_executableFile",
				"_defaultCommandName",
				"_exitCallback",
				"_aliases",
				"_hidden",
				"_helpFlags",
				"_helpDescription",
				"_helpShortFlag",
				"_helpLongFlag",
				"_hasImplicitHelpCommand",
				"_helpCommandName",
				"_helpCommandnameAndArgs",
				"_helpCommandDescription",
				null
			]
		},
		{
			"name": "bl",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"prototype",
				"super_",
				"isBufferList",
				"BufferListStream",
				"BufferList"
			],
			"detectedNames": [
				"BufferListStream",
				"BufferList"
			],
			"missingNames": [
				"length",
				"name",
				"prototype",
				"super_",
				"isBufferList"
			]
		},
		{
			"name": "chai",
			"transpiled": false,
			"expectedNames": [
				"version",
				"AssertionError",
				"use",
				"util",
				"config",
				"Assertion",
				"expect",
				"should",
				"Should",
				"assert"
			],
			"detectedNames": [
				"version",
				"AssertionError",
				"use",
				"util",
				"config"
			],
			"missingNames": [
				"Assertion",
				"expect",
				"should",
				"Should",
				"assert"
			]
		},
		{
			"name": "bson",
			"transpiled": false,
			"expectedNames": [
				"BSON_INT32_MAX",
				"BSON_INT32_MIN",
				"BSON_INT64_MAX",
				"BSON_INT64_MIN",
				"JS_INT_MAX",
				"JS_INT_MIN",
				"BSON_DATA_NUMBER",
				"BSON_DATA_STRING",
				"BSON_DATA_OBJECT",
				"BSON_DATA_ARRAY",
				"BSON_DATA_BINARY",
				"BSON_DATA_UNDEFINED",
				"BSON_DATA_OID",
				"BSON_DATA_BOOLEAN",
				"BSON_DATA_DATE",
				"BSON_DATA_NULL",
				"BSON_DATA_REGEXP",
				"BSON_DATA_DBPOINTER",
				"BSON_DATA_CODE",
				"BSON_DATA_SYMBOL",
				"BSON_DATA_CODE_W_SCOPE",
				"BSON_DATA_INT",
				"BSON_DATA_TIMESTAMP",
				"BSON_DATA_LONG",
				"BSON_DATA_DECIMAL128",
				"BSON_DATA_MIN_KEY",
				"BSON_DATA_MAX_KEY",
				"BSON_BINARY_SUBTYPE_DEFAULT",
				"BSON_BINARY_SUBTYPE_FUNCTION",
				"BSON_BINARY_SUBTYPE_BYTE_ARRAY",
				"BSON_BINARY_SUBTYPE_UUID",
				"BSON_BINARY_SUBTYPE_MD5",
				"BSON_BINARY_SUBTYPE_USER_DEFINED",
				"Code",
				"Map",
				"BSONSymbol",
				"DBRef",
				"Binary",
				"ObjectId",
				"Long",
				"Timestamp",
				"Double",
				"Int32",
				"MinKey",
				"MaxKey",
				"BSONRegExp",
				"Decimal128",
				"serialize",
				"serializeWithBufferAndIndex",
				"deserialize",
				"calculateObjectSize",
				"deserializeStream",
				"setInternalBufferSize",
				"ObjectID",
				"EJSON"
			],
			"detectedNames": [
				"BSON_INT32_MAX"
			],
			"missingNames": [
				"BSON_INT32_MIN",
				"BSON_INT64_MAX",
				"BSON_INT64_MIN",
				"JS_INT_MAX",
				"JS_INT_MIN",
				"BSON_DATA_NUMBER",
				"BSON_DATA_STRING",
				"BSON_DATA_OBJECT",
				"BSON_DATA_ARRAY",
				"BSON_DATA_BINARY",
				"BSON_DATA_UNDEFINED",
				"BSON_DATA_OID",
				"BSON_DATA_BOOLEAN",
				"BSON_DATA_DATE",
				"BSON_DATA_NULL",
				"BSON_DATA_REGEXP",
				"BSON_DATA_DBPOINTER",
				"BSON_DATA_CODE",
				"BSON_DATA_SYMBOL",
				"BSON_DATA_CODE_W_SCOPE",
				"BSON_DATA_INT",
				"BSON_DATA_TIMESTAMP",
				"BSON_DATA_LONG",
				"BSON_DATA_DECIMAL128",
				"BSON_DATA_MIN_KEY",
				"BSON_DATA_MAX_KEY",
				"BSON_BINARY_SUBTYPE_DEFAULT",
				"BSON_BINARY_SUBTYPE_FUNCTION",
				"BSON_BINARY_SUBTYPE_BYTE_ARRAY",
				"BSON_BINARY_SUBTYPE_UUID",
				"BSON_BINARY_SUBTYPE_MD5",
				"BSON_BINARY_SUBTYPE_USER_DEFINED",
				"Code",
				"Map",
				"BSONSymbol",
				"DBRef",
				"Binary",
				"ObjectId",
				"Long",
				"Timestamp",
				"Double",
				"Int32",
				"MinKey",
				"MaxKey",
				"BSONRegExp",
				"Decimal128",
				"serialize",
				"serializeWithBufferAndIndex",
				"deserialize",
				"calculateObjectSize",
				"deserializeStream",
				"setInternalBufferSize",
				"ObjectID",
				"EJSON"
			]
		},
		{
			"name": "broccoli-funnel",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"prototype",
				"Funnel"
			],
			"detectedNames": [
				"Funnel"
			],
			"missingNames": [
				"length",
				"name",
				"prototype"
			]
		},
		{
			"name": "globby",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"sync",
				"stream",
				"generateGlobTasks",
				"hasMagic",
				"gitignore"
			],
			"detectedNames": [
				"sync",
				"stream",
				"generateGlobTasks",
				"hasMagic",
				"gitignore"
			],
			"missingNames": [
				"length",
				"name"
			]
		},
		{
			"name": "follow-redirects",
			"transpiled": false,
			"expectedNames": [
				"maxRedirects",
				"maxBodyLength",
				"http",
				"https",
				"wrap"
			],
			"detectedNames": [
				"wrap"
			],
			"missingNames": [
				"maxRedirects",
				"maxBodyLength",
				"http",
				"https"
			]
		},
		{
			"name": "broccoli-merge-trees",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"prototype",
				"MergeTrees"
			],
			"detectedNames": [
				"MergeTrees"
			],
			"missingNames": [
				"length",
				"name",
				"prototype"
			]
		},
		{
			"name": "crc",
			"transpiled": false,
			"expectedNames": [
				"crc1",
				"crc8",
				"crc81wire",
				"crc16",
				"crc16ccitt",
				"crc16modbus",
				"crc16xmodem",
				"crc16kermit",
				"crc24",
				"crc32",
				"crcjam"
			],
			"detectedNames": [
				"crc1"
			],
			"missingNames": [
				"crc8",
				"crc81wire",
				"crc16",
				"crc16ccitt",
				"crc16modbus",
				"crc16xmodem",
				"crc16kermit",
				"crc24",
				"crc32",
				"crcjam"
			]
		},
		{
			"name": "mssql",
			"transpiled": false,
			"expectedNames": [
				"ConnectionPool",
				"Transaction",
				"Request",
				"PreparedStatement",
				"ConnectionError",
				"TransactionError",
				"RequestError",
				"PreparedStatementError",
				"MSSQLError",
				"Table",
				"ISOLATION_LEVEL",
				"TYPES",
				"MAX",
				"map",
				"getTypeByValue",
				"connect",
				"close",
				"on",
				"removeListener",
				"off",
				"query",
				"batch",
				"VarChar",
				"VARCHAR",
				"NVarChar",
				"NVARCHAR",
				"Text",
				"TEXT",
				"Int",
				"INT",
				"BigInt",
				"BIGINT",
				"TinyInt",
				"TINYINT",
				"SmallInt",
				"SMALLINT",
				"Bit",
				"BIT",
				"Float",
				"FLOAT",
				"Numeric",
				"NUMERIC",
				"Decimal",
				"DECIMAL",
				"Real",
				"REAL",
				"Date",
				"DATE",
				"DateTime",
				"DATETIME",
				"DateTime2",
				"DATETIME2",
				"DateTimeOffset",
				"DATETIMEOFFSET",
				"SmallDateTime",
				"SMALLDATETIME",
				"Time",
				"TIME",
				"UniqueIdentifier",
				"UNIQUEIDENTIFIER",
				"SmallMoney",
				"SMALLMONEY",
				"Money",
				"MONEY",
				"Binary",
				"BINARY",
				"VarBinary",
				"VARBINARY",
				"Image",
				"IMAGE",
				"Xml",
				"XML",
				"Char",
				"CHAR",
				"NChar",
				"NCHAR",
				"NText",
				"NTEXT",
				"TVP",
				"UDT",
				"Geography",
				"GEOGRAPHY",
				"Geometry",
				"GEOMETRY",
				"Variant",
				"VARIANT",
				"Promise"
			],
			"detectedNames": [
				"Promise"
			],
			"missingNames": [
				"ConnectionPool",
				"Transaction",
				"Request",
				"PreparedStatement",
				"ConnectionError",
				"TransactionError",
				"RequestError",
				"PreparedStatementError",
				"MSSQLError",
				"Table",
				"ISOLATION_LEVEL",
				"TYPES",
				"MAX",
				"map",
				"getTypeByValue",
				"connect",
				"close",
				"on",
				"removeListener",
				"off",
				"query",
				"batch",
				"VarChar",
				"VARCHAR",
				"NVarChar",
				"NVARCHAR",
				"Text",
				"TEXT",
				"Int",
				"INT",
				"BigInt",
				"BIGINT",
				"TinyInt",
				"TINYINT",
				"SmallInt",
				"SMALLINT",
				"Bit",
				"BIT",
				"Float",
				"FLOAT",
				"Numeric",
				"NUMERIC",
				"Decimal",
				"DECIMAL",
				"Real",
				"REAL",
				"Date",
				"DATE",
				"DateTime",
				"DATETIME",
				"DateTime2",
				"DATETIME2",
				"DateTimeOffset",
				"DATETIMEOFFSET",
				"SmallDateTime",
				"SMALLDATETIME",
				"Time",
				"TIME",
				"UniqueIdentifier",
				"UNIQUEIDENTIFIER",
				"SmallMoney",
				"SMALLMONEY",
				"Money",
				"MONEY",
				"Binary",
				"BINARY",
				"VarBinary",
				"VARBINARY",
				"Image",
				"IMAGE",
				"Xml",
				"XML",
				"Char",
				"CHAR",
				"NChar",
				"NCHAR",
				"NText",
				"NTEXT",
				"TVP",
				"UDT",
				"Geography",
				"GEOGRAPHY",
				"Geometry",
				"GEOMETRY",
				"Variant",
				"VARIANT"
			]
		},
		{
			"name": "radium",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"prototype",
				"Plugins",
				"Style",
				"StyleRoot",
				"getState",
				"keyframes",
				"TestMode"
			],
			"detectedNames": [
				"Plugins",
				"Style",
				"StyleRoot",
				"getState",
				"keyframes"
			],
			"missingNames": [
				"length",
				"name",
				"prototype",
				"TestMode"
			]
		},
		{
			"name": "johnny-five",
			"transpiled": false,
			"expectedNames": [
				"Accelerometer",
				"Animation",
				"Altimeter",
				"Barometer",
				"Board",
				"Button",
				"Color",
				"Collection",
				"Compass",
				"ESC",
				"Expander",
				"Fn",
				"GPS",
				"Gyro",
				"Hygrometer",
				"SIP",
				"Keypad",
				"LCD",
				"Led",
				"LedControl",
				"Light",
				"Joystick",
				"Motion",
				"Motor",
				"Orientation",
				"Piezo",
				"Pin",
				"Proximity",
				"ReflectanceArray",
				"Relay",
				"Repl",
				"Sensor",
				"Servo",
				"ShiftRegister",
				"Stepper",
				"Switch",
				"Thermometer",
				"IMU",
				"Multi",
				"Luxmeter",
				"Magnetometer",
				"Ping",
				"Sonar",
				"Boards",
				"Buttons",
				"ESCs",
				"Leds",
				"Motors",
				"Pins",
				"Relays",
				"Sensors",
				"Servos",
				"Switches",
				"Touchpad"
			],
			"detectedNames": [
				"Accelerometer",
				"IMU",
				"Multi",
				"Luxmeter",
				"Magnetometer",
				"Ping",
				"Sonar",
				"Boards",
				"Buttons",
				"ESCs",
				"Leds",
				"Motors",
				"Pins",
				"Relays",
				"Sensors",
				"Servos",
				"Switches",
				"Touchpad"
			],
			"missingNames": [
				"Animation",
				"Altimeter",
				"Barometer",
				"Board",
				"Button",
				"Color",
				"Collection",
				"Compass",
				"ESC",
				"Expander",
				"Fn",
				"GPS",
				"Gyro",
				"Hygrometer",
				"SIP",
				"Keypad",
				"LCD",
				"Led",
				"LedControl",
				"Light",
				"Joystick",
				"Motion",
				"Motor",
				"Orientation",
				"Piezo",
				"Pin",
				"Proximity",
				"ReflectanceArray",
				"Relay",
				"Repl",
				"Sensor",
				"Servo",
				"ShiftRegister",
				"Stepper",
				"Switch",
				"Thermometer"
			]
		},
		{
			"name": "fast-json-patch",
			"transpiled": false,
			"expectedNames": [
				"JsonPatchError",
				"deepClone",
				"getValueByPointer",
				"applyOperation",
				"applyPatch",
				"applyReducer",
				"validator",
				"validate",
				"_areEquals",
				"unobserve",
				"observe",
				"generate",
				"compare",
				"escapePathComponent",
				"unescapePathComponent"
			],
			"detectedNames": [
				"JsonPatchError",
				"deepClone",
				"escapePathComponent",
				"unescapePathComponent"
			],
			"missingNames": [
				"getValueByPointer",
				"applyOperation",
				"applyPatch",
				"applyReducer",
				"validator",
				"validate",
				"_areEquals",
				"unobserve",
				"observe",
				"generate",
				"compare"
			]
		}
	],
	"packagesWithNoNamesDetected": [
		{
			"name": "winston",
			"transpiled": false,
			"expectedNames": [
				"version",
				"transports",
				"config",
				"addColors",
				"format",
				"createLogger",
				"ExceptionHandler",
				"RejectionHandler",
				"Container",
				"Transport",
				"loggers",
				"error",
				"warn",
				"info",
				"http",
				"verbose",
				"debug",
				"silly",
				"log",
				"query",
				"stream",
				"add",
				"remove",
				"clear",
				"profile",
				"startTimer",
				"handleExceptions",
				"unhandleExceptions",
				"handleRejections",
				"unhandleRejections",
				"configure",
				"level",
				"exceptions",
				"exitOnError",
				"cli",
				"padLevels",
				"stripColors",
				"addRewriter",
				"addFilter",
				"clone",
				"extend",
				"emitErrs",
				"levelLength",
				"Logger"
			],
			"detectedNames": [],
			"missingNames": [
				"version",
				"transports",
				"config",
				"addColors",
				"format",
				"createLogger",
				"ExceptionHandler",
				"RejectionHandler",
				"Container",
				"Transport",
				"loggers",
				"error",
				"warn",
				"info",
				"http",
				"verbose",
				"debug",
				"silly",
				"log",
				"query",
				"stream",
				"add",
				"remove",
				"clear",
				"profile",
				"startTimer",
				"handleExceptions",
				"unhandleExceptions",
				"handleRejections",
				"unhandleRejections",
				"configure",
				"level",
				"exceptions",
				"exitOnError",
				"cli",
				"padLevels",
				"stripColors",
				"addRewriter",
				"addFilter",
				"clone",
				"extend",
				"emitErrs",
				"levelLength",
				"Logger"
			]
		},
		{
			"name": "formidable",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"arguments",
				"caller",
				"prototype",
				"super_",
				"IncomingForm"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"name",
				"arguments",
				"caller",
				"prototype",
				"super_",
				"IncomingForm"
			]
		},
		{
			"name": "log4js",
			"transpiled": false,
			"expectedNames": [
				"getLogger",
				"configure",
				"shutdown",
				"connectLogger",
				"levels",
				"addLayout"
			],
			"detectedNames": [],
			"missingNames": [
				"getLogger",
				"configure",
				"shutdown",
				"connectLogger",
				"levels",
				"addLayout"
			]
		},
		{
			"name": "got",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"extend",
				"paginate",
				"stream",
				"get",
				"post",
				"put",
				"patch",
				"head",
				"delete",
				"RequestError",
				"CacheError",
				"ReadError",
				"HTTPError",
				"MaxRedirectsError",
				"TimeoutError",
				"ParseError",
				"CancelError",
				"UnsupportedProtocolError",
				"UploadError",
				"mergeOptions",
				"defaults"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"name",
				"extend",
				"paginate",
				"stream",
				"get",
				"post",
				"put",
				"patch",
				"head",
				"delete",
				"RequestError",
				"CacheError",
				"ReadError",
				"HTTPError",
				"MaxRedirectsError",
				"TimeoutError",
				"ParseError",
				"CancelError",
				"UnsupportedProtocolError",
				"UploadError",
				"mergeOptions",
				"defaults"
			]
		},
		{
			"name": "istextorbinary",
			"transpiled": false,
			"expectedNames": [
				"isTextSync",
				"isTextCallback",
				"isTextPromise",
				"isText",
				"isBinarySync",
				"isBinaryCallback",
				"isBinaryPromise",
				"isBinary",
				"getEncoding",
				"getEncodingSync",
				"getEncodingPromise",
				"getEncodingCallback"
			],
			"detectedNames": [],
			"missingNames": [
				"isTextSync",
				"isTextCallback",
				"isTextPromise",
				"isText",
				"isBinarySync",
				"isBinaryCallback",
				"isBinaryPromise",
				"isBinary",
				"getEncoding",
				"getEncodingSync",
				"getEncodingPromise",
				"getEncodingCallback"
			]
		},
		{
			"name": "protobufjs",
			"transpiled": false,
			"expectedNames": [
				"build",
				"Writer",
				"BufferWriter",
				"Reader",
				"BufferReader",
				"util",
				"rpc",
				"roots",
				"configure",
				"load",
				"loadSync",
				"encoder",
				"decoder",
				"verifier",
				"converter",
				"ReflectionObject",
				"Namespace",
				"Root",
				"Enum",
				"Type",
				"Field",
				"OneOf",
				"MapField",
				"Service",
				"Method",
				"Message",
				"wrappers",
				"types",
				"tokenize",
				"parse",
				"common"
			],
			"detectedNames": [],
			"missingNames": [
				"build",
				"Writer",
				"BufferWriter",
				"Reader",
				"BufferReader",
				"util",
				"rpc",
				"roots",
				"configure",
				"load",
				"loadSync",
				"encoder",
				"decoder",
				"verifier",
				"converter",
				"ReflectionObject",
				"Namespace",
				"Root",
				"Enum",
				"Type",
				"Field",
				"OneOf",
				"MapField",
				"Service",
				"Method",
				"Message",
				"wrappers",
				"types",
				"tokenize",
				"parse",
				"common"
			]
		},
		{
			"name": "debounce",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"arguments",
				"caller",
				"prototype",
				"debounce"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"name",
				"arguments",
				"caller",
				"prototype",
				"debounce"
			]
		},
		{
			"name": "micromatch",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"match",
				"matcher",
				"isMatch",
				"any",
				"not",
				"contains",
				"matchKeys",
				"some",
				"every",
				"all",
				"capture",
				"makeRe",
				"scan",
				"parse",
				"braces",
				"braceExpand"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"name",
				"match",
				"matcher",
				"isMatch",
				"any",
				"not",
				"contains",
				"matchKeys",
				"some",
				"every",
				"all",
				"capture",
				"makeRe",
				"scan",
				"parse",
				"braces",
				"braceExpand"
			]
		},
		{
			"name": "sift",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"createQueryTester",
				"EqualsOperation",
				"createEqualsOperation",
				"$eq",
				"$ne",
				"$or",
				"$nor",
				"$elemMatch",
				"$nin",
				"$in",
				"$lt",
				"$lte",
				"$gt",
				"$gte",
				"$mod",
				"$exists",
				"$regex",
				"$not",
				"$type",
				"$and",
				"$all",
				"$size",
				"$options",
				"$where"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"name",
				"createQueryTester",
				"EqualsOperation",
				"createEqualsOperation",
				"$eq",
				"$ne",
				"$or",
				"$nor",
				"$elemMatch",
				"$nin",
				"$in",
				"$lt",
				"$lte",
				"$gt",
				"$gte",
				"$mod",
				"$exists",
				"$regex",
				"$not",
				"$type",
				"$and",
				"$all",
				"$size",
				"$options",
				"$where"
			]
		},
		{
			"name": "tap-parser",
			"transpiled": false,
			"expectedNames": [
				"length",
				"prototype",
				"parse",
				"stringify",
				"name"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"prototype",
				"parse",
				"stringify",
				"name"
			]
		},
		{
			"name": "deep-diff",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"arguments",
				"caller",
				"prototype",
				"diff",
				"orderIndependentDiff",
				"observableDiff",
				"orderIndependentObservableDiff",
				"orderIndepHash",
				"applyDiff",
				"applyChange",
				"revertChange",
				"isConflict",
				"DeepDiff"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"name",
				"arguments",
				"caller",
				"prototype",
				"diff",
				"orderIndependentDiff",
				"observableDiff",
				"orderIndependentObservableDiff",
				"orderIndepHash",
				"applyDiff",
				"applyChange",
				"revertChange",
				"isConflict",
				"DeepDiff"
			]
		},
		{
			"name": "jsonld",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"arguments",
				"caller",
				"prototype",
				"compact",
				"expand",
				"flatten",
				"frame",
				"link",
				"canonize",
				"normalize",
				"fromRDF",
				"toRDF",
				"createNodeMap",
				"merge",
				"documentLoader",
				"_documentLoader",
				"get",
				"processContext",
				"getContextValue",
				"documentLoaders",
				"useDocumentLoader",
				"registerRDFParser",
				"unregisterRDFParser",
				"url",
				"util",
				"IdentifierIssuer",
				"clone",
				"asArray",
				"buildHeaders",
				"parseLinkHeader",
				"validateTypeValue",
				"hasProperty",
				"hasValue",
				"addValue",
				"getValues",
				"removeProperty",
				"removeValue",
				"relabelBlankNodes",
				"compareValues",
				"compareShortestLeast",
				"promises",
				"RequestQueue",
				"JsonLdProcessor"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"name",
				"arguments",
				"caller",
				"prototype",
				"compact",
				"expand",
				"flatten",
				"frame",
				"link",
				"canonize",
				"normalize",
				"fromRDF",
				"toRDF",
				"createNodeMap",
				"merge",
				"documentLoader",
				"_documentLoader",
				"get",
				"processContext",
				"getContextValue",
				"documentLoaders",
				"useDocumentLoader",
				"registerRDFParser",
				"unregisterRDFParser",
				"url",
				"util",
				"IdentifierIssuer",
				"clone",
				"asArray",
				"buildHeaders",
				"parseLinkHeader",
				"validateTypeValue",
				"hasProperty",
				"hasValue",
				"addValue",
				"getValues",
				"removeProperty",
				"removeValue",
				"relabelBlankNodes",
				"compareValues",
				"compareShortestLeast",
				"promises",
				"RequestQueue",
				"JsonLdProcessor"
			]
		},
		{
			"name": "fbemitter",
			"transpiled": false,
			"expectedNames": [
				"EventEmitter",
				"EmitterSubscription"
			],
			"detectedNames": [],
			"missingNames": [
				"EventEmitter",
				"EmitterSubscription"
			]
		},
		{
			"name": "thunks",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"prototype",
				"NAME",
				"VERSION",
				"Scope",
				"thunk",
				"promise",
				"thunkify",
				"thunks",
				"slice",
				"pruneErrorStack",
				"isGeneratorFn",
				"isAsyncFn",
				"isThunkableFn"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"name",
				"prototype",
				"NAME",
				"VERSION",
				"Scope",
				"thunk",
				"promise",
				"thunkify",
				"thunks",
				"slice",
				"pruneErrorStack",
				"isGeneratorFn",
				"isAsyncFn",
				"isThunkableFn"
			]
		},
		{
			"name": "ignore",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"isPathValid"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"name",
				"isPathValid"
			]
		},
		{
			"name": "broccoli",
			"transpiled": false,
			"expectedNames": [
				"Builder",
				"loadBrocfile",
				"server",
				"getMiddleware",
				"Watcher",
				"WatcherAdapter",
				"cli"
			],
			"detectedNames": [],
			"missingNames": [
				"Builder",
				"loadBrocfile",
				"server",
				"getMiddleware",
				"Watcher",
				"WatcherAdapter",
				"cli"
			]
		},
		{
			"name": "decimal.js",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"prototype",
				"ROUND_UP",
				"ROUND_DOWN",
				"ROUND_CEIL",
				"ROUND_FLOOR",
				"ROUND_HALF_UP",
				"ROUND_HALF_DOWN",
				"ROUND_HALF_EVEN",
				"ROUND_HALF_CEIL",
				"ROUND_HALF_FLOOR",
				"EUCLID",
				"set",
				"config",
				"clone",
				"isDecimal",
				"abs",
				"acos",
				"acosh",
				"add",
				"asin",
				"asinh",
				"atan",
				"atanh",
				"atan2",
				"cbrt",
				"ceil",
				"cos",
				"cosh",
				"div",
				"exp",
				"floor",
				"hypot",
				"ln",
				"log",
				"log10",
				"log2",
				"max",
				"min",
				"mod",
				"mul",
				"pow",
				"random",
				"round",
				"sign",
				"sin",
				"sinh",
				"sqrt",
				"sub",
				"tan",
				"tanh",
				"trunc",
				"precision",
				"rounding",
				"toExpNeg",
				"toExpPos",
				"maxE",
				"minE",
				"modulo",
				"crypto",
				"Decimal"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"name",
				"prototype",
				"ROUND_UP",
				"ROUND_DOWN",
				"ROUND_CEIL",
				"ROUND_FLOOR",
				"ROUND_HALF_UP",
				"ROUND_HALF_DOWN",
				"ROUND_HALF_EVEN",
				"ROUND_HALF_CEIL",
				"ROUND_HALF_FLOOR",
				"EUCLID",
				"set",
				"config",
				"clone",
				"isDecimal",
				"abs",
				"acos",
				"acosh",
				"add",
				"asin",
				"asinh",
				"atan",
				"atanh",
				"atan2",
				"cbrt",
				"ceil",
				"cos",
				"cosh",
				"div",
				"exp",
				"floor",
				"hypot",
				"ln",
				"log",
				"log10",
				"log2",
				"max",
				"min",
				"mod",
				"mul",
				"pow",
				"random",
				"round",
				"sign",
				"sin",
				"sinh",
				"sqrt",
				"sub",
				"tan",
				"tanh",
				"trunc",
				"precision",
				"rounding",
				"toExpNeg",
				"toExpPos",
				"maxE",
				"minE",
				"modulo",
				"crypto",
				"Decimal"
			]
		},
		{
			"name": "tsd",
			"transpiled": true,
			"expectedNames": [
				"expectType",
				"expectNotType",
				"expectAssignable",
				"expectNotAssignable",
				"expectError",
				"expectDeprecated",
				"expectNotDeprecated"
			],
			"detectedNames": [],
			"missingNames": [
				"expectType",
				"expectNotType",
				"expectAssignable",
				"expectNotAssignable",
				"expectError",
				"expectDeprecated",
				"expectNotDeprecated"
			]
		},
		{
			"name": "parse-code-context",
			"transpiled": false,
			"expectedNames": [
				"length",
				"name",
				"Parser"
			],
			"detectedNames": [],
			"missingNames": [
				"length",
				"name",
				"Parser"
			]
		},
		{
			"name": "interlude",
			"transpiled": false,
			"expectedNames": [
				"id",
				"noop",
				"not",
				"all",
				"any",
				"none",
				"elem",
				"notElem",
				"extend",
				"gcd",
				"lcm",
				"even",
				"odd",
				"pluck",
				"first",
				"last",
				"firstBy",
				"lastBy",
				"range",
				"interval",
				"replicate",
				"iterate",
				"zipWith2",
				"zipWith3",
				"zipWith4",
				"zip2",
				"zip3",
				"zip4",
				"zipWith",
				"zip",
				"reduce",
				"map",
				"filter",
				"plus2",
				"plus3",
				"plus4",
				"times2",
				"times3",
				"times4",
				"and2",
				"and3",
				"and4",
				"or2",
				"or3",
				"or4",
				"append2",
				"append3",
				"append4",
				"prepend2",
				"sum",
				"product",
				"and",
				"or",
				"flatten",
				"minus2",
				"divide2",
				"div2",
				"mod2",
				"pow2",
				"log2",
				"eq2",
				"neq2",
				"gt2",
				"lt2",
				"gte2",
				"lte2",
				"plus",
				"minus",
				"times",
				"divide",
				"div",
				"mod",
				"pow",
				"log",
				"append",
				"prepend",
				"gt",
				"lt",
				"eq",
				"neq",
				"gte",
				"lte",
				"equality",
				"equalityBy",
				"compare",
				"compareBy",
				"comparing",
				"maximum",
				"minimum",
				"maximumBy",
				"minimumBy",
				"isSubsetOf",
				"isProperSubsetOf",
				"indexOfBy",
				"insertBy",
				"insert",
				"deleteBy",
				"delete",
				"intersectBy",
				"intersect",
				"uniqueBy",
				"unique",
				"groupBy",
				"group",
				"unionBy",
				"union",
				"differenceBy",
				"difference"
			],
			"detectedNames": [],
			"missingNames": [
				"id",
				"noop",
				"not",
				"all",
				"any",
				"none",
				"elem",
				"notElem",
				"extend",
				"gcd",
				"lcm",
				"even",
				"odd",
				"pluck",
				"first",
				"last",
				"firstBy",
				"lastBy",
				"range",
				"interval",
				"replicate",
				"iterate",
				"zipWith2",
				"zipWith3",
				"zipWith4",
				"zip2",
				"zip3",
				"zip4",
				"zipWith",
				"zip",
				"reduce",
				"map",
				"filter",
				"plus2",
				"plus3",
				"plus4",
				"times2",
				"times3",
				"times4",
				"and2",
				"and3",
				"and4",
				"or2",
				"or3",
				"or4",
				"append2",
				"append3",
				"append4",
				"prepend2",
				"sum",
				"product",
				"and",
				"or",
				"flatten",
				"minus2",
				"divide2",
				"div2",
				"mod2",
				"pow2",
				"log2",
				"eq2",
				"neq2",
				"gt2",
				"lt2",
				"gte2",
				"lte2",
				"plus",
				"minus",
				"times",
				"divide",
				"div",
				"mod",
				"pow",
				"log",
				"append",
				"prepend",
				"gt",
				"lt",
				"eq",
				"neq",
				"gte",
				"lte",
				"equality",
				"equalityBy",
				"compare",
				"compareBy",
				"comparing",
				"maximum",
				"minimum",
				"maximumBy",
				"minimumBy",
				"isSubsetOf",
				"isProperSubsetOf",
				"indexOfBy",
				"insertBy",
				"insert",
				"deleteBy",
				"delete",
				"intersectBy",
				"intersect",
				"uniqueBy",
				"unique",
				"groupBy",
				"group",
				"unionBy",
				"union",
				"differenceBy",
				"difference"
			]
		},
		{
			"name": "fb",
			"transpiled": true,
			"expectedNames": [
				"api",
				"napi",
				"parseSignedRequest",
				"getLoginUrl",
				"options",
				"extend",
				"getAccessToken",
				"setAccessToken",
				"withAccessToken",
				"FB",
				"Facebook",
				"FacebookApiException",
				"version"
			],
			"detectedNames": [],
			"missingNames": [
				"api",
				"napi",
				"parseSignedRequest",
				"getLoginUrl",
				"options",
				"extend",
				"getAccessToken",
				"setAccessToken",
				"withAccessToken",
				"FB",
				"Facebook",
				"FacebookApiException",
				"version"
			]
		}
	]
}