[
	{
		"name": "prop-types",
		"expectedNames": [
			"array",
			"bool",
			"func",
			"number",
			"object",
			"string",
			"symbol",
			"any",
			"arrayOf",
			"element",
			"elementType",
			"instanceOf",
			"node",
			"objectOf",
			"oneOf",
			"oneOfType",
			"shape",
			"exact",
			"checkPropTypes",
			"resetWarningCache",
			"PropTypes"
		],
		"detectedNames": [],
		"missingNames": [
			"array",
			"bool",
			"func",
			"number",
			"object",
			"string",
			"symbol",
			"any",
			"arrayOf",
			"element",
			"elementType",
			"instanceOf",
			"node",
			"objectOf",
			"oneOf",
			"oneOfType",
			"shape",
			"exact",
			"checkPropTypes",
			"resetWarningCache",
			"PropTypes"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-dom",
		"expectedNames": [
			"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED",
			"createPortal",
			"findDOMNode",
			"flushSync",
			"hydrate",
			"render",
			"unmountComponentAtNode",
			"unstable_batchedUpdates",
			"unstable_createPortal",
			"unstable_renderSubtreeIntoContainer",
			"version"
		],
		"detectedNames": [
			"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED",
			"createPortal",
			"findDOMNode",
			"flushSync",
			"hydrate",
			"render",
			"unmountComponentAtNode",
			"unstable_batchedUpdates",
			"unstable_createPortal",
			"unstable_renderSubtreeIntoContainer",
			"version"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bluebird",
		"expectedNames": [
			"TypeError",
			"RangeError",
			"CancellationError",
			"TimeoutError",
			"OperationalError",
			"RejectionError",
			"AggregateError",
			"_peekContext",
			"onPossiblyUnhandledRejection",
			"onUnhandledRejectionHandled",
			"longStackTraces",
			"hasLongStackTraces",
			"config",
			"getNewLibraryCopy",
			"is",
			"fromCallback",
			"fromNode",
			"all",
			"cast",
			"fulfilled",
			"resolve",
			"rejected",
			"reject",
			"setScheduler",
			"pending",
			"defer",
			"method",
			"try",
			"attempt",
			"bind",
			"PromiseInspection",
			"join",
			"Promise",
			"version",
			"coroutine",
			"spawn",
			"map",
			"promisify",
			"promisifyAll",
			"props",
			"race",
			"reduce",
			"settle",
			"allSettled",
			"some",
			"_SomePromiseArray",
			"delay",
			"using",
			"any",
			"each",
			"mapSeries",
			"filter",
			"noConflict"
		],
		"detectedNames": [],
		"missingNames": [
			"TypeError",
			"RangeError",
			"CancellationError",
			"TimeoutError",
			"OperationalError",
			"RejectionError",
			"AggregateError",
			"_peekContext",
			"onPossiblyUnhandledRejection",
			"onUnhandledRejectionHandled",
			"longStackTraces",
			"hasLongStackTraces",
			"config",
			"getNewLibraryCopy",
			"is",
			"fromCallback",
			"fromNode",
			"all",
			"cast",
			"fulfilled",
			"resolve",
			"rejected",
			"reject",
			"setScheduler",
			"pending",
			"defer",
			"method",
			"try",
			"attempt",
			"bind",
			"PromiseInspection",
			"join",
			"Promise",
			"version",
			"coroutine",
			"spawn",
			"map",
			"promisify",
			"promisifyAll",
			"props",
			"race",
			"reduce",
			"settle",
			"allSettled",
			"some",
			"_SomePromiseArray",
			"delay",
			"using",
			"any",
			"each",
			"mapSeries",
			"filter",
			"noConflict"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "underscore",
		"expectedNames": [
			"VERSION",
			"iteratee",
			"templateSettings",
			"after",
			"all",
			"allKeys",
			"any",
			"assign",
			"before",
			"bind",
			"bindAll",
			"chain",
			"chunk",
			"clone",
			"collect",
			"compact",
			"compose",
			"constant",
			"contains",
			"countBy",
			"create",
			"debounce",
			"defaults",
			"defer",
			"delay",
			"detect",
			"difference",
			"drop",
			"each",
			"escape",
			"every",
			"extend",
			"extendOwn",
			"filter",
			"find",
			"findIndex",
			"findKey",
			"findLastIndex",
			"findWhere",
			"first",
			"flatten",
			"foldl",
			"foldr",
			"forEach",
			"functions",
			"groupBy",
			"has",
			"head",
			"identity",
			"include",
			"includes",
			"indexBy",
			"indexOf",
			"initial",
			"inject",
			"intersection",
			"invert",
			"invoke",
			"isArguments",
			"isArray",
			"isArrayBuffer",
			"isBoolean",
			"isDataView",
			"isDate",
			"isElement",
			"isEmpty",
			"isEqual",
			"isError",
			"isFinite",
			"isFunction",
			"isMap",
			"isMatch",
			"isNaN",
			"isNull",
			"isNumber",
			"isObject",
			"isRegExp",
			"isSet",
			"isString",
			"isSymbol",
			"isTypedArray",
			"isUndefined",
			"isWeakMap",
			"isWeakSet",
			"keys",
			"last",
			"lastIndexOf",
			"map",
			"mapObject",
			"matcher",
			"matches",
			"max",
			"memoize",
			"methods",
			"min",
			"mixin",
			"negate",
			"noop",
			"now",
			"object",
			"omit",
			"once",
			"pairs",
			"partial",
			"partition",
			"pick",
			"pluck",
			"property",
			"propertyOf",
			"random",
			"range",
			"reduce",
			"reduceRight",
			"reject",
			"rest",
			"restArguments",
			"result",
			"sample",
			"select",
			"shuffle",
			"size",
			"some",
			"sortBy",
			"sortedIndex",
			"tail",
			"take",
			"tap",
			"template",
			"throttle",
			"times",
			"toArray",
			"transpose",
			"unescape",
			"union",
			"uniq",
			"unique",
			"uniqueId",
			"unzip",
			"values",
			"where",
			"without",
			"wrap",
			"zip",
			"_"
		],
		"detectedNames": [],
		"missingNames": [
			"VERSION",
			"iteratee",
			"templateSettings",
			"after",
			"all",
			"allKeys",
			"any",
			"assign",
			"before",
			"bind",
			"bindAll",
			"chain",
			"chunk",
			"clone",
			"collect",
			"compact",
			"compose",
			"constant",
			"contains",
			"countBy",
			"create",
			"debounce",
			"defaults",
			"defer",
			"delay",
			"detect",
			"difference",
			"drop",
			"each",
			"escape",
			"every",
			"extend",
			"extendOwn",
			"filter",
			"find",
			"findIndex",
			"findKey",
			"findLastIndex",
			"findWhere",
			"first",
			"flatten",
			"foldl",
			"foldr",
			"forEach",
			"functions",
			"groupBy",
			"has",
			"head",
			"identity",
			"include",
			"includes",
			"indexBy",
			"indexOf",
			"initial",
			"inject",
			"intersection",
			"invert",
			"invoke",
			"isArguments",
			"isArray",
			"isArrayBuffer",
			"isBoolean",
			"isDataView",
			"isDate",
			"isElement",
			"isEmpty",
			"isEqual",
			"isError",
			"isFinite",
			"isFunction",
			"isMap",
			"isMatch",
			"isNaN",
			"isNull",
			"isNumber",
			"isObject",
			"isRegExp",
			"isSet",
			"isString",
			"isSymbol",
			"isTypedArray",
			"isUndefined",
			"isWeakMap",
			"isWeakSet",
			"keys",
			"last",
			"lastIndexOf",
			"map",
			"mapObject",
			"matcher",
			"matches",
			"max",
			"memoize",
			"methods",
			"min",
			"mixin",
			"negate",
			"noop",
			"now",
			"object",
			"omit",
			"once",
			"pairs",
			"partial",
			"partition",
			"pick",
			"pluck",
			"property",
			"propertyOf",
			"random",
			"range",
			"reduce",
			"reduceRight",
			"reject",
			"rest",
			"restArguments",
			"result",
			"sample",
			"select",
			"shuffle",
			"size",
			"some",
			"sortBy",
			"sortedIndex",
			"tail",
			"take",
			"tap",
			"template",
			"throttle",
			"times",
			"toArray",
			"transpose",
			"unescape",
			"union",
			"uniq",
			"unique",
			"uniqueId",
			"unzip",
			"values",
			"where",
			"without",
			"wrap",
			"zip",
			"_"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vue",
		"expectedNames": [
			"util",
			"set",
			"delete",
			"nextTick",
			"observable",
			"options",
			"use",
			"mixin",
			"cid",
			"extend",
			"component",
			"directive",
			"filter",
			"version"
		],
		"detectedNames": [],
		"missingNames": [
			"util",
			"set",
			"delete",
			"nextTick",
			"observable",
			"options",
			"use",
			"mixin",
			"cid",
			"extend",
			"component",
			"directive",
			"filter",
			"version"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "axios",
		"expectedNames": [
			"request",
			"getUri",
			"delete",
			"get",
			"head",
			"options",
			"post",
			"put",
			"patch",
			"defaults",
			"interceptors",
			"Axios",
			"create",
			"Cancel",
			"CancelToken",
			"isCancel",
			"all",
			"spread"
		],
		"detectedNames": [],
		"missingNames": [
			"request",
			"getUri",
			"delete",
			"get",
			"head",
			"options",
			"post",
			"put",
			"patch",
			"defaults",
			"interceptors",
			"Axios",
			"create",
			"Cancel",
			"CancelToken",
			"isCancel",
			"all",
			"spread"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "tslib",
		"transpiled": true,
		"expectedNames": [
			"__extends",
			"__assign",
			"__rest",
			"__decorate",
			"__param",
			"__metadata",
			"__awaiter",
			"__generator",
			"__exportStar",
			"__createBinding",
			"__values",
			"__read",
			"__spread",
			"__spreadArrays",
			"__await",
			"__asyncGenerator",
			"__asyncDelegator",
			"__asyncValues",
			"__makeTemplateObject",
			"__importStar",
			"__importDefault",
			"__classPrivateFieldGet",
			"__classPrivateFieldSet"
		],
		"detectedNames": [],
		"missingNames": [
			"__extends",
			"__assign",
			"__rest",
			"__decorate",
			"__param",
			"__metadata",
			"__awaiter",
			"__generator",
			"__exportStar",
			"__createBinding",
			"__values",
			"__read",
			"__spread",
			"__spreadArrays",
			"__await",
			"__asyncGenerator",
			"__asyncDelegator",
			"__asyncValues",
			"__makeTemplateObject",
			"__importStar",
			"__importDefault",
			"__classPrivateFieldGet",
			"__classPrivateFieldSet"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mkdirp",
		"expectedNames": [
			"sync",
			"native",
			"manual",
			"nativeSync",
			"manualSync"
		],
		"detectedNames": [],
		"missingNames": [
			"sync",
			"native",
			"manual",
			"nativeSync",
			"manualSync"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "glob",
		"expectedNames": [
			"sync",
			"GlobSync",
			"glob",
			"hasMagic",
			"Glob"
		],
		"detectedNames": [],
		"missingNames": [
			"sync",
			"GlobSync",
			"glob",
			"hasMagic",
			"Glob"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "yargs",
		"expectedNames": [
			"middleware",
			"scriptName",
			"$0",
			"parsed",
			"getContext",
			"reset",
			"resetOptions",
			"boolean",
			"array",
			"number",
			"normalize",
			"count",
			"string",
			"requiresArg",
			"skipValidation",
			"nargs",
			"choices",
			"alias",
			"defaults",
			"describe",
			"demandOption",
			"coerce",
			"config",
			"example",
			"command",
			"commandDir",
			"require",
			"required",
			"demand",
			"demandCommand",
			"getDemandedOptions",
			"getDemandedCommands",
			"deprecateOption",
			"getDeprecatedOptions",
			"implies",
			"conflicts",
			"usage",
			"epilog",
			"epilogue",
			"fail",
			"onFinishCommand",
			"getHandlerFinishCommand",
			"check",
			"global",
			"pkgConf",
			"parse",
			"_getParseContext",
			"_hasParseCallback",
			"options",
			"option",
			"getOptions",
			"positional",
			"group",
			"getGroups",
			"env",
			"wrap",
			"strict",
			"getStrict",
			"strictCommands",
			"getStrictCommands",
			"strictOptions",
			"getStrictOptions",
			"parserConfiguration",
			"getParserConfiguration",
			"showHelp",
			"version",
			"help",
			"addHelpOpt",
			"showHidden",
			"addShowHiddenOpt",
			"hide",
			"showHelpOnFail",
			"exitProcess",
			"getExitProcess",
			"completion",
			"showCompletionScript",
			"getCompletion",
			"locale",
			"updateLocale",
			"updateStrings",
			"detectLocale",
			"getDetectLocale",
			"exit",
			"_getLoggerInstance",
			"_hasOutput",
			"_setHasOutput",
			"recommendCommands",
			"getUsageInstance",
			"getValidationInstance",
			"getCommandInstance",
			"terminalWidth",
			"argv",
			"_parseArgs",
			"_copyDoubleDash",
			"_runValidation"
		],
		"detectedNames": [],
		"missingNames": [
			"middleware",
			"scriptName",
			"$0",
			"parsed",
			"getContext",
			"reset",
			"resetOptions",
			"boolean",
			"array",
			"number",
			"normalize",
			"count",
			"string",
			"requiresArg",
			"skipValidation",
			"nargs",
			"choices",
			"alias",
			"defaults",
			"describe",
			"demandOption",
			"coerce",
			"config",
			"example",
			"command",
			"commandDir",
			"require",
			"required",
			"demand",
			"demandCommand",
			"getDemandedOptions",
			"getDemandedCommands",
			"deprecateOption",
			"getDeprecatedOptions",
			"implies",
			"conflicts",
			"usage",
			"epilog",
			"epilogue",
			"fail",
			"onFinishCommand",
			"getHandlerFinishCommand",
			"check",
			"global",
			"pkgConf",
			"parse",
			"_getParseContext",
			"_hasParseCallback",
			"options",
			"option",
			"getOptions",
			"positional",
			"group",
			"getGroups",
			"env",
			"wrap",
			"strict",
			"getStrict",
			"strictCommands",
			"getStrictCommands",
			"strictOptions",
			"getStrictOptions",
			"parserConfiguration",
			"getParserConfiguration",
			"showHelp",
			"version",
			"help",
			"addHelpOpt",
			"showHidden",
			"addShowHiddenOpt",
			"hide",
			"showHelpOnFail",
			"exitProcess",
			"getExitProcess",
			"completion",
			"showCompletionScript",
			"getCompletion",
			"locale",
			"updateLocale",
			"updateStrings",
			"detectLocale",
			"getDetectLocale",
			"exit",
			"_getLoggerInstance",
			"_hasOutput",
			"_setHasOutput",
			"recommendCommands",
			"getUsageInstance",
			"getValidationInstance",
			"getCommandInstance",
			"terminalWidth",
			"argv",
			"_parseArgs",
			"_copyDoubleDash",
			"_runValidation"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "colors",
		"expectedNames": [
			"themes",
			"styles",
			"supportsColor",
			"enabled",
			"enable",
			"disable",
			"strip",
			"stripColors",
			"stylize",
			"setTheme",
			"trap",
			"zalgo",
			"maps",
			"america",
			"zebra",
			"rainbow",
			"random"
		],
		"detectedNames": [],
		"missingNames": [
			"themes",
			"styles",
			"supportsColor",
			"enabled",
			"enable",
			"disable",
			"strip",
			"stripColors",
			"stylize",
			"setTheme",
			"trap",
			"zalgo",
			"maps",
			"america",
			"zebra",
			"rainbow",
			"random"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "inquirer",
		"expectedNames": [
			"prompts",
			"Separator",
			"ui",
			"createPromptModule",
			"prompt",
			"registerPrompt",
			"restoreDefaultPrompts"
		],
		"detectedNames": [],
		"missingNames": [
			"prompts",
			"Separator",
			"ui",
			"createPromptModule",
			"prompt",
			"registerPrompt",
			"restoreDefaultPrompts"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "webpack",
		"expectedNames": [
			"version",
			"WebpackOptionsDefaulter",
			"WebpackOptionsApply",
			"Compiler",
			"MultiCompiler",
			"NodeEnvironmentPlugin",
			"validate",
			"validateSchema",
			"WebpackOptionsValidationError",
			"AutomaticPrefetchPlugin",
			"BannerPlugin",
			"CachePlugin",
			"ContextExclusionPlugin",
			"ContextReplacementPlugin",
			"DefinePlugin",
			"Dependency",
			"DllPlugin",
			"DllReferencePlugin",
			"EnvironmentPlugin",
			"EvalDevToolModulePlugin",
			"EvalSourceMapDevToolPlugin",
			"ExtendedAPIPlugin",
			"ExternalsPlugin",
			"HashedModuleIdsPlugin",
			"HotModuleReplacementPlugin",
			"IgnorePlugin",
			"LibraryTemplatePlugin",
			"LoaderOptionsPlugin",
			"LoaderTargetPlugin",
			"MemoryOutputFileSystem",
			"Module",
			"ModuleFilenameHelpers",
			"NamedChunksPlugin",
			"NamedModulesPlugin",
			"NoEmitOnErrorsPlugin",
			"NormalModuleReplacementPlugin",
			"PrefetchPlugin",
			"ProgressPlugin",
			"ProvidePlugin",
			"SetVarMainTemplatePlugin",
			"SingleEntryPlugin",
			"SourceMapDevToolPlugin",
			"Stats",
			"Template",
			"UmdMainTemplatePlugin",
			"WatchIgnorePlugin",
			"dependencies",
			"optimize",
			"web",
			"webworker",
			"node",
			"debug",
			"util"
		],
		"detectedNames": [
			"version",
			"dependencies",
			"optimize",
			"web",
			"webworker",
			"node",
			"debug",
			"util"
		],
		"missingNames": [
			"WebpackOptionsDefaulter",
			"WebpackOptionsApply",
			"Compiler",
			"MultiCompiler",
			"NodeEnvironmentPlugin",
			"validate",
			"validateSchema",
			"WebpackOptionsValidationError",
			"AutomaticPrefetchPlugin",
			"BannerPlugin",
			"CachePlugin",
			"ContextExclusionPlugin",
			"ContextReplacementPlugin",
			"DefinePlugin",
			"Dependency",
			"DllPlugin",
			"DllReferencePlugin",
			"EnvironmentPlugin",
			"EvalDevToolModulePlugin",
			"EvalSourceMapDevToolPlugin",
			"ExtendedAPIPlugin",
			"ExternalsPlugin",
			"HashedModuleIdsPlugin",
			"HotModuleReplacementPlugin",
			"IgnorePlugin",
			"LibraryTemplatePlugin",
			"LoaderOptionsPlugin",
			"LoaderTargetPlugin",
			"MemoryOutputFileSystem",
			"Module",
			"ModuleFilenameHelpers",
			"NamedChunksPlugin",
			"NamedModulesPlugin",
			"NoEmitOnErrorsPlugin",
			"NormalModuleReplacementPlugin",
			"PrefetchPlugin",
			"ProgressPlugin",
			"ProvidePlugin",
			"SetVarMainTemplatePlugin",
			"SingleEntryPlugin",
			"SourceMapDevToolPlugin",
			"Stats",
			"Template",
			"UmdMainTemplatePlugin",
			"WatchIgnorePlugin"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "uuid",
		"transpiled": true,
		"expectedNames": [
			"v1",
			"v3",
			"v4",
			"v5",
			"NIL",
			"version",
			"validate",
			"stringify",
			"parse"
		],
		"detectedNames": [
			"v1",
			"v3",
			"v4",
			"v5",
			"NIL",
			"version",
			"validate",
			"stringify",
			"parse"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "classnames",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "minimist",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "body-parser",
		"expectedNames": [
			"json",
			"raw",
			"text",
			"urlencoded"
		],
		"detectedNames": [
			"json",
			"raw",
			"text",
			"urlencoded"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rxjs",
		"transpiled": true,
		"expectedNames": [
			"Observable",
			"ConnectableObservable",
			"GroupedObservable",
			"observable",
			"Subject",
			"BehaviorSubject",
			"ReplaySubject",
			"AsyncSubject",
			"asap",
			"asapScheduler",
			"async",
			"asyncScheduler",
			"queue",
			"queueScheduler",
			"animationFrame",
			"animationFrameScheduler",
			"VirtualTimeScheduler",
			"VirtualAction",
			"Scheduler",
			"Subscription",
			"Subscriber",
			"Notification",
			"NotificationKind",
			"pipe",
			"noop",
			"identity",
			"isObservable",
			"ArgumentOutOfRangeError",
			"EmptyError",
			"ObjectUnsubscribedError",
			"UnsubscriptionError",
			"TimeoutError",
			"bindCallback",
			"bindNodeCallback",
			"combineLatest",
			"concat",
			"defer",
			"empty",
			"forkJoin",
			"from",
			"fromEvent",
			"fromEventPattern",
			"generate",
			"iif",
			"interval",
			"merge",
			"never",
			"of",
			"onErrorResumeNext",
			"pairs",
			"partition",
			"race",
			"range",
			"throwError",
			"timer",
			"using",
			"zip",
			"scheduled",
			"EMPTY",
			"NEVER",
			"config"
		],
		"detectedNames": [
			"Observable",
			"ConnectableObservable",
			"GroupedObservable",
			"observable",
			"Subject",
			"BehaviorSubject",
			"ReplaySubject",
			"AsyncSubject",
			"asap",
			"asapScheduler",
			"async",
			"asyncScheduler",
			"queue",
			"queueScheduler",
			"animationFrame",
			"animationFrameScheduler",
			"VirtualTimeScheduler",
			"VirtualAction",
			"Scheduler",
			"Subscription",
			"Subscriber",
			"Notification",
			"NotificationKind",
			"pipe",
			"noop",
			"identity",
			"isObservable",
			"ArgumentOutOfRangeError",
			"EmptyError",
			"ObjectUnsubscribedError",
			"UnsubscriptionError",
			"TimeoutError",
			"bindCallback",
			"bindNodeCallback",
			"combineLatest",
			"concat",
			"defer",
			"empty",
			"forkJoin",
			"from",
			"fromEvent",
			"fromEventPattern",
			"generate",
			"iif",
			"interval",
			"merge",
			"never",
			"of",
			"onErrorResumeNext",
			"pairs",
			"partition",
			"race",
			"range",
			"throwError",
			"timer",
			"using",
			"zip",
			"scheduled",
			"EMPTY",
			"NEVER",
			"config"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "jquery",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "yeoman-generator",
		"expectedNames": [
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"detectedNames": [],
		"missingNames": [
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "through2",
		"expectedNames": [
			"ctor",
			"obj"
		],
		"detectedNames": [
			"ctor",
			"obj"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-core",
		"transpiled": true,
		"expectedNames": [
			"File",
			"options",
			"buildExternalHelpers",
			"template",
			"resolvePlugin",
			"resolvePreset",
			"version",
			"util",
			"messages",
			"types",
			"traverse",
			"OptionManager",
			"Pipeline",
			"analyse",
			"transform",
			"transformFromAst",
			"Plugin",
			"transformFile",
			"transformFileSync"
		],
		"detectedNames": [
			"File",
			"options",
			"buildExternalHelpers",
			"template",
			"resolvePlugin",
			"resolvePreset",
			"version",
			"util",
			"messages",
			"types",
			"traverse",
			"OptionManager",
			"Pipeline",
			"analyse",
			"transform",
			"transformFromAst",
			"Plugin",
			"transformFile",
			"transformFileSync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "core-js",
		"expectedNames": [
			"global",
			"clearInterval",
			"clearTimeout",
			"setInterval",
			"setTimeout",
			"queueMicrotask",
			"clearImmediate",
			"setImmediate"
		],
		"detectedNames": [],
		"missingNames": [
			"global",
			"clearInterval",
			"clearTimeout",
			"setInterval",
			"setTimeout",
			"queueMicrotask",
			"clearImmediate",
			"setImmediate"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "semver",
		"expectedNames": [
			"re",
			"src",
			"tokens",
			"SEMVER_SPEC_VERSION",
			"SemVer",
			"compareIdentifiers",
			"rcompareIdentifiers",
			"parse",
			"valid",
			"clean",
			"inc",
			"diff",
			"major",
			"minor",
			"patch",
			"prerelease",
			"compare",
			"rcompare",
			"compareLoose",
			"compareBuild",
			"sort",
			"rsort",
			"gt",
			"lt",
			"eq",
			"neq",
			"gte",
			"lte",
			"cmp",
			"coerce",
			"Comparator",
			"Range",
			"satisfies",
			"toComparators",
			"maxSatisfying",
			"minSatisfying",
			"minVersion",
			"validRange",
			"outside",
			"gtr",
			"ltr",
			"intersects",
			"simplifyRange",
			"subset"
		],
		"detectedNames": [
			"re"
		],
		"missingNames": [
			"src",
			"tokens",
			"SEMVER_SPEC_VERSION",
			"SemVer",
			"compareIdentifiers",
			"rcompareIdentifiers",
			"parse",
			"valid",
			"clean",
			"inc",
			"diff",
			"major",
			"minor",
			"patch",
			"prerelease",
			"compare",
			"rcompare",
			"compareLoose",
			"compareBuild",
			"sort",
			"rsort",
			"gt",
			"lt",
			"eq",
			"neq",
			"gte",
			"lte",
			"cmp",
			"coerce",
			"Comparator",
			"Range",
			"satisfies",
			"toComparators",
			"maxSatisfying",
			"minSatisfying",
			"minVersion",
			"validRange",
			"outside",
			"gtr",
			"ltr",
			"intersects",
			"simplifyRange",
			"subset"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-loader",
		"expectedNames": [
			"custom"
		],
		"detectedNames": [
			"custom"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cheerio",
		"expectedNames": [
			"load",
			"html",
			"xml",
			"text",
			"parseHTML",
			"root",
			"contains",
			"version"
		],
		"detectedNames": [
			"version"
		],
		"missingNames": [
			"load",
			"html",
			"xml",
			"text",
			"parseHTML",
			"root",
			"contains"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rimraf",
		"expectedNames": [
			"sync"
		],
		"detectedNames": [],
		"missingNames": [
			"sync"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "q",
		"expectedNames": [
			"resolve",
			"nextTick",
			"longStackSupport",
			"defer",
			"Promise",
			"promise",
			"passByCopy",
			"join",
			"race",
			"makePromise",
			"tap",
			"when",
			"thenResolve",
			"thenReject",
			"nearer",
			"isPromise",
			"isPromiseAlike",
			"isPending",
			"isFulfilled",
			"isRejected",
			"resetUnhandledRejections",
			"getUnhandledReasons",
			"stopUnhandledRejectionTracking",
			"reject",
			"fulfill",
			"master",
			"spread",
			"async",
			"spawn",
			"return",
			"promised",
			"dispatch",
			"get",
			"set",
			"delete",
			"del",
			"post",
			"mapply",
			"invoke",
			"mcall",
			"send",
			"fapply",
			"fcall",
			"try",
			"fbind",
			"keys",
			"all",
			"any",
			"allResolved",
			"allSettled",
			"catch",
			"fail",
			"progress",
			"finally",
			"fin",
			"done",
			"timeout",
			"delay",
			"nfapply",
			"nfcall",
			"denodeify",
			"nfbind",
			"nbind",
			"npost",
			"nmapply",
			"ninvoke",
			"nmcall",
			"nsend",
			"nodeify",
			"noConflict"
		],
		"detectedNames": [],
		"missingNames": [
			"resolve",
			"nextTick",
			"longStackSupport",
			"defer",
			"Promise",
			"promise",
			"passByCopy",
			"join",
			"race",
			"makePromise",
			"tap",
			"when",
			"thenResolve",
			"thenReject",
			"nearer",
			"isPromise",
			"isPromiseAlike",
			"isPending",
			"isFulfilled",
			"isRejected",
			"resetUnhandledRejections",
			"getUnhandledReasons",
			"stopUnhandledRejectionTracking",
			"reject",
			"fulfill",
			"master",
			"spread",
			"async",
			"spawn",
			"return",
			"promised",
			"dispatch",
			"get",
			"set",
			"delete",
			"del",
			"post",
			"mapply",
			"invoke",
			"mcall",
			"send",
			"fapply",
			"fcall",
			"try",
			"fbind",
			"keys",
			"all",
			"any",
			"allResolved",
			"allSettled",
			"catch",
			"fail",
			"progress",
			"finally",
			"fin",
			"done",
			"timeout",
			"delay",
			"nfapply",
			"nfcall",
			"denodeify",
			"nfbind",
			"nbind",
			"npost",
			"nmapply",
			"ninvoke",
			"nmcall",
			"nsend",
			"nodeify",
			"noConflict"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint",
		"expectedNames": [
			"Linter",
			"CLIEngine",
			"ESLint",
			"RuleTester",
			"SourceCode"
		],
		"detectedNames": [
			"Linter",
			"CLIEngine",
			"ESLint",
			"RuleTester",
			"SourceCode"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "css-loader",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "shelljs",
		"expectedNames": [
			"cat",
			"cd",
			"chmod",
			"cp",
			"dirs",
			"pushd",
			"popd",
			"echo",
			"tempdir",
			"pwd",
			"exec",
			"ls",
			"find",
			"grep",
			"head",
			"ln",
			"mkdir",
			"rm",
			"mv",
			"sed",
			"set",
			"sort",
			"tail",
			"test",
			"touch",
			"uniq",
			"which",
			"exit",
			"error",
			"ShellString",
			"env",
			"config"
		],
		"detectedNames": [
			"exit",
			"error",
			"ShellString",
			"env",
			"config"
		],
		"missingNames": [
			"cat",
			"cd",
			"chmod",
			"cp",
			"dirs",
			"pushd",
			"popd",
			"echo",
			"tempdir",
			"pwd",
			"exec",
			"ls",
			"find",
			"grep",
			"head",
			"ln",
			"mkdir",
			"rm",
			"mv",
			"sed",
			"set",
			"sort",
			"tail",
			"test",
			"touch",
			"uniq",
			"which"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "dotenv",
		"expectedNames": [
			"config",
			"parse"
		],
		"detectedNames": [
			"config",
			"parse"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "typescript",
		"expectedNames": [
			"ShimCollections",
			"versionMajorMinor",
			"version",
			"Comparison",
			"NativeCollections",
			"Map",
			"Set",
			"getIterator",
			"emptyArray",
			"emptyMap",
			"emptySet",
			"createMap",
			"createMapFromTemplate",
			"length",
			"forEach",
			"forEachRight",
			"firstDefined",
			"firstDefinedIterator",
			"reduceLeftIterator",
			"zipWith",
			"zipToIterator",
			"zipToMap",
			"intersperse",
			"every",
			"find",
			"findLast",
			"findIndex",
			"findLastIndex",
			"findMap",
			"contains",
			"arraysEqual",
			"indexOfAnyCharCode",
			"countWhere",
			"filter",
			"filterMutate",
			"clear",
			"map",
			"mapIterator",
			"sameMap",
			"flatten",
			"flatMap",
			"flatMapToMutable",
			"flatMapIterator",
			"sameFlatMap",
			"mapAllOrFail",
			"mapDefined",
			"mapDefinedIterator",
			"mapDefinedEntries",
			"mapDefinedValues",
			"getOrUpdate",
			"tryAddToSet",
			"emptyIterator",
			"singleIterator",
			"spanMap",
			"mapEntries",
			"some",
			"getRangesWhere",
			"concatenate",
			"indicesOf",
			"deduplicate",
			"insertSorted",
			"sortAndDeduplicate",
			"arrayIsSorted",
			"arrayIsEqualTo",
			"compact",
			"relativeComplement",
			"sum",
			"append",
			"combine",
			"addRange",
			"pushIfUnique",
			"appendIfUnique",
			"sort",
			"arrayIterator",
			"arrayReverseIterator",
			"stableSort",
			"rangeEquals",
			"elementAt",
			"firstOrUndefined",
			"first",
			"lastOrUndefined",
			"last",
			"singleOrUndefined",
			"singleOrMany",
			"replaceElement",
			"binarySearch",
			"binarySearchKey",
			"reduceLeft",
			"hasProperty",
			"getProperty",
			"getOwnKeys",
			"getAllKeys",
			"getOwnValues",
			"getEntries",
			"arrayOf",
			"arrayFrom",
			"assign",
			"equalOwnProperties",
			"arrayToMap",
			"arrayToNumericMap",
			"arrayToMultiMap",
			"group",
			"clone",
			"extend",
			"copyProperties",
			"maybeBind",
			"createMultiMap",
			"createUnderscoreEscapedMultiMap",
			"isArray",
			"toArray",
			"isString",
			"isNumber",
			"tryCast",
			"cast",
			"noop",
			"returnFalse",
			"returnTrue",
			"returnUndefined",
			"identity",
			"toLowerCase",
			"toFileNameLowerCase",
			"notImplemented",
			"memoize",
			"memoizeOne",
			"compose",
			"AssertionLevel",
			"equateValues",
			"equateStringsCaseInsensitive",
			"equateStringsCaseSensitive",
			"compareValues",
			"compareTextSpans",
			"min",
			"compareStringsCaseInsensitive",
			"compareStringsCaseSensitive",
			"getStringComparer",
			"getUILocale",
			"setUILocale",
			"compareStringsCaseSensitiveUI",
			"compareProperties",
			"compareBooleans",
			"getSpellingSuggestion",
			"endsWith",
			"removeSuffix",
			"tryRemoveSuffix",
			"stringContains",
			"removeMinAndVersionNumbers",
			"orderedRemoveItem",
			"orderedRemoveItemAt",
			"unorderedRemoveItemAt",
			"unorderedRemoveItem",
			"createGetCanonicalFileName",
			"patternText",
			"matchedText",
			"findBestPatternMatch",
			"startsWith",
			"removePrefix",
			"tryRemovePrefix",
			"and",
			"or",
			"not",
			"assertType",
			"singleElementArray",
			"enumerateInsertsAndDeletes",
			"fill",
			"cartesianProduct",
			"padLeft",
			"padRight",
			"LogLevel",
			"Debug",
			"timestamp",
			"performance",
			"perfLogger",
			"Version",
			"VersionRange",
			"SyntaxKind",
			"NodeFlags",
			"ModifierFlags",
			"JsxFlags",
			"RelationComparisonResult",
			"GeneratedIdentifierFlags",
			"TokenFlags",
			"FlowFlags",
			"CommentDirectiveType",
			"OperationCanceledException",
			"RefFileKind",
			"StructureIsReused",
			"ExitStatus",
			"UnionReduction",
			"ContextFlags",
			"NodeBuilderFlags",
			"TypeFormatFlags",
			"SymbolFormatFlags",
			"SymbolAccessibility",
			"SyntheticSymbolKind",
			"TypePredicateKind",
			"TypeReferenceSerializationKind",
			"SymbolFlags",
			"EnumKind",
			"CheckFlags",
			"InternalSymbolName",
			"NodeCheckFlags",
			"TypeFlags",
			"ObjectFlags",
			"VarianceFlags",
			"ElementFlags",
			"JsxReferenceKind",
			"SignatureKind",
			"SignatureFlags",
			"IndexKind",
			"TypeMapKind",
			"InferencePriority",
			"InferenceFlags",
			"Ternary",
			"AssignmentDeclarationKind",
			"DiagnosticCategory",
			"diagnosticCategoryName",
			"ModuleResolutionKind",
			"WatchFileKind",
			"WatchDirectoryKind",
			"PollingWatchKind",
			"ModuleKind",
			"JsxEmit",
			"ImportsNotUsedAsValues",
			"NewLineKind",
			"ScriptKind",
			"ScriptTarget",
			"LanguageVariant",
			"WatchDirectoryFlags",
			"CharacterCodes",
			"Extension",
			"TransformFlags",
			"EmitFlags",
			"ExternalEmitHelpers",
			"EmitHint",
			"OuterExpressionKinds",
			"LexicalEnvironmentFlags",
			"BundleFileSectionKind",
			"ListFormat",
			"PragmaKindFlags",
			"commentPragmas",
			"generateDjb2Hash",
			"setStackTraceLimit",
			"FileWatcherEventKind",
			"PollingInterval",
			"missingFileModifiedTime",
			"unchangedPollThresholds",
			"setCustomPollingValues",
			"createDynamicPriorityPollingWatchFile",
			"createSingleFileWatcherPerName",
			"onWatchedFileStat",
			"getFileWatcherEventKind",
			"ignoredPaths",
			"sysLog",
			"setSysLog",
			"createDirectoryWatcherSupportingRecursive",
			"FileSystemEntryKind",
			"createFileWatcherCallback",
			"createSystemWatchFunctions",
			"patchWriteFileEnsuringDirectory",
			"getNodeMajorVersion",
			"sys",
			"directorySeparator",
			"isAnyDirectorySeparator",
			"isUrl",
			"isRootedDiskPath",
			"isDiskPathRoot",
			"pathIsAbsolute",
			"pathIsRelative",
			"hasExtension",
			"fileExtensionIs",
			"fileExtensionIsOneOf",
			"hasTrailingDirectorySeparator",
			"getRootLength",
			"getDirectoryPath",
			"getBaseFileName",
			"getAnyExtensionFromPath",
			"getPathComponents",
			"getPathFromPathComponents",
			"normalizeSlashes",
			"reducePathComponents",
			"combinePaths",
			"resolvePath",
			"getNormalizedPathComponents",
			"getNormalizedAbsolutePath",
			"normalizePath",
			"getNormalizedAbsolutePathWithoutRoot",
			"toPath",
			"normalizePathAndParts",
			"removeTrailingDirectorySeparator",
			"ensureTrailingDirectorySeparator",
			"ensurePathIsNonModuleName",
			"changeAnyExtension",
			"comparePathsCaseSensitive",
			"comparePathsCaseInsensitive",
			"comparePaths",
			"containsPath",
			"startsWithDirectory",
			"getPathComponentsRelativeTo",
			"getRelativePathFromDirectory",
			"convertToRelativePath",
			"getRelativePathFromFile",
			"getRelativePathToDirectoryOrUrl",
			"forEachAncestorDirectory",
			"isNodeModulesDirectory",
			"Diagnostics",
			"tokenIsIdentifierOrKeyword",
			"tokenIsIdentifierOrKeywordOrGreaterThan",
			"isUnicodeIdentifierStart",
			"tokenToString",
			"stringToToken",
			"computeLineStarts",
			"getPositionOfLineAndCharacter",
			"computePositionOfLineAndCharacter",
			"getLineStarts",
			"computeLineAndCharacterOfPosition",
			"computeLineOfPosition",
			"getLinesBetweenPositions",
			"getLineAndCharacterOfPosition",
			"isWhiteSpaceLike",
			"isWhiteSpaceSingleLine",
			"isLineBreak",
			"isOctalDigit",
			"couldStartTrivia",
			"skipTrivia",
			"isShebangTrivia",
			"scanShebangTrivia",
			"forEachLeadingCommentRange",
			"forEachTrailingCommentRange",
			"reduceEachLeadingCommentRange",
			"reduceEachTrailingCommentRange",
			"getLeadingCommentRanges",
			"getTrailingCommentRanges",
			"getShebang",
			"isIdentifierStart",
			"isIdentifierPart",
			"isIdentifierText",
			"createScanner",
			"utf16EncodeAsString",
			"isExternalModuleNameRelative",
			"sortAndDeduplicateDiagnostics",
			"getDefaultLibFileName",
			"textSpanEnd",
			"textSpanIsEmpty",
			"textSpanContainsPosition",
			"textRangeContainsPositionInclusive",
			"textSpanContainsTextSpan",
			"textSpanOverlapsWith",
			"textSpanOverlap",
			"textSpanIntersectsWithTextSpan",
			"textSpanIntersectsWith",
			"decodedTextSpanIntersectsWith",
			"textSpanIntersectsWithPosition",
			"textSpanIntersection",
			"createTextSpan",
			"createTextSpanFromBounds",
			"textChangeRangeNewSpan",
			"textChangeRangeIsUnchanged",
			"createTextChangeRange",
			"unchangedTextChangeRange",
			"collapseTextChangeRangesAcrossMultipleVersions",
			"getTypeParameterOwner",
			"isParameterPropertyDeclaration",
			"isEmptyBindingPattern",
			"isEmptyBindingElement",
			"walkUpBindingElementsAndPatterns",
			"getCombinedModifierFlags",
			"getCombinedNodeFlagsAlwaysIncludeJSDoc",
			"getCombinedNodeFlags",
			"validateLocaleAndSetLanguage",
			"getOriginalNode",
			"isParseTreeNode",
			"getParseTreeNode",
			"escapeLeadingUnderscores",
			"unescapeLeadingUnderscores",
			"idText",
			"symbolName",
			"nodeHasName",
			"getNameOfJSDocTypedef",
			"isNamedDeclaration",
			"getNonAssignedNameOfDeclaration",
			"getNameOfDeclaration",
			"getAssignedName",
			"getJSDocParameterTags",
			"getJSDocParameterTagsNoCache",
			"getJSDocTypeParameterTags",
			"getJSDocTypeParameterTagsNoCache",
			"hasJSDocParameterTags",
			"getJSDocAugmentsTag",
			"getJSDocImplementsTags",
			"getJSDocClassTag",
			"getJSDocPublicTag",
			"getJSDocPublicTagNoCache",
			"getJSDocPrivateTag",
			"getJSDocPrivateTagNoCache",
			"getJSDocProtectedTag",
			"getJSDocProtectedTagNoCache",
			"getJSDocReadonlyTag",
			"getJSDocReadonlyTagNoCache",
			"getJSDocDeprecatedTag",
			"getJSDocDeprecatedTagNoCache",
			"getJSDocEnumTag",
			"getJSDocThisTag",
			"getJSDocReturnTag",
			"getJSDocTemplateTag",
			"getJSDocTypeTag",
			"getJSDocType",
			"getJSDocReturnType",
			"getJSDocTags",
			"getJSDocTagsNoCache",
			"getAllJSDocTags",
			"getAllJSDocTagsOfKind",
			"getEffectiveTypeParameterDeclarations",
			"getEffectiveConstraintOfTypeParameter",
			"isIdentifierOrPrivateIdentifier",
			"isGetOrSetAccessorDeclaration",
			"isPropertyAccessChain",
			"isElementAccessChain",
			"isCallChain",
			"isOptionalChain",
			"isOptionalChainRoot",
			"isExpressionOfOptionalChainRoot",
			"isOutermostOptionalChain",
			"isNullishCoalesce",
			"isConstTypeReference",
			"skipPartiallyEmittedExpressions",
			"isNonNullChain",
			"isBreakOrContinueStatement",
			"isNamedExportBindings",
			"isUnparsedTextLike",
			"isUnparsedNode",
			"isJSDocPropertyLikeTag",
			"isNode",
			"isNodeKind",
			"isToken",
			"isNodeArray",
			"isLiteralKind",
			"isLiteralExpression",
			"isTemplateLiteralKind",
			"isTemplateLiteralToken",
			"isTemplateMiddleOrTemplateTail",
			"isImportOrExportSpecifier",
			"isTypeOnlyImportOrExportDeclaration",
			"isStringTextContainingNode",
			"isGeneratedIdentifier",
			"isPrivateIdentifierPropertyDeclaration",
			"isPrivateIdentifierPropertyAccessExpression",
			"isModifierKind",
			"isParameterPropertyModifier",
			"isClassMemberModifier",
			"isModifier",
			"isEntityName",
			"isPropertyName",
			"isBindingName",
			"isFunctionLike",
			"isFunctionLikeDeclaration",
			"isFunctionLikeKind",
			"isFunctionOrModuleBlock",
			"isClassElement",
			"isClassLike",
			"isAccessor",
			"isMethodOrAccessor",
			"isTypeElement",
			"isClassOrTypeElement",
			"isObjectLiteralElementLike",
			"isTypeNode",
			"isFunctionOrConstructorTypeNode",
			"isBindingPattern",
			"isAssignmentPattern",
			"isArrayBindingElement",
			"isDeclarationBindingElement",
			"isBindingOrAssignmentPattern",
			"isObjectBindingOrAssignmentPattern",
			"isArrayBindingOrAssignmentPattern",
			"isPropertyAccessOrQualifiedNameOrImportTypeNode",
			"isPropertyAccessOrQualifiedName",
			"isCallLikeExpression",
			"isCallOrNewExpression",
			"isTemplateLiteral",
			"isLeftHandSideExpression",
			"isUnaryExpression",
			"isUnaryExpressionWithWrite",
			"isExpression",
			"isAssertionExpression",
			"isNotEmittedOrPartiallyEmittedNode",
			"isIterationStatement",
			"isScopeMarker",
			"hasScopeMarker",
			"needsScopeMarker",
			"isExternalModuleIndicator",
			"isForInOrOfStatement",
			"isConciseBody",
			"isFunctionBody",
			"isForInitializer",
			"isModuleBody",
			"isNamespaceBody",
			"isJSDocNamespaceBody",
			"isNamedImportBindings",
			"isModuleOrEnumDeclaration",
			"isDeclaration",
			"isDeclarationStatement",
			"isStatementButNotDeclaration",
			"isStatement",
			"isStatementOrBlock",
			"isModuleReference",
			"isJsxTagNameExpression",
			"isJsxChild",
			"isJsxAttributeLike",
			"isStringLiteralOrJsxExpression",
			"isJsxOpeningLikeElement",
			"isCaseOrDefaultClause",
			"isJSDocNode",
			"isJSDocCommentContainingNode",
			"isJSDocTag",
			"isSetAccessor",
			"isGetAccessor",
			"hasJSDocNodes",
			"hasType",
			"hasInitializer",
			"hasOnlyExpressionInitializer",
			"isObjectLiteralElement",
			"isTypeReferenceType",
			"guessIndentation",
			"isStringLiteralLike",
			"resolvingEmptyArray",
			"externalHelpersModuleNameText",
			"defaultMaximumTruncationLength",
			"noTruncationMaximumTruncationLength",
			"getDeclarationOfKind",
			"createUnderscoreEscapedMap",
			"hasEntries",
			"createSymbolTable",
			"isTransientSymbol",
			"changesAffectModuleResolution",
			"optionsHaveModuleResolutionChanges",
			"findAncestor",
			"forEachAncestor",
			"forEachEntry",
			"forEachKey",
			"copyEntries",
			"usingSingleLineStringWriter",
			"getFullWidth",
			"getResolvedModule",
			"setResolvedModule",
			"setResolvedTypeReferenceDirective",
			"projectReferenceIsEqualTo",
			"moduleResolutionIsEqualTo",
			"packageIdToString",
			"typeDirectiveIsEqualTo",
			"hasChangesInResolutions",
			"containsParseError",
			"getSourceFileOfNode",
			"isStatementWithLocals",
			"getStartPositionOfLine",
			"nodePosToString",
			"getEndLinePosition",
			"isFileLevelUniqueName",
			"nodeIsMissing",
			"nodeIsPresent",
			"insertStatementsAfterStandardPrologue",
			"insertStatementsAfterCustomPrologue",
			"insertStatementAfterStandardPrologue",
			"insertStatementAfterCustomPrologue",
			"isRecognizedTripleSlashComment",
			"isPinnedComment",
			"createCommentDirectivesMap",
			"getTokenPosOfNode",
			"getNonDecoratorTokenPosOfNode",
			"getSourceTextOfNodeFromSourceFile",
			"getTextOfNodeFromSourceText",
			"getTextOfNode",
			"indexOfNode",
			"getEmitFlags",
			"getLiteralText",
			"getTextOfConstantValue",
			"makeIdentifierFromModuleName",
			"isBlockOrCatchScoped",
			"isCatchClauseVariableDeclarationOrBindingElement",
			"isAmbientModule",
			"isModuleWithStringLiteralName",
			"isNonGlobalAmbientModule",
			"isEffectiveModuleDeclaration",
			"isShorthandAmbientModuleSymbol",
			"isBlockScopedContainerTopLevel",
			"isGlobalScopeAugmentation",
			"isExternalModuleAugmentation",
			"isModuleAugmentationExternal",
			"getNonAugmentationDeclaration",
			"isEffectiveExternalModule",
			"isEffectiveStrictModeSourceFile",
			"isBlockScope",
			"isDeclarationWithTypeParameters",
			"isDeclarationWithTypeParameterChildren",
			"isAnyImportSyntax",
			"isLateVisibilityPaintedStatement",
			"isAnyImportOrReExport",
			"getEnclosingBlockScopeContainer",
			"declarationNameToString",
			"getNameFromIndexInfo",
			"isComputedNonLiteralName",
			"getTextOfPropertyName",
			"entityNameToString",
			"createDiagnosticForNode",
			"createDiagnosticForNodeArray",
			"createDiagnosticForNodeInSourceFile",
			"createDiagnosticForNodeFromMessageChain",
			"createDiagnosticForRange",
			"getSpanOfTokenAtPosition",
			"getErrorSpanForNode",
			"isExternalOrCommonJsModule",
			"isJsonSourceFile",
			"isEnumConst",
			"isDeclarationReadonly",
			"isVarConst",
			"isLet",
			"isSuperCall",
			"isImportCall",
			"isImportMeta",
			"isLiteralImportTypeNode",
			"isPrologueDirective",
			"isCustomPrologue",
			"isHoistedFunction",
			"isHoistedVariableStatement",
			"getLeadingCommentRangesOfNode",
			"getJSDocCommentRanges",
			"fullTripleSlashReferencePathRegEx",
			"fullTripleSlashAMDReferencePathRegEx",
			"isPartOfTypeNode",
			"isChildOfNodeWithKind",
			"forEachReturnStatement",
			"forEachYieldExpression",
			"getRestParameterElementType",
			"getMembersOfDeclaration",
			"isVariableLike",
			"isVariableLikeOrAccessor",
			"isVariableDeclarationInVariableStatement",
			"isValidESSymbolDeclaration",
			"introducesArgumentsExoticObject",
			"unwrapInnermostStatementOfLabel",
			"isFunctionBlock",
			"isObjectLiteralMethod",
			"isObjectLiteralOrClassExpressionMethod",
			"isIdentifierTypePredicate",
			"isThisTypePredicate",
			"getPropertyAssignment",
			"getTsConfigObjectLiteralExpression",
			"getTsConfigPropArrayElementValue",
			"getTsConfigPropArray",
			"getContainingFunction",
			"getContainingFunctionDeclaration",
			"getContainingClass",
			"getThisContainer",
			"isInTopLevelContext",
			"getNewTargetContainer",
			"getSuperContainer",
			"getImmediatelyInvokedFunctionExpression",
			"isSuperOrSuperProperty",
			"isSuperProperty",
			"isThisProperty",
			"getEntityNameFromTypeNode",
			"getInvokedExpression",
			"nodeCanBeDecorated",
			"nodeIsDecorated",
			"nodeOrChildIsDecorated",
			"childIsDecorated",
			"isJSXTagName",
			"isExpressionNode",
			"isInExpressionContext",
			"isPartOfTypeQuery",
			"isExternalModuleImportEqualsDeclaration",
			"getExternalModuleImportEqualsDeclarationExpression",
			"isInternalModuleImportEqualsDeclaration",
			"isSourceFileJS",
			"isSourceFileNotJS",
			"isInJSFile",
			"isInJsonFile",
			"isSourceFileNotJson",
			"isInJSDoc",
			"isJSDocIndexSignature",
			"isRequireCall",
			"isRequireVariableDeclaration",
			"isRequireVariableStatement",
			"isSingleOrDoubleQuote",
			"isStringDoubleQuoted",
			"getDeclarationOfExpando",
			"isAssignmentDeclaration",
			"getEffectiveInitializer",
			"getDeclaredExpandoInitializer",
			"getAssignedExpandoInitializer",
			"getExpandoInitializer",
			"isDefaultedExpandoInitializer",
			"getNameOfExpando",
			"getRightMostAssignedExpression",
			"isExportsIdentifier",
			"isModuleIdentifier",
			"isModuleExportsAccessExpression",
			"getAssignmentDeclarationKind",
			"isBindableObjectDefinePropertyCall",
			"isLiteralLikeAccess",
			"isLiteralLikeElementAccess",
			"isBindableStaticAccessExpression",
			"isBindableStaticElementAccessExpression",
			"isBindableStaticNameExpression",
			"getNameOrArgument",
			"getElementOrPropertyAccessArgumentExpressionOrName",
			"getElementOrPropertyAccessName",
			"getAssignmentDeclarationPropertyAccessKind",
			"getInitializerOfBinaryExpression",
			"isPrototypePropertyAssignment",
			"isSpecialPropertyDeclaration",
			"setValueDeclaration",
			"isFunctionSymbol",
			"importFromModuleSpecifier",
			"tryGetImportFromModuleSpecifier",
			"getExternalModuleName",
			"getNamespaceDeclarationNode",
			"isDefaultImport",
			"forEachImportClauseDeclaration",
			"hasQuestionToken",
			"isJSDocConstructSignature",
			"isJSDocTypeAlias",
			"isTypeAlias",
			"getSingleInitializerOfVariableStatementOrPropertyDeclaration",
			"getSingleVariableOfVariableStatement",
			"getJSDocCommentsAndTags",
			"getParameterSymbolFromJSDoc",
			"getHostSignatureFromJSDoc",
			"getEffectiveJSDocHost",
			"getJSDocHost",
			"getTypeParameterFromJsDoc",
			"hasRestParameter",
			"isRestParameter",
			"hasTypeArguments",
			"AssignmentKind",
			"getAssignmentTargetKind",
			"isAssignmentTarget",
			"isNodeWithPossibleHoistedDeclaration",
			"isValueSignatureDeclaration",
			"walkUpParenthesizedTypes",
			"walkUpParenthesizedExpressions",
			"skipParentheses",
			"isDeleteTarget",
			"isNodeDescendantOf",
			"isDeclarationName",
			"getDeclarationFromName",
			"isLiteralComputedPropertyDeclarationName",
			"isIdentifierName",
			"isAliasSymbolDeclaration",
			"getAliasDeclarationFromName",
			"isAliasableExpression",
			"exportAssignmentIsAlias",
			"getExportAssignmentExpression",
			"getPropertyAssignmentAliasLikeExpression",
			"getEffectiveBaseTypeNode",
			"getClassExtendsHeritageElement",
			"getEffectiveImplementsTypeNodes",
			"getAllSuperTypeNodes",
			"getInterfaceBaseTypeNodes",
			"getHeritageClause",
			"getAncestor",
			"isKeyword",
			"isContextualKeyword",
			"isNonContextualKeyword",
			"isFutureReservedKeyword",
			"isStringANonContextualKeyword",
			"isStringAKeyword",
			"isIdentifierANonContextualKeyword",
			"isTrivia",
			"FunctionFlags",
			"getFunctionFlags",
			"isAsyncFunction",
			"isStringOrNumericLiteralLike",
			"isSignedNumericLiteral",
			"hasDynamicName",
			"isDynamicName",
			"isWellKnownSymbolSyntactically",
			"getPropertyNameForPropertyNameNode",
			"isPropertyNameLiteral",
			"getTextOfIdentifierOrLiteral",
			"getEscapedTextOfIdentifierOrLiteral",
			"getPropertyNameForUniqueESSymbol",
			"getPropertyNameForKnownSymbolName",
			"getSymbolNameForPrivateIdentifier",
			"isKnownSymbol",
			"isESSymbolIdentifier",
			"isPushOrUnshiftIdentifier",
			"isParameterDeclaration",
			"getRootDeclaration",
			"nodeStartsNewLexicalEnvironment",
			"nodeIsSynthesized",
			"getOriginalSourceFile",
			"Associativity",
			"getExpressionAssociativity",
			"getOperatorAssociativity",
			"getExpressionPrecedence",
			"getOperator",
			"OperatorPrecedence",
			"getOperatorPrecedence",
			"getBinaryOperatorPrecedence",
			"createDiagnosticCollection",
			"hasInvalidEscape",
			"escapeString",
			"escapeNonAsciiString",
			"escapeJsxAttributeString",
			"stripQuotes",
			"isIntrinsicJsxName",
			"getIndentString",
			"getIndentSize",
			"createTextWriter",
			"getTrailingSemicolonDeferringWriter",
			"hostUsesCaseSensitiveFileNames",
			"hostGetCanonicalFileName",
			"getResolvedExternalModuleName",
			"getExternalModuleNameFromDeclaration",
			"getExternalModuleNameFromPath",
			"getOwnEmitOutputFilePath",
			"getDeclarationEmitOutputFilePath",
			"getDeclarationEmitOutputFilePathWorker",
			"outFile",
			"getSourceFilesToEmit",
			"sourceFileMayBeEmitted",
			"getSourceFilePathInNewDir",
			"getSourceFilePathInNewDirWorker",
			"writeFile",
			"writeFileEnsuringDirectories",
			"getLineOfLocalPosition",
			"getLineOfLocalPositionFromLineMap",
			"getFirstConstructorWithBody",
			"getSetAccessorValueParameter",
			"getSetAccessorTypeAnnotationNode",
			"getThisParameter",
			"parameterIsThisKeyword",
			"isThisIdentifier",
			"identifierIsThisKeyword",
			"getAllAccessorDeclarations",
			"getEffectiveTypeAnnotationNode",
			"getTypeAnnotationNode",
			"getEffectiveReturnTypeNode",
			"getJSDocTypeParameterDeclarations",
			"getEffectiveSetAccessorTypeAnnotationNode",
			"emitNewLineBeforeLeadingComments",
			"emitNewLineBeforeLeadingCommentsOfPosition",
			"emitNewLineBeforeLeadingCommentOfPosition",
			"emitComments",
			"emitDetachedComments",
			"writeCommentRange",
			"hasEffectiveModifiers",
			"hasSyntacticModifiers",
			"hasEffectiveModifier",
			"hasSyntacticModifier",
			"hasStaticModifier",
			"hasEffectiveReadonlyModifier",
			"getSelectedEffectiveModifierFlags",
			"getSelectedSyntacticModifierFlags",
			"getEffectiveModifierFlags",
			"getEffectiveModifierFlagsAlwaysIncludeJSDoc",
			"getSyntacticModifierFlags",
			"getEffectiveModifierFlagsNoCache",
			"getSyntacticModifierFlagsNoCache",
			"modifiersToFlags",
			"modifierToFlag",
			"isLogicalOperator",
			"isLogicalOrCoalescingAssignmentOperator",
			"isLogicalOrCoalescingAssignmentExpression",
			"isAssignmentOperator",
			"tryGetClassExtendingExpressionWithTypeArguments",
			"tryGetClassImplementingOrExtendingExpressionWithTypeArguments",
			"isAssignmentExpression",
			"isDestructuringAssignment",
			"isExpressionWithTypeArgumentsInClassExtendsClause",
			"isEntityNameExpression",
			"getFirstIdentifier",
			"isDottedName",
			"isPropertyAccessEntityNameExpression",
			"tryGetPropertyAccessOrIdentifierToString",
			"isPrototypeAccess",
			"isRightSideOfQualifiedNameOrPropertyAccess",
			"isEmptyObjectLiteral",
			"isEmptyArrayLiteral",
			"getLocalSymbolForExportDefault",
			"tryExtractTSExtension",
			"convertToBase64",
			"base64encode",
			"base64decode",
			"readJson",
			"directoryProbablyExists",
			"getNewLineCharacter",
			"createRange",
			"moveRangeEnd",
			"moveRangePos",
			"moveRangePastDecorators",
			"moveRangePastModifiers",
			"isCollapsedRange",
			"createTokenRange",
			"rangeIsOnSingleLine",
			"rangeStartPositionsAreOnSameLine",
			"rangeEndPositionsAreOnSameLine",
			"rangeStartIsOnSameLineAsRangeEnd",
			"rangeEndIsOnSameLineAsRangeStart",
			"getLinesBetweenRangeEndAndRangeStart",
			"getLinesBetweenRangeEndPositions",
			"isNodeArrayMultiLine",
			"positionsAreOnSameLine",
			"getStartPositionOfRange",
			"getLinesBetweenPositionAndPrecedingNonWhitespaceCharacter",
			"getLinesBetweenPositionAndNextNonWhitespaceCharacter",
			"isDeclarationNameOfEnumOrNamespace",
			"getInitializedVariables",
			"isWatchSet",
			"closeFileWatcher",
			"getCheckFlags",
			"getDeclarationModifierFlagsFromSymbol",
			"skipAlias",
			"getCombinedLocalAndExportSymbolFlags",
			"isWriteOnlyAccess",
			"isWriteAccess",
			"compareDataObjects",
			"clearMap",
			"mutateMapSkippingNewValues",
			"mutateMap",
			"isAbstractConstructorType",
			"isAbstractConstructorSymbol",
			"getClassLikeDeclarationOfSymbol",
			"getObjectFlags",
			"typeHasCallOrConstructSignatures",
			"forSomeAncestorDirectory",
			"isUMDExportSymbol",
			"showModuleSpecifier",
			"getLastChild",
			"addToSeen",
			"isObjectTypeDeclaration",
			"isTypeNodeKind",
			"isAccessExpression",
			"getNameOfAccessExpression",
			"isBundleFileTextLike",
			"isNamedImportsOrExports",
			"getLeftmostExpression",
			"objectAllocator",
			"setObjectAllocator",
			"formatStringFromArgs",
			"setLocalizedDiagnosticMessages",
			"getLocaleSpecificMessage",
			"createDetachedDiagnostic",
			"attachFileToDiagnostics",
			"createFileDiagnostic",
			"formatMessage",
			"createCompilerDiagnostic",
			"createCompilerDiagnosticFromMessageChain",
			"chainDiagnosticMessages",
			"concatenateDiagnosticMessageChains",
			"compareDiagnostics",
			"compareDiagnosticsSkipRelatedInformation",
			"getLanguageVariant",
			"getEmitScriptTarget",
			"getEmitModuleKind",
			"getEmitModuleResolutionKind",
			"hasJsonModuleEmitEnabled",
			"unreachableCodeIsError",
			"unusedLabelIsError",
			"getAreDeclarationMapsEnabled",
			"getAllowSyntheticDefaultImports",
			"getEmitDeclarations",
			"isIncrementalCompilation",
			"getStrictOptionValue",
			"compilerOptionsAffectSemanticDiagnostics",
			"compilerOptionsAffectEmit",
			"getCompilerOptionValue",
			"hasZeroOrOneAsteriskCharacter",
			"createSymlinkCache",
			"discoverProbableSymlinks",
			"tryRemoveDirectoryPrefix",
			"regExpEscape",
			"commonPackageFolders",
			"getRegularExpressionForWildcard",
			"getRegularExpressionsForWildcards",
			"isImplicitGlob",
			"getFileMatcherPatterns",
			"getRegexFromPattern",
			"matchFiles",
			"ensureScriptKind",
			"getScriptKindFromFileName",
			"supportedTSExtensions",
			"supportedTSExtensionsWithJson",
			"supportedTSExtensionsForExtractExtension",
			"supportedJSExtensions",
			"supportedJSAndJsonExtensions",
			"getSupportedExtensions",
			"getSuppoertedExtensionsWithJsonIfResolveJsonModule",
			"hasJSFileExtension",
			"hasTSFileExtension",
			"isSupportedSourceFileName",
			"ExtensionPriority",
			"getExtensionPriority",
			"adjustExtensionPriority",
			"getNextLowestExtensionPriority",
			"removeFileExtension",
			"tryRemoveExtension",
			"removeExtension",
			"changeExtension",
			"tryParsePattern",
			"positionIsSynthesized",
			"extensionIsTS",
			"resolutionExtensionIsTSOrJson",
			"extensionFromPath",
			"isAnySupportedFileExtension",
			"tryGetExtensionFromPath",
			"isCheckJsEnabledForFile",
			"emptyFileSystemEntries",
			"matchPatternOrExact",
			"sliceAfter",
			"addRelatedInfo",
			"minAndMax",
			"rangeOfNode",
			"rangeOfTypeParameters",
			"skipTypeChecking",
			"isJsonEqual",
			"parsePseudoBigInt",
			"pseudoBigIntToString",
			"isValidTypeOnlyAliasUseSite",
			"typeOnlyDeclarationIsExport",
			"isIdentifierTypeReference",
			"arrayIsHomogeneous",
			"setTextRangePos",
			"setTextRangeEnd",
			"setTextRangePosEnd",
			"setTextRangePosWidth",
			"setNodeFlags",
			"setParent",
			"setEachParent",
			"setParentRecursive",
			"createBaseNodeFactory",
			"createParenthesizerRules",
			"nullParenthesizerRules",
			"createNodeConverters",
			"nullNodeConverters",
			"NodeFactoryFlags",
			"createNodeFactory",
			"getTransformFlagsSubtreeExclusions",
			"factory",
			"createUnparsedSourceFile",
			"createInputFiles",
			"createSourceMapSource",
			"setOriginalNode",
			"getOrCreateEmitNode",
			"disposeEmitNodes",
			"removeAllComments",
			"setEmitFlags",
			"addEmitFlags",
			"getSourceMapRange",
			"setSourceMapRange",
			"getTokenSourceMapRange",
			"setTokenSourceMapRange",
			"getStartsOnNewLine",
			"setStartsOnNewLine",
			"getCommentRange",
			"setCommentRange",
			"getSyntheticLeadingComments",
			"setSyntheticLeadingComments",
			"addSyntheticLeadingComment",
			"getSyntheticTrailingComments",
			"setSyntheticTrailingComments",
			"addSyntheticTrailingComment",
			"moveSyntheticComments",
			"getConstantValue",
			"setConstantValue",
			"addEmitHelper",
			"addEmitHelpers",
			"removeEmitHelper",
			"getEmitHelpers",
			"moveEmitHelpers",
			"ignoreSourceNewlines",
			"createEmitHelperFactory",
			"compareEmitHelpers",
			"helperString",
			"decorateHelper",
			"metadataHelper",
			"paramHelper",
			"assignHelper",
			"awaitHelper",
			"asyncGeneratorHelper",
			"asyncDelegator",
			"asyncValues",
			"restHelper",
			"awaiterHelper",
			"extendsHelper",
			"templateObjectHelper",
			"readHelper",
			"spreadHelper",
			"spreadArraysHelper",
			"valuesHelper",
			"generatorHelper",
			"createBindingHelper",
			"setModuleDefaultHelper",
			"importStarHelper",
			"importDefaultHelper",
			"exportStarHelper",
			"classPrivateFieldGetHelper",
			"classPrivateFieldSetHelper",
			"getAllUnscopedEmitHelpers",
			"asyncSuperHelper",
			"advancedAsyncSuperHelper",
			"isNumericLiteral",
			"isBigIntLiteral",
			"isStringLiteral",
			"isJsxText",
			"isRegularExpressionLiteral",
			"isNoSubstitutionTemplateLiteral",
			"isTemplateHead",
			"isTemplateMiddle",
			"isTemplateTail",
			"isIdentifier",
			"isQualifiedName",
			"isComputedPropertyName",
			"isPrivateIdentifier",
			"isSuperKeyword",
			"isImportKeyword",
			"isCommaToken",
			"isQuestionToken",
			"isExclamationToken",
			"isTypeParameterDeclaration",
			"isParameter",
			"isDecorator",
			"isPropertySignature",
			"isPropertyDeclaration",
			"isMethodSignature",
			"isMethodDeclaration",
			"isConstructorDeclaration",
			"isGetAccessorDeclaration",
			"isSetAccessorDeclaration",
			"isCallSignatureDeclaration",
			"isConstructSignatureDeclaration",
			"isIndexSignatureDeclaration",
			"isTypePredicateNode",
			"isTypeReferenceNode",
			"isFunctionTypeNode",
			"isConstructorTypeNode",
			"isTypeQueryNode",
			"isTypeLiteralNode",
			"isArrayTypeNode",
			"isTupleTypeNode",
			"isNamedTupleMember",
			"isOptionalTypeNode",
			"isRestTypeNode",
			"isUnionTypeNode",
			"isIntersectionTypeNode",
			"isConditionalTypeNode",
			"isInferTypeNode",
			"isParenthesizedTypeNode",
			"isThisTypeNode",
			"isTypeOperatorNode",
			"isIndexedAccessTypeNode",
			"isMappedTypeNode",
			"isLiteralTypeNode",
			"isImportTypeNode",
			"isObjectBindingPattern",
			"isArrayBindingPattern",
			"isBindingElement",
			"isArrayLiteralExpression",
			"isObjectLiteralExpression",
			"isPropertyAccessExpression",
			"isElementAccessExpression",
			"isCallExpression",
			"isNewExpression",
			"isTaggedTemplateExpression",
			"isTypeAssertionExpression",
			"isParenthesizedExpression",
			"isFunctionExpression",
			"isArrowFunction",
			"isDeleteExpression",
			"isTypeOfExpression",
			"isVoidExpression",
			"isAwaitExpression",
			"isPrefixUnaryExpression",
			"isPostfixUnaryExpression",
			"isBinaryExpression",
			"isConditionalExpression",
			"isTemplateExpression",
			"isYieldExpression",
			"isSpreadElement",
			"isClassExpression",
			"isOmittedExpression",
			"isExpressionWithTypeArguments",
			"isAsExpression",
			"isNonNullExpression",
			"isMetaProperty",
			"isSyntheticExpression",
			"isPartiallyEmittedExpression",
			"isCommaListExpression",
			"isTemplateSpan",
			"isSemicolonClassElement",
			"isBlock",
			"isVariableStatement",
			"isEmptyStatement",
			"isExpressionStatement",
			"isIfStatement",
			"isDoStatement",
			"isWhileStatement",
			"isForStatement",
			"isForInStatement",
			"isForOfStatement",
			"isContinueStatement",
			"isBreakStatement",
			"isReturnStatement",
			"isWithStatement",
			"isSwitchStatement",
			"isLabeledStatement",
			"isThrowStatement",
			"isTryStatement",
			"isDebuggerStatement",
			"isVariableDeclaration",
			"isVariableDeclarationList",
			"isFunctionDeclaration",
			"isClassDeclaration",
			"isInterfaceDeclaration",
			"isTypeAliasDeclaration",
			"isEnumDeclaration",
			"isModuleDeclaration",
			"isModuleBlock",
			"isCaseBlock",
			"isNamespaceExportDeclaration",
			"isImportEqualsDeclaration",
			"isImportDeclaration",
			"isImportClause",
			"isNamespaceImport",
			"isNamespaceExport",
			"isNamedImports",
			"isImportSpecifier",
			"isExportAssignment",
			"isExportDeclaration",
			"isNamedExports",
			"isExportSpecifier",
			"isMissingDeclaration",
			"isNotEmittedStatement",
			"isSyntheticReference",
			"isMergeDeclarationMarker",
			"isEndOfDeclarationMarker",
			"isExternalModuleReference",
			"isJsxElement",
			"isJsxSelfClosingElement",
			"isJsxOpeningElement",
			"isJsxClosingElement",
			"isJsxFragment",
			"isJsxOpeningFragment",
			"isJsxClosingFragment",
			"isJsxAttribute",
			"isJsxAttributes",
			"isJsxSpreadAttribute",
			"isJsxExpression",
			"isCaseClause",
			"isDefaultClause",
			"isHeritageClause",
			"isCatchClause",
			"isPropertyAssignment",
			"isShorthandPropertyAssignment",
			"isSpreadAssignment",
			"isEnumMember",
			"isUnparsedPrepend",
			"isSourceFile",
			"isBundle",
			"isUnparsedSource",
			"isJSDocTypeExpression",
			"isJSDocAllType",
			"isJSDocUnknownType",
			"isJSDocNullableType",
			"isJSDocNonNullableType",
			"isJSDocOptionalType",
			"isJSDocFunctionType",
			"isJSDocVariadicType",
			"isJSDocNamepathType",
			"isJSDoc",
			"isJSDocTypeLiteral",
			"isJSDocSignature",
			"isJSDocAugmentsTag",
			"isJSDocAuthorTag",
			"isJSDocClassTag",
			"isJSDocCallbackTag",
			"isJSDocPublicTag",
			"isJSDocPrivateTag",
			"isJSDocProtectedTag",
			"isJSDocReadonlyTag",
			"isJSDocDeprecatedTag",
			"isJSDocEnumTag",
			"isJSDocParameterTag",
			"isJSDocReturnTag",
			"isJSDocThisTag",
			"isJSDocTypeTag",
			"isJSDocTemplateTag",
			"isJSDocTypedefTag",
			"isJSDocUnknownTag",
			"isJSDocPropertyTag",
			"isJSDocImplementsTag",
			"isSyntaxList",
			"createEmptyExports",
			"createMemberAccessForPropertyName",
			"createExpressionForJsxElement",
			"createExpressionForJsxFragment",
			"createForOfBindingStatement",
			"insertLeadingStatement",
			"createExpressionFromEntityName",
			"createExpressionForPropertyName",
			"createExpressionForObjectLiteralElementLike",
			"isInternalName",
			"isLocalName",
			"isExportName",
			"findUseStrictPrologue",
			"startsWithUseStrict",
			"isCommaSequence",
			"isOuterExpression",
			"skipOuterExpressions",
			"skipAssertions",
			"startOnNewLine",
			"getExternalHelpersModuleName",
			"hasRecordedExternalHelpers",
			"createExternalHelpersImportDeclarationIfNeeded",
			"getOrCreateExternalHelpersModuleNameIfNeeded",
			"getLocalNameForExternalImport",
			"getExternalModuleNameLiteral",
			"tryGetModuleNameFromFile",
			"getInitializerOfBindingOrAssignmentElement",
			"getTargetOfBindingOrAssignmentElement",
			"getRestIndicatorOfBindingOrAssignmentElement",
			"getPropertyNameOfBindingOrAssignmentElement",
			"tryGetPropertyNameOfBindingOrAssignmentElement",
			"getElementsOfBindingOrAssignmentPattern",
			"getJSDocTypeAliasName",
			"canHaveModifiers",
			"isExportModifier",
			"isAsyncModifier",
			"isStaticModifier",
			"setTextRange",
			"parseBaseNodeFactory",
			"parseNodeFactory",
			"isJSDocLikeText",
			"forEachChild",
			"forEachChildRecursively",
			"createSourceFile",
			"parseIsolatedEntityName",
			"parseJsonText",
			"isExternalModule",
			"updateSourceFile",
			"parseIsolatedJSDocComment",
			"parseJSDocTypeExpressionForTests",
			"isDeclarationFileName",
			"processCommentPragmas",
			"processPragmasIntoFields",
			"tagNamesAreEquivalent",
			"compileOnSaveCommandLineOption",
			"libs",
			"libMap",
			"optionsForWatch",
			"commonOptionsWithBuild",
			"optionDeclarations",
			"semanticDiagnosticsOptionDeclarations",
			"affectsEmitOptionDeclarations",
			"moduleResolutionOptionDeclarations",
			"sourceFileAffectingCompilerOptions",
			"transpileOptionValueCompilerOptions",
			"buildOpts",
			"typeAcquisitionDeclarations",
			"createOptionNameMap",
			"getOptionsNameMap",
			"defaultInitCompilerOptions",
			"convertEnableAutoDiscoveryToEnable",
			"createCompilerDiagnosticForInvalidCustomType",
			"parseCustomTypeOption",
			"parseListTypeOption",
			"parseCommandLineWorker",
			"compilerOptionsDidYouMeanDiagnostics",
			"parseCommandLine",
			"getOptionFromName",
			"parseBuildCommand",
			"getDiagnosticText",
			"getParsedCommandLineOfConfigFile",
			"readConfigFile",
			"parseConfigFileTextToJson",
			"readJsonConfigFile",
			"tryReadFile",
			"convertToObject",
			"convertToObjectWorker",
			"convertToTSConfig",
			"generateTSConfig",
			"convertToOptionsWithAbsolutePaths",
			"parseJsonConfigFileContent",
			"parseJsonSourceFileConfigFileContent",
			"setConfigFileInOptions",
			"canJsonReportNoInputFiles",
			"updateErrorForNoInputFiles",
			"convertCompilerOptionsFromJson",
			"convertTypeAcquisitionFromJson",
			"getFileNamesFromConfigSpecs",
			"isExcludedFile",
			"convertCompilerOptionsForTelemetry",
			"trace",
			"isTraceEnabled",
			"getPackageJsonTypesVersionsPaths",
			"getEffectiveTypeRoots",
			"resolveTypeReferenceDirective",
			"getAutomaticTypeDirectiveNames",
			"createModuleResolutionCache",
			"createCacheWithRedirects",
			"createModuleResolutionCacheWithMaps",
			"resolveModuleNameFromCache",
			"resolveModuleName",
			"resolveJSModule",
			"tryResolveJSModule",
			"nodeModuleNameResolver",
			"nodeModulesPathPart",
			"pathContainsNodeModules",
			"parsePackageName",
			"getTypesPackageName",
			"mangleScopedPackageName",
			"getPackageNameFromTypesPackageName",
			"unmangleScopedPackageName",
			"classicNameResolver",
			"loadModuleFromGlobalCache",
			"ModuleInstanceState",
			"getModuleInstanceState",
			"bindSourceFile",
			"isExportsOrModuleExportsOrAlias",
			"createGetSymbolWalker",
			"getNodeId",
			"getSymbolId",
			"isInstantiatedModule",
			"createTypeChecker",
			"signatureHasRestParameter",
			"signatureHasLiteralTypes",
			"visitNode",
			"visitNodes",
			"visitLexicalEnvironment",
			"visitParameterList",
			"visitFunctionBody",
			"visitEachChild",
			"createSourceMapGenerator",
			"getLineInfo",
			"tryGetSourceMappingURL",
			"isRawSourceMap",
			"tryParseRawSourceMap",
			"decodeMappings",
			"sameMapping",
			"isSourceMapping",
			"createDocumentPositionMapper",
			"identitySourceMapConsumer",
			"getOriginalNodeId",
			"chainBundle",
			"getExportNeedsImportStarHelper",
			"getImportNeedsImportStarHelper",
			"getImportNeedsImportDefaultHelper",
			"collectExternalModuleInfo",
			"isSimpleCopiableExpression",
			"isSimpleInlineableExpression",
			"isCompoundAssignment",
			"getNonAssignmentOperatorForCompoundAssignment",
			"addPrologueDirectivesAndInitialSuperCall",
			"getProperties",
			"isInitializedProperty",
			"FlattenLevel",
			"flattenDestructuringAssignment",
			"flattenDestructuringBinding",
			"ProcessLevel",
			"processTaggedTemplateExpression",
			"transformTypeScript",
			"transformClassFields",
			"transformES2017",
			"createSuperAccessVariableStatement",
			"transformES2018",
			"transformES2019",
			"transformES2020",
			"transformESNext",
			"transformJsx",
			"transformES2016",
			"transformES2015",
			"transformES5",
			"transformGenerators",
			"transformModule",
			"transformSystemModule",
			"transformECMAScriptModule",
			"canProduceDiagnostics",
			"createGetSymbolAccessibilityDiagnosticForNodeName",
			"createGetSymbolAccessibilityDiagnosticForNode",
			"getDeclarationDiagnostics",
			"isInternalDeclaration",
			"transformDeclarations",
			"noTransformers",
			"getTransformers",
			"noEmitSubstitution",
			"noEmitNotification",
			"transformNodes",
			"nullTransformationContext",
			"isBuildInfoFile",
			"forEachEmittedFile",
			"getTsBuildInfoEmitOutputFilePath",
			"getOutputPathsForBundle",
			"getOutputPathsFor",
			"getOutputExtension",
			"getOutputDeclarationFileName",
			"getAllProjectOutputs",
			"getOutputFileNames",
			"getFirstProjectOutput",
			"emitFiles",
			"getBuildInfoText",
			"getBuildInfo",
			"notImplementedResolver",
			"emitUsingBuildInfo",
			"createPrinter",
			"createCachedDirectoryStructureHost",
			"ConfigFileProgramReloadLevel",
			"updateMissingFilePathsWatch",
			"updateWatchingWildcardDirectories",
			"isIgnoredFileFromWildCardWatching",
			"isEmittedFileOfProgram",
			"WatchLogLevel",
			"getWatchFactory",
			"getFallbackOptions",
			"closeFileWatcherOf",
			"findConfigFile",
			"resolveTripleslashReference",
			"computeCommonSourceDirectoryOfFilenames",
			"createCompilerHost",
			"createCompilerHostWorker",
			"changeCompilerHostLikeToUseCache",
			"getPreEmitDiagnostics",
			"formatDiagnostics",
			"formatDiagnostic",
			"ForegroundColorEscapeSequences",
			"formatColorAndReset",
			"formatLocation",
			"formatDiagnosticsWithColorAndContext",
			"flattenDiagnosticMessageText",
			"loadWithLocalCache",
			"inferredTypesContainingFile",
			"isProgramUptoDate",
			"getConfigFileParsingDiagnostics",
			"createProgram",
			"emitSkippedWithNoDiagnostics",
			"handleNoEmitOptions",
			"filterSemanticDiagnotics",
			"parseConfigHostFromCompilerHostLike",
			"createPrependNodes",
			"resolveProjectReferencePath",
			"getResolutionDiagnostic",
			"getFileEmitOutput",
			"BuilderState",
			"BuilderFileEmit",
			"BuilderProgramKind",
			"getBuilderCreationParameters",
			"createBuilderProgram",
			"createBuildProgramUsingProgramBuildInfo",
			"createRedirectedBuilderProgram",
			"createSemanticDiagnosticsBuilderProgram",
			"createEmitAndSemanticDiagnosticsBuilderProgram",
			"createAbstractBuilder",
			"removeIgnoredPath",
			"canWatchDirectory",
			"createResolutionCache",
			"moduleSpecifiers",
			"createDiagnosticReporter",
			"screenStartingMessageCodes",
			"getLocaleTimeString",
			"createWatchStatusReporter",
			"parseConfigFileWithSystem",
			"getErrorCountForSummary",
			"getWatchErrorSummaryDiagnosticMessage",
			"getErrorSummaryText",
			"listFiles",
			"emitFilesAndReportErrors",
			"emitFilesAndReportErrorsAndGetExitStatus",
			"noopFileWatcher",
			"returnNoopFileWatcher",
			"createWatchHost",
			"WatchType",
			"createWatchFactory",
			"createCompilerHostFromProgramHost",
			"setGetSourceFileAsHashVersioned",
			"createProgramHost",
			"createWatchCompilerHostOfConfigFile",
			"createWatchCompilerHostOfFilesAndCompilerOptions",
			"performIncrementalCompilation",
			"readBuilderProgram",
			"createIncrementalCompilerHost",
			"createIncrementalProgram",
			"createWatchCompilerHost",
			"createWatchProgram",
			"UpToDateStatusType",
			"resolveConfigFileProjectName",
			"isCircularBuildOrder",
			"getBuildOrderFromAnyBuildOrder",
			"createBuilderStatusReporter",
			"createSolutionBuilderHost",
			"createSolutionBuilderWithWatchHost",
			"createSolutionBuilder",
			"createSolutionBuilderWithWatch",
			"InvalidatedProjectKind",
			"server",
			"JsTyping",
			"ScriptSnapshot",
			"PackageJsonDependencyGroup",
			"PackageJsonAutoImportPreference",
			"LanguageServiceMode",
			"emptyOptions",
			"HighlightSpanKind",
			"IndentStyle",
			"SemicolonPreference",
			"getDefaultFormatCodeSettings",
			"testFormatSettings",
			"SymbolDisplayPartKind",
			"OutliningSpanKind",
			"OutputFileType",
			"EndOfLineState",
			"TokenClass",
			"ScriptElementKind",
			"ScriptElementKindModifier",
			"ClassificationTypeNames",
			"ClassificationType",
			"scanner",
			"SemanticMeaning",
			"getMeaningFromDeclaration",
			"getMeaningFromLocation",
			"isInRightSideOfInternalImportEqualsDeclaration",
			"isCallExpressionTarget",
			"isNewExpressionTarget",
			"isCallOrNewExpressionTarget",
			"isTaggedTemplateTag",
			"isDecoratorTarget",
			"isJsxOpeningLikeElementTagName",
			"climbPastPropertyAccess",
			"climbPastPropertyOrElementAccess",
			"getTargetLabel",
			"hasPropertyAccessExpressionWithName",
			"isJumpStatementTarget",
			"isLabelOfLabeledStatement",
			"isLabelName",
			"isTagName",
			"isRightSideOfQualifiedName",
			"isRightSideOfPropertyAccess",
			"isArgumentExpressionOfElementAccess",
			"isNameOfModuleDeclaration",
			"isNameOfFunctionDeclaration",
			"isLiteralNameOfPropertyDeclarationOrIndexAccess",
			"isExpressionOfExternalModuleImportEqualsDeclaration",
			"getContainerNode",
			"getNodeKind",
			"isThis",
			"getLineStartPositionForPosition",
			"rangeContainsRange",
			"rangeContainsRangeExclusive",
			"rangeContainsPosition",
			"rangeContainsPositionExclusive",
			"startEndContainsRange",
			"rangeContainsStartEnd",
			"rangeOverlapsWithStartEnd",
			"nodeOverlapsWithStartEnd",
			"startEndOverlapsWithStartEnd",
			"positionBelongsToNode",
			"findListItemInfo",
			"hasChildOfKind",
			"findChildOfKind",
			"findContainingList",
			"getAdjustedReferenceLocation",
			"getAdjustedRenameLocation",
			"getTouchingPropertyName",
			"getTouchingToken",
			"getTokenAtPosition",
			"findTokenOnLeftOfPosition",
			"findNextToken",
			"findPrecedingToken",
			"isInString",
			"isInsideJsxElementOrAttribute",
			"isInTemplateString",
			"isInJSXText",
			"isInsideJsxElement",
			"findPrecedingMatchingToken",
			"removeOptionality",
			"isPossiblyTypeArgumentPosition",
			"getPossibleGenericSignatures",
			"getPossibleTypeArgumentsInfo",
			"isInComment",
			"hasDocComment",
			"getNodeModifiers",
			"getTypeArgumentOrTypeParameterList",
			"isComment",
			"isStringOrRegularExpressionOrTemplateLiteral",
			"isPunctuation",
			"isInsideTemplateLiteral",
			"isAccessibilityModifier",
			"cloneCompilerOptions",
			"isArrayLiteralOrObjectLiteralDestructuringPattern",
			"isInReferenceComment",
			"isInNonReferenceComment",
			"getReplacementSpanForContextToken",
			"createTextSpanFromNode",
			"createTextSpanFromStringLiteralLikeContent",
			"createTextRangeFromNode",
			"createTextSpanFromRange",
			"createTextRangeFromSpan",
			"createTextChangeFromStartLength",
			"createTextChange",
			"typeKeywords",
			"isTypeKeyword",
			"isTypeKeywordToken",
			"isExternalModuleSymbol",
			"nodeSeenTracker",
			"getSnapshotText",
			"repeatString",
			"skipConstraint",
			"getNameFromPropertyName",
			"programContainsModules",
			"programContainsEs6Modules",
			"compilerOptionsIndicateEs6Modules",
			"createModuleSpecifierResolutionHost",
			"getModuleSpecifierResolverHost",
			"makeImportIfNecessary",
			"makeImport",
			"makeStringLiteral",
			"QuotePreference",
			"quotePreferenceFromString",
			"getQuotePreference",
			"getQuoteFromPreference",
			"symbolNameNoDefault",
			"symbolEscapedNameNoDefault",
			"isObjectBindingElementWithoutPropertyName",
			"getPropertySymbolFromBindingElement",
			"getPropertySymbolsFromBaseTypes",
			"isMemberSymbolInBaseType",
			"getParentNodeInSpan",
			"findModifier",
			"insertImports",
			"getTypeKeywordOfTypeOnlyImport",
			"textSpansEqual",
			"documentSpansEqual",
			"forEachUnique",
			"isTextWhiteSpaceLike",
			"isFirstDeclarationOfSymbolParameter",
			"symbolPart",
			"displayPart",
			"spacePart",
			"keywordPart",
			"punctuationPart",
			"operatorPart",
			"textOrKeywordPart",
			"textPart",
			"getNewLineOrDefaultFromHost",
			"lineBreakPart",
			"mapToDisplayParts",
			"typeToDisplayParts",
			"symbolToDisplayParts",
			"signatureToDisplayParts",
			"isImportOrExportSpecifierName",
			"getScriptKind",
			"getSymbolTarget",
			"getUniqueSymbolId",
			"getFirstNonSpaceCharacterPosition",
			"getPrecedingNonSpaceCharacterPosition",
			"getSynthesizedDeepClone",
			"getSynthesizedDeepCloneWithRenames",
			"getSynthesizedDeepClones",
			"suppressLeadingAndTrailingTrivia",
			"suppressLeadingTrivia",
			"suppressTrailingTrivia",
			"copyComments",
			"getUniqueName",
			"getRenameLocation",
			"copyLeadingComments",
			"copyTrailingComments",
			"copyTrailingAsLeadingComments",
			"needsParentheses",
			"getContextualTypeFromParent",
			"quote",
			"isEqualityOperatorKind",
			"isStringLiteralOrTemplate",
			"hasIndexSignature",
			"getSwitchedType",
			"ANONYMOUS",
			"getTypeNodeIfAccessible",
			"syntaxRequiresTrailingCommaOrSemicolonOrASI",
			"syntaxRequiresTrailingFunctionBlockOrSemicolonOrASI",
			"syntaxRequiresTrailingModuleBlockOrSemicolonOrASI",
			"syntaxRequiresTrailingSemicolonOrASI",
			"syntaxMayBeASICandidate",
			"positionIsASICandidate",
			"probablyUsesSemicolons",
			"tryGetDirectories",
			"tryReadDirectory",
			"tryFileExists",
			"tryDirectoryExists",
			"tryAndIgnoreErrors",
			"tryIOAndConsumeErrors",
			"findPackageJsons",
			"findPackageJson",
			"getPackageJsonsVisibleToFile",
			"createPackageJsonInfo",
			"consumesNodeCoreModules",
			"isInsideNodeModules",
			"isDiagnosticWithLocation",
			"findDiagnosticForNode",
			"getDiagnosticsWithinSpan",
			"getRefactorContextSpan",
			"mapOneOrMany",
			"firstOrOnly",
			"getNameForExportedSymbol",
			"stringContainsAt",
			"startsWithUnderscore",
			"isGlobalDeclaration",
			"isNonGlobalDeclaration",
			"createClassifier",
			"getSemanticClassifications",
			"getEncodedSemanticClassifications",
			"getSyntacticClassifications",
			"getEncodedSyntacticClassifications",
			"Completions",
			"DocumentHighlights",
			"createDocumentRegistry",
			"createDocumentRegistryInternal",
			"FindAllReferences",
			"CallHierarchy",
			"getEditsForFileRename",
			"getPathUpdater",
			"GoToDefinition",
			"JsDoc",
			"NavigateTo",
			"NavigationBar",
			"OrganizeImports",
			"OutliningElementsCollector",
			"PatternMatchKind",
			"createPatternMatcher",
			"breakIntoCharacterSpans",
			"breakIntoWordSpans",
			"preProcessFile",
			"Rename",
			"SmartSelectionRange",
			"SignatureHelp",
			"getSourceMapper",
			"getDocumentPositionMapper",
			"computeSuggestionDiagnostics",
			"isReturnStatementWithFixablePromiseHandler",
			"isFixablePromiseHandler",
			"SymbolDisplay",
			"transpileModule",
			"transpile",
			"fixupCompilerOptions",
			"formatting",
			"textChanges",
			"codefix",
			"refactor",
			"servicesVersion",
			"toEditorSettings",
			"displayPartsToString",
			"getDefaultCompilerOptions",
			"getSupportedCodeFixes",
			"createLanguageServiceSourceFile",
			"updateLanguageServiceSourceFile",
			"ThrottledCancellationToken",
			"createLanguageService",
			"getNameTable",
			"getContainingObjectLiteralElement",
			"getPropertySymbolsFromContextualType",
			"getDefaultLibFilePath",
			"BreakpointResolver",
			"transform",
			"LanguageServiceShimHostAdapter",
			"CoreServicesShimHostAdapter",
			"realizeDiagnostics",
			"TypeScriptServicesFactory",
			"createNodeArray",
			"createNumericLiteral",
			"createBigIntLiteral",
			"createStringLiteral",
			"createStringLiteralFromNode",
			"createRegularExpressionLiteral",
			"createLoopVariable",
			"createUniqueName",
			"createPrivateIdentifier",
			"createSuper",
			"createThis",
			"createNull",
			"createTrue",
			"createFalse",
			"createModifier",
			"createModifiersFromModifierFlags",
			"createQualifiedName",
			"updateQualifiedName",
			"createComputedPropertyName",
			"updateComputedPropertyName",
			"createTypeParameterDeclaration",
			"updateTypeParameterDeclaration",
			"createParameter",
			"updateParameter",
			"createDecorator",
			"updateDecorator",
			"createProperty",
			"updateProperty",
			"createMethod",
			"updateMethod",
			"createConstructor",
			"updateConstructor",
			"createGetAccessor",
			"updateGetAccessor",
			"createSetAccessor",
			"updateSetAccessor",
			"createCallSignature",
			"updateCallSignature",
			"createConstructSignature",
			"updateConstructSignature",
			"updateIndexSignature",
			"createKeywordTypeNode",
			"createTypePredicateNodeWithModifier",
			"updateTypePredicateNodeWithModifier",
			"createTypeReferenceNode",
			"updateTypeReferenceNode",
			"createFunctionTypeNode",
			"updateFunctionTypeNode",
			"createConstructorTypeNode",
			"updateConstructorTypeNode",
			"createTypeQueryNode",
			"updateTypeQueryNode",
			"createTypeLiteralNode",
			"updateTypeLiteralNode",
			"createArrayTypeNode",
			"updateArrayTypeNode",
			"createTupleTypeNode",
			"updateTupleTypeNode",
			"createOptionalTypeNode",
			"updateOptionalTypeNode",
			"createRestTypeNode",
			"updateRestTypeNode",
			"createUnionTypeNode",
			"updateUnionTypeNode",
			"createIntersectionTypeNode",
			"updateIntersectionTypeNode",
			"createConditionalTypeNode",
			"updateConditionalTypeNode",
			"createInferTypeNode",
			"updateInferTypeNode",
			"createImportTypeNode",
			"updateImportTypeNode",
			"createParenthesizedType",
			"updateParenthesizedType",
			"createThisTypeNode",
			"updateTypeOperatorNode",
			"createIndexedAccessTypeNode",
			"updateIndexedAccessTypeNode",
			"createMappedTypeNode",
			"updateMappedTypeNode",
			"createLiteralTypeNode",
			"updateLiteralTypeNode",
			"createObjectBindingPattern",
			"updateObjectBindingPattern",
			"createArrayBindingPattern",
			"updateArrayBindingPattern",
			"createBindingElement",
			"updateBindingElement",
			"createArrayLiteral",
			"updateArrayLiteral",
			"createObjectLiteral",
			"updateObjectLiteral",
			"createPropertyAccess",
			"updatePropertyAccess",
			"createPropertyAccessChain",
			"updatePropertyAccessChain",
			"createElementAccess",
			"updateElementAccess",
			"createElementAccessChain",
			"updateElementAccessChain",
			"createCall",
			"updateCall",
			"createCallChain",
			"updateCallChain",
			"createNew",
			"updateNew",
			"createTypeAssertion",
			"updateTypeAssertion",
			"createParen",
			"updateParen",
			"createFunctionExpression",
			"updateFunctionExpression",
			"createDelete",
			"updateDelete",
			"createTypeOf",
			"updateTypeOf",
			"createVoid",
			"updateVoid",
			"createAwait",
			"updateAwait",
			"createPrefix",
			"updatePrefix",
			"createPostfix",
			"updatePostfix",
			"createBinary",
			"updateConditional",
			"createTemplateExpression",
			"updateTemplateExpression",
			"createTemplateHead",
			"createTemplateMiddle",
			"createTemplateTail",
			"createNoSubstitutionTemplateLiteral",
			"updateYield",
			"createSpread",
			"updateSpread",
			"createOmittedExpression",
			"createAsExpression",
			"updateAsExpression",
			"createNonNullExpression",
			"updateNonNullExpression",
			"createNonNullChain",
			"updateNonNullChain",
			"createMetaProperty",
			"updateMetaProperty",
			"createTemplateSpan",
			"updateTemplateSpan",
			"createSemicolonClassElement",
			"createBlock",
			"updateBlock",
			"createVariableStatement",
			"updateVariableStatement",
			"createEmptyStatement",
			"createExpressionStatement",
			"updateExpressionStatement",
			"createStatement",
			"updateStatement",
			"createIf",
			"updateIf",
			"createDo",
			"updateDo",
			"createWhile",
			"updateWhile",
			"createFor",
			"updateFor",
			"createForIn",
			"updateForIn",
			"createForOf",
			"updateForOf",
			"createContinue",
			"updateContinue",
			"createBreak",
			"updateBreak",
			"createReturn",
			"updateReturn",
			"createWith",
			"updateWith",
			"createSwitch",
			"updateSwitch",
			"createLabel",
			"updateLabel",
			"createThrow",
			"updateThrow",
			"createTry",
			"updateTry",
			"createDebuggerStatement",
			"createVariableDeclarationList",
			"updateVariableDeclarationList",
			"createFunctionDeclaration",
			"updateFunctionDeclaration",
			"createClassDeclaration",
			"updateClassDeclaration",
			"createInterfaceDeclaration",
			"updateInterfaceDeclaration",
			"createTypeAliasDeclaration",
			"updateTypeAliasDeclaration",
			"createEnumDeclaration",
			"updateEnumDeclaration",
			"createModuleDeclaration",
			"updateModuleDeclaration",
			"createModuleBlock",
			"updateModuleBlock",
			"createCaseBlock",
			"updateCaseBlock",
			"createNamespaceExportDeclaration",
			"updateNamespaceExportDeclaration",
			"createImportEqualsDeclaration",
			"updateImportEqualsDeclaration",
			"createImportDeclaration",
			"updateImportDeclaration",
			"createNamespaceImport",
			"updateNamespaceImport",
			"createNamedImports",
			"updateNamedImports",
			"createImportSpecifier",
			"updateImportSpecifier",
			"createExportAssignment",
			"updateExportAssignment",
			"createNamedExports",
			"updateNamedExports",
			"createExportSpecifier",
			"updateExportSpecifier",
			"createExternalModuleReference",
			"updateExternalModuleReference",
			"createJSDocTypeExpression",
			"createJSDocTypeTag",
			"createJSDocReturnTag",
			"createJSDocThisTag",
			"createJSDocComment",
			"createJSDocParameterTag",
			"createJSDocClassTag",
			"createJSDocAugmentsTag",
			"createJSDocEnumTag",
			"createJSDocTemplateTag",
			"createJSDocTypedefTag",
			"createJSDocCallbackTag",
			"createJSDocSignature",
			"createJSDocPropertyTag",
			"createJSDocTypeLiteral",
			"createJSDocImplementsTag",
			"createJSDocAuthorTag",
			"createJSDocPublicTag",
			"createJSDocPrivateTag",
			"createJSDocProtectedTag",
			"createJSDocReadonlyTag",
			"createJSDocTag",
			"createJsxElement",
			"updateJsxElement",
			"createJsxSelfClosingElement",
			"updateJsxSelfClosingElement",
			"createJsxOpeningElement",
			"updateJsxOpeningElement",
			"createJsxClosingElement",
			"updateJsxClosingElement",
			"createJsxFragment",
			"createJsxText",
			"updateJsxText",
			"createJsxOpeningFragment",
			"createJsxJsxClosingFragment",
			"updateJsxFragment",
			"createJsxAttribute",
			"updateJsxAttribute",
			"createJsxAttributes",
			"updateJsxAttributes",
			"createJsxSpreadAttribute",
			"updateJsxSpreadAttribute",
			"createJsxExpression",
			"updateJsxExpression",
			"createCaseClause",
			"updateCaseClause",
			"createDefaultClause",
			"updateDefaultClause",
			"createHeritageClause",
			"updateHeritageClause",
			"createCatchClause",
			"updateCatchClause",
			"createPropertyAssignment",
			"updatePropertyAssignment",
			"createShorthandPropertyAssignment",
			"updateShorthandPropertyAssignment",
			"createSpreadAssignment",
			"updateSpreadAssignment",
			"createEnumMember",
			"updateEnumMember",
			"updateSourceFileNode",
			"createNotEmittedStatement",
			"createPartiallyEmittedExpression",
			"updatePartiallyEmittedExpression",
			"createCommaList",
			"updateCommaList",
			"createBundle",
			"updateBundle",
			"createImmediatelyInvokedFunctionExpression",
			"createImmediatelyInvokedArrowFunction",
			"createVoidZero",
			"createExportDefault",
			"createExternalModuleExport",
			"createNamespaceExport",
			"updateNamespaceExport",
			"createToken",
			"createIdentifier",
			"createTempVariable",
			"getGeneratedNameForNode",
			"createOptimisticUniqueName",
			"createFileLevelUniqueName",
			"createIndexSignature",
			"createTypePredicateNode",
			"updateTypePredicateNode",
			"createLiteral",
			"createMethodSignature",
			"updateMethodSignature",
			"createTypeOperatorNode",
			"createTaggedTemplate",
			"updateTaggedTemplate",
			"updateBinary",
			"createConditional",
			"createYield",
			"createClassExpression",
			"updateClassExpression",
			"createPropertySignature",
			"updatePropertySignature",
			"createExpressionWithTypeArguments",
			"updateExpressionWithTypeArguments",
			"createArrowFunction",
			"updateArrowFunction",
			"createVariableDeclaration",
			"updateVariableDeclaration",
			"createImportClause",
			"updateImportClause",
			"createExportDeclaration",
			"updateExportDeclaration",
			"createJSDocParamTag",
			"createComma",
			"createLessThan",
			"createAssignment",
			"createStrictEquality",
			"createStrictInequality",
			"createAdd",
			"createSubtract",
			"createLogicalAnd",
			"createLogicalOr",
			"createPostfixIncrement",
			"createLogicalNot",
			"createNode",
			"getMutableClone",
			"isTypeAssertion"
		],
		"detectedNames": [],
		"missingNames": [
			"ShimCollections",
			"versionMajorMinor",
			"version",
			"Comparison",
			"NativeCollections",
			"Map",
			"Set",
			"getIterator",
			"emptyArray",
			"emptyMap",
			"emptySet",
			"createMap",
			"createMapFromTemplate",
			"length",
			"forEach",
			"forEachRight",
			"firstDefined",
			"firstDefinedIterator",
			"reduceLeftIterator",
			"zipWith",
			"zipToIterator",
			"zipToMap",
			"intersperse",
			"every",
			"find",
			"findLast",
			"findIndex",
			"findLastIndex",
			"findMap",
			"contains",
			"arraysEqual",
			"indexOfAnyCharCode",
			"countWhere",
			"filter",
			"filterMutate",
			"clear",
			"map",
			"mapIterator",
			"sameMap",
			"flatten",
			"flatMap",
			"flatMapToMutable",
			"flatMapIterator",
			"sameFlatMap",
			"mapAllOrFail",
			"mapDefined",
			"mapDefinedIterator",
			"mapDefinedEntries",
			"mapDefinedValues",
			"getOrUpdate",
			"tryAddToSet",
			"emptyIterator",
			"singleIterator",
			"spanMap",
			"mapEntries",
			"some",
			"getRangesWhere",
			"concatenate",
			"indicesOf",
			"deduplicate",
			"insertSorted",
			"sortAndDeduplicate",
			"arrayIsSorted",
			"arrayIsEqualTo",
			"compact",
			"relativeComplement",
			"sum",
			"append",
			"combine",
			"addRange",
			"pushIfUnique",
			"appendIfUnique",
			"sort",
			"arrayIterator",
			"arrayReverseIterator",
			"stableSort",
			"rangeEquals",
			"elementAt",
			"firstOrUndefined",
			"first",
			"lastOrUndefined",
			"last",
			"singleOrUndefined",
			"singleOrMany",
			"replaceElement",
			"binarySearch",
			"binarySearchKey",
			"reduceLeft",
			"hasProperty",
			"getProperty",
			"getOwnKeys",
			"getAllKeys",
			"getOwnValues",
			"getEntries",
			"arrayOf",
			"arrayFrom",
			"assign",
			"equalOwnProperties",
			"arrayToMap",
			"arrayToNumericMap",
			"arrayToMultiMap",
			"group",
			"clone",
			"extend",
			"copyProperties",
			"maybeBind",
			"createMultiMap",
			"createUnderscoreEscapedMultiMap",
			"isArray",
			"toArray",
			"isString",
			"isNumber",
			"tryCast",
			"cast",
			"noop",
			"returnFalse",
			"returnTrue",
			"returnUndefined",
			"identity",
			"toLowerCase",
			"toFileNameLowerCase",
			"notImplemented",
			"memoize",
			"memoizeOne",
			"compose",
			"AssertionLevel",
			"equateValues",
			"equateStringsCaseInsensitive",
			"equateStringsCaseSensitive",
			"compareValues",
			"compareTextSpans",
			"min",
			"compareStringsCaseInsensitive",
			"compareStringsCaseSensitive",
			"getStringComparer",
			"getUILocale",
			"setUILocale",
			"compareStringsCaseSensitiveUI",
			"compareProperties",
			"compareBooleans",
			"getSpellingSuggestion",
			"endsWith",
			"removeSuffix",
			"tryRemoveSuffix",
			"stringContains",
			"removeMinAndVersionNumbers",
			"orderedRemoveItem",
			"orderedRemoveItemAt",
			"unorderedRemoveItemAt",
			"unorderedRemoveItem",
			"createGetCanonicalFileName",
			"patternText",
			"matchedText",
			"findBestPatternMatch",
			"startsWith",
			"removePrefix",
			"tryRemovePrefix",
			"and",
			"or",
			"not",
			"assertType",
			"singleElementArray",
			"enumerateInsertsAndDeletes",
			"fill",
			"cartesianProduct",
			"padLeft",
			"padRight",
			"LogLevel",
			"Debug",
			"timestamp",
			"performance",
			"perfLogger",
			"Version",
			"VersionRange",
			"SyntaxKind",
			"NodeFlags",
			"ModifierFlags",
			"JsxFlags",
			"RelationComparisonResult",
			"GeneratedIdentifierFlags",
			"TokenFlags",
			"FlowFlags",
			"CommentDirectiveType",
			"OperationCanceledException",
			"RefFileKind",
			"StructureIsReused",
			"ExitStatus",
			"UnionReduction",
			"ContextFlags",
			"NodeBuilderFlags",
			"TypeFormatFlags",
			"SymbolFormatFlags",
			"SymbolAccessibility",
			"SyntheticSymbolKind",
			"TypePredicateKind",
			"TypeReferenceSerializationKind",
			"SymbolFlags",
			"EnumKind",
			"CheckFlags",
			"InternalSymbolName",
			"NodeCheckFlags",
			"TypeFlags",
			"ObjectFlags",
			"VarianceFlags",
			"ElementFlags",
			"JsxReferenceKind",
			"SignatureKind",
			"SignatureFlags",
			"IndexKind",
			"TypeMapKind",
			"InferencePriority",
			"InferenceFlags",
			"Ternary",
			"AssignmentDeclarationKind",
			"DiagnosticCategory",
			"diagnosticCategoryName",
			"ModuleResolutionKind",
			"WatchFileKind",
			"WatchDirectoryKind",
			"PollingWatchKind",
			"ModuleKind",
			"JsxEmit",
			"ImportsNotUsedAsValues",
			"NewLineKind",
			"ScriptKind",
			"ScriptTarget",
			"LanguageVariant",
			"WatchDirectoryFlags",
			"CharacterCodes",
			"Extension",
			"TransformFlags",
			"EmitFlags",
			"ExternalEmitHelpers",
			"EmitHint",
			"OuterExpressionKinds",
			"LexicalEnvironmentFlags",
			"BundleFileSectionKind",
			"ListFormat",
			"PragmaKindFlags",
			"commentPragmas",
			"generateDjb2Hash",
			"setStackTraceLimit",
			"FileWatcherEventKind",
			"PollingInterval",
			"missingFileModifiedTime",
			"unchangedPollThresholds",
			"setCustomPollingValues",
			"createDynamicPriorityPollingWatchFile",
			"createSingleFileWatcherPerName",
			"onWatchedFileStat",
			"getFileWatcherEventKind",
			"ignoredPaths",
			"sysLog",
			"setSysLog",
			"createDirectoryWatcherSupportingRecursive",
			"FileSystemEntryKind",
			"createFileWatcherCallback",
			"createSystemWatchFunctions",
			"patchWriteFileEnsuringDirectory",
			"getNodeMajorVersion",
			"sys",
			"directorySeparator",
			"isAnyDirectorySeparator",
			"isUrl",
			"isRootedDiskPath",
			"isDiskPathRoot",
			"pathIsAbsolute",
			"pathIsRelative",
			"hasExtension",
			"fileExtensionIs",
			"fileExtensionIsOneOf",
			"hasTrailingDirectorySeparator",
			"getRootLength",
			"getDirectoryPath",
			"getBaseFileName",
			"getAnyExtensionFromPath",
			"getPathComponents",
			"getPathFromPathComponents",
			"normalizeSlashes",
			"reducePathComponents",
			"combinePaths",
			"resolvePath",
			"getNormalizedPathComponents",
			"getNormalizedAbsolutePath",
			"normalizePath",
			"getNormalizedAbsolutePathWithoutRoot",
			"toPath",
			"normalizePathAndParts",
			"removeTrailingDirectorySeparator",
			"ensureTrailingDirectorySeparator",
			"ensurePathIsNonModuleName",
			"changeAnyExtension",
			"comparePathsCaseSensitive",
			"comparePathsCaseInsensitive",
			"comparePaths",
			"containsPath",
			"startsWithDirectory",
			"getPathComponentsRelativeTo",
			"getRelativePathFromDirectory",
			"convertToRelativePath",
			"getRelativePathFromFile",
			"getRelativePathToDirectoryOrUrl",
			"forEachAncestorDirectory",
			"isNodeModulesDirectory",
			"Diagnostics",
			"tokenIsIdentifierOrKeyword",
			"tokenIsIdentifierOrKeywordOrGreaterThan",
			"isUnicodeIdentifierStart",
			"tokenToString",
			"stringToToken",
			"computeLineStarts",
			"getPositionOfLineAndCharacter",
			"computePositionOfLineAndCharacter",
			"getLineStarts",
			"computeLineAndCharacterOfPosition",
			"computeLineOfPosition",
			"getLinesBetweenPositions",
			"getLineAndCharacterOfPosition",
			"isWhiteSpaceLike",
			"isWhiteSpaceSingleLine",
			"isLineBreak",
			"isOctalDigit",
			"couldStartTrivia",
			"skipTrivia",
			"isShebangTrivia",
			"scanShebangTrivia",
			"forEachLeadingCommentRange",
			"forEachTrailingCommentRange",
			"reduceEachLeadingCommentRange",
			"reduceEachTrailingCommentRange",
			"getLeadingCommentRanges",
			"getTrailingCommentRanges",
			"getShebang",
			"isIdentifierStart",
			"isIdentifierPart",
			"isIdentifierText",
			"createScanner",
			"utf16EncodeAsString",
			"isExternalModuleNameRelative",
			"sortAndDeduplicateDiagnostics",
			"getDefaultLibFileName",
			"textSpanEnd",
			"textSpanIsEmpty",
			"textSpanContainsPosition",
			"textRangeContainsPositionInclusive",
			"textSpanContainsTextSpan",
			"textSpanOverlapsWith",
			"textSpanOverlap",
			"textSpanIntersectsWithTextSpan",
			"textSpanIntersectsWith",
			"decodedTextSpanIntersectsWith",
			"textSpanIntersectsWithPosition",
			"textSpanIntersection",
			"createTextSpan",
			"createTextSpanFromBounds",
			"textChangeRangeNewSpan",
			"textChangeRangeIsUnchanged",
			"createTextChangeRange",
			"unchangedTextChangeRange",
			"collapseTextChangeRangesAcrossMultipleVersions",
			"getTypeParameterOwner",
			"isParameterPropertyDeclaration",
			"isEmptyBindingPattern",
			"isEmptyBindingElement",
			"walkUpBindingElementsAndPatterns",
			"getCombinedModifierFlags",
			"getCombinedNodeFlagsAlwaysIncludeJSDoc",
			"getCombinedNodeFlags",
			"validateLocaleAndSetLanguage",
			"getOriginalNode",
			"isParseTreeNode",
			"getParseTreeNode",
			"escapeLeadingUnderscores",
			"unescapeLeadingUnderscores",
			"idText",
			"symbolName",
			"nodeHasName",
			"getNameOfJSDocTypedef",
			"isNamedDeclaration",
			"getNonAssignedNameOfDeclaration",
			"getNameOfDeclaration",
			"getAssignedName",
			"getJSDocParameterTags",
			"getJSDocParameterTagsNoCache",
			"getJSDocTypeParameterTags",
			"getJSDocTypeParameterTagsNoCache",
			"hasJSDocParameterTags",
			"getJSDocAugmentsTag",
			"getJSDocImplementsTags",
			"getJSDocClassTag",
			"getJSDocPublicTag",
			"getJSDocPublicTagNoCache",
			"getJSDocPrivateTag",
			"getJSDocPrivateTagNoCache",
			"getJSDocProtectedTag",
			"getJSDocProtectedTagNoCache",
			"getJSDocReadonlyTag",
			"getJSDocReadonlyTagNoCache",
			"getJSDocDeprecatedTag",
			"getJSDocDeprecatedTagNoCache",
			"getJSDocEnumTag",
			"getJSDocThisTag",
			"getJSDocReturnTag",
			"getJSDocTemplateTag",
			"getJSDocTypeTag",
			"getJSDocType",
			"getJSDocReturnType",
			"getJSDocTags",
			"getJSDocTagsNoCache",
			"getAllJSDocTags",
			"getAllJSDocTagsOfKind",
			"getEffectiveTypeParameterDeclarations",
			"getEffectiveConstraintOfTypeParameter",
			"isIdentifierOrPrivateIdentifier",
			"isGetOrSetAccessorDeclaration",
			"isPropertyAccessChain",
			"isElementAccessChain",
			"isCallChain",
			"isOptionalChain",
			"isOptionalChainRoot",
			"isExpressionOfOptionalChainRoot",
			"isOutermostOptionalChain",
			"isNullishCoalesce",
			"isConstTypeReference",
			"skipPartiallyEmittedExpressions",
			"isNonNullChain",
			"isBreakOrContinueStatement",
			"isNamedExportBindings",
			"isUnparsedTextLike",
			"isUnparsedNode",
			"isJSDocPropertyLikeTag",
			"isNode",
			"isNodeKind",
			"isToken",
			"isNodeArray",
			"isLiteralKind",
			"isLiteralExpression",
			"isTemplateLiteralKind",
			"isTemplateLiteralToken",
			"isTemplateMiddleOrTemplateTail",
			"isImportOrExportSpecifier",
			"isTypeOnlyImportOrExportDeclaration",
			"isStringTextContainingNode",
			"isGeneratedIdentifier",
			"isPrivateIdentifierPropertyDeclaration",
			"isPrivateIdentifierPropertyAccessExpression",
			"isModifierKind",
			"isParameterPropertyModifier",
			"isClassMemberModifier",
			"isModifier",
			"isEntityName",
			"isPropertyName",
			"isBindingName",
			"isFunctionLike",
			"isFunctionLikeDeclaration",
			"isFunctionLikeKind",
			"isFunctionOrModuleBlock",
			"isClassElement",
			"isClassLike",
			"isAccessor",
			"isMethodOrAccessor",
			"isTypeElement",
			"isClassOrTypeElement",
			"isObjectLiteralElementLike",
			"isTypeNode",
			"isFunctionOrConstructorTypeNode",
			"isBindingPattern",
			"isAssignmentPattern",
			"isArrayBindingElement",
			"isDeclarationBindingElement",
			"isBindingOrAssignmentPattern",
			"isObjectBindingOrAssignmentPattern",
			"isArrayBindingOrAssignmentPattern",
			"isPropertyAccessOrQualifiedNameOrImportTypeNode",
			"isPropertyAccessOrQualifiedName",
			"isCallLikeExpression",
			"isCallOrNewExpression",
			"isTemplateLiteral",
			"isLeftHandSideExpression",
			"isUnaryExpression",
			"isUnaryExpressionWithWrite",
			"isExpression",
			"isAssertionExpression",
			"isNotEmittedOrPartiallyEmittedNode",
			"isIterationStatement",
			"isScopeMarker",
			"hasScopeMarker",
			"needsScopeMarker",
			"isExternalModuleIndicator",
			"isForInOrOfStatement",
			"isConciseBody",
			"isFunctionBody",
			"isForInitializer",
			"isModuleBody",
			"isNamespaceBody",
			"isJSDocNamespaceBody",
			"isNamedImportBindings",
			"isModuleOrEnumDeclaration",
			"isDeclaration",
			"isDeclarationStatement",
			"isStatementButNotDeclaration",
			"isStatement",
			"isStatementOrBlock",
			"isModuleReference",
			"isJsxTagNameExpression",
			"isJsxChild",
			"isJsxAttributeLike",
			"isStringLiteralOrJsxExpression",
			"isJsxOpeningLikeElement",
			"isCaseOrDefaultClause",
			"isJSDocNode",
			"isJSDocCommentContainingNode",
			"isJSDocTag",
			"isSetAccessor",
			"isGetAccessor",
			"hasJSDocNodes",
			"hasType",
			"hasInitializer",
			"hasOnlyExpressionInitializer",
			"isObjectLiteralElement",
			"isTypeReferenceType",
			"guessIndentation",
			"isStringLiteralLike",
			"resolvingEmptyArray",
			"externalHelpersModuleNameText",
			"defaultMaximumTruncationLength",
			"noTruncationMaximumTruncationLength",
			"getDeclarationOfKind",
			"createUnderscoreEscapedMap",
			"hasEntries",
			"createSymbolTable",
			"isTransientSymbol",
			"changesAffectModuleResolution",
			"optionsHaveModuleResolutionChanges",
			"findAncestor",
			"forEachAncestor",
			"forEachEntry",
			"forEachKey",
			"copyEntries",
			"usingSingleLineStringWriter",
			"getFullWidth",
			"getResolvedModule",
			"setResolvedModule",
			"setResolvedTypeReferenceDirective",
			"projectReferenceIsEqualTo",
			"moduleResolutionIsEqualTo",
			"packageIdToString",
			"typeDirectiveIsEqualTo",
			"hasChangesInResolutions",
			"containsParseError",
			"getSourceFileOfNode",
			"isStatementWithLocals",
			"getStartPositionOfLine",
			"nodePosToString",
			"getEndLinePosition",
			"isFileLevelUniqueName",
			"nodeIsMissing",
			"nodeIsPresent",
			"insertStatementsAfterStandardPrologue",
			"insertStatementsAfterCustomPrologue",
			"insertStatementAfterStandardPrologue",
			"insertStatementAfterCustomPrologue",
			"isRecognizedTripleSlashComment",
			"isPinnedComment",
			"createCommentDirectivesMap",
			"getTokenPosOfNode",
			"getNonDecoratorTokenPosOfNode",
			"getSourceTextOfNodeFromSourceFile",
			"getTextOfNodeFromSourceText",
			"getTextOfNode",
			"indexOfNode",
			"getEmitFlags",
			"getLiteralText",
			"getTextOfConstantValue",
			"makeIdentifierFromModuleName",
			"isBlockOrCatchScoped",
			"isCatchClauseVariableDeclarationOrBindingElement",
			"isAmbientModule",
			"isModuleWithStringLiteralName",
			"isNonGlobalAmbientModule",
			"isEffectiveModuleDeclaration",
			"isShorthandAmbientModuleSymbol",
			"isBlockScopedContainerTopLevel",
			"isGlobalScopeAugmentation",
			"isExternalModuleAugmentation",
			"isModuleAugmentationExternal",
			"getNonAugmentationDeclaration",
			"isEffectiveExternalModule",
			"isEffectiveStrictModeSourceFile",
			"isBlockScope",
			"isDeclarationWithTypeParameters",
			"isDeclarationWithTypeParameterChildren",
			"isAnyImportSyntax",
			"isLateVisibilityPaintedStatement",
			"isAnyImportOrReExport",
			"getEnclosingBlockScopeContainer",
			"declarationNameToString",
			"getNameFromIndexInfo",
			"isComputedNonLiteralName",
			"getTextOfPropertyName",
			"entityNameToString",
			"createDiagnosticForNode",
			"createDiagnosticForNodeArray",
			"createDiagnosticForNodeInSourceFile",
			"createDiagnosticForNodeFromMessageChain",
			"createDiagnosticForRange",
			"getSpanOfTokenAtPosition",
			"getErrorSpanForNode",
			"isExternalOrCommonJsModule",
			"isJsonSourceFile",
			"isEnumConst",
			"isDeclarationReadonly",
			"isVarConst",
			"isLet",
			"isSuperCall",
			"isImportCall",
			"isImportMeta",
			"isLiteralImportTypeNode",
			"isPrologueDirective",
			"isCustomPrologue",
			"isHoistedFunction",
			"isHoistedVariableStatement",
			"getLeadingCommentRangesOfNode",
			"getJSDocCommentRanges",
			"fullTripleSlashReferencePathRegEx",
			"fullTripleSlashAMDReferencePathRegEx",
			"isPartOfTypeNode",
			"isChildOfNodeWithKind",
			"forEachReturnStatement",
			"forEachYieldExpression",
			"getRestParameterElementType",
			"getMembersOfDeclaration",
			"isVariableLike",
			"isVariableLikeOrAccessor",
			"isVariableDeclarationInVariableStatement",
			"isValidESSymbolDeclaration",
			"introducesArgumentsExoticObject",
			"unwrapInnermostStatementOfLabel",
			"isFunctionBlock",
			"isObjectLiteralMethod",
			"isObjectLiteralOrClassExpressionMethod",
			"isIdentifierTypePredicate",
			"isThisTypePredicate",
			"getPropertyAssignment",
			"getTsConfigObjectLiteralExpression",
			"getTsConfigPropArrayElementValue",
			"getTsConfigPropArray",
			"getContainingFunction",
			"getContainingFunctionDeclaration",
			"getContainingClass",
			"getThisContainer",
			"isInTopLevelContext",
			"getNewTargetContainer",
			"getSuperContainer",
			"getImmediatelyInvokedFunctionExpression",
			"isSuperOrSuperProperty",
			"isSuperProperty",
			"isThisProperty",
			"getEntityNameFromTypeNode",
			"getInvokedExpression",
			"nodeCanBeDecorated",
			"nodeIsDecorated",
			"nodeOrChildIsDecorated",
			"childIsDecorated",
			"isJSXTagName",
			"isExpressionNode",
			"isInExpressionContext",
			"isPartOfTypeQuery",
			"isExternalModuleImportEqualsDeclaration",
			"getExternalModuleImportEqualsDeclarationExpression",
			"isInternalModuleImportEqualsDeclaration",
			"isSourceFileJS",
			"isSourceFileNotJS",
			"isInJSFile",
			"isInJsonFile",
			"isSourceFileNotJson",
			"isInJSDoc",
			"isJSDocIndexSignature",
			"isRequireCall",
			"isRequireVariableDeclaration",
			"isRequireVariableStatement",
			"isSingleOrDoubleQuote",
			"isStringDoubleQuoted",
			"getDeclarationOfExpando",
			"isAssignmentDeclaration",
			"getEffectiveInitializer",
			"getDeclaredExpandoInitializer",
			"getAssignedExpandoInitializer",
			"getExpandoInitializer",
			"isDefaultedExpandoInitializer",
			"getNameOfExpando",
			"getRightMostAssignedExpression",
			"isExportsIdentifier",
			"isModuleIdentifier",
			"isModuleExportsAccessExpression",
			"getAssignmentDeclarationKind",
			"isBindableObjectDefinePropertyCall",
			"isLiteralLikeAccess",
			"isLiteralLikeElementAccess",
			"isBindableStaticAccessExpression",
			"isBindableStaticElementAccessExpression",
			"isBindableStaticNameExpression",
			"getNameOrArgument",
			"getElementOrPropertyAccessArgumentExpressionOrName",
			"getElementOrPropertyAccessName",
			"getAssignmentDeclarationPropertyAccessKind",
			"getInitializerOfBinaryExpression",
			"isPrototypePropertyAssignment",
			"isSpecialPropertyDeclaration",
			"setValueDeclaration",
			"isFunctionSymbol",
			"importFromModuleSpecifier",
			"tryGetImportFromModuleSpecifier",
			"getExternalModuleName",
			"getNamespaceDeclarationNode",
			"isDefaultImport",
			"forEachImportClauseDeclaration",
			"hasQuestionToken",
			"isJSDocConstructSignature",
			"isJSDocTypeAlias",
			"isTypeAlias",
			"getSingleInitializerOfVariableStatementOrPropertyDeclaration",
			"getSingleVariableOfVariableStatement",
			"getJSDocCommentsAndTags",
			"getParameterSymbolFromJSDoc",
			"getHostSignatureFromJSDoc",
			"getEffectiveJSDocHost",
			"getJSDocHost",
			"getTypeParameterFromJsDoc",
			"hasRestParameter",
			"isRestParameter",
			"hasTypeArguments",
			"AssignmentKind",
			"getAssignmentTargetKind",
			"isAssignmentTarget",
			"isNodeWithPossibleHoistedDeclaration",
			"isValueSignatureDeclaration",
			"walkUpParenthesizedTypes",
			"walkUpParenthesizedExpressions",
			"skipParentheses",
			"isDeleteTarget",
			"isNodeDescendantOf",
			"isDeclarationName",
			"getDeclarationFromName",
			"isLiteralComputedPropertyDeclarationName",
			"isIdentifierName",
			"isAliasSymbolDeclaration",
			"getAliasDeclarationFromName",
			"isAliasableExpression",
			"exportAssignmentIsAlias",
			"getExportAssignmentExpression",
			"getPropertyAssignmentAliasLikeExpression",
			"getEffectiveBaseTypeNode",
			"getClassExtendsHeritageElement",
			"getEffectiveImplementsTypeNodes",
			"getAllSuperTypeNodes",
			"getInterfaceBaseTypeNodes",
			"getHeritageClause",
			"getAncestor",
			"isKeyword",
			"isContextualKeyword",
			"isNonContextualKeyword",
			"isFutureReservedKeyword",
			"isStringANonContextualKeyword",
			"isStringAKeyword",
			"isIdentifierANonContextualKeyword",
			"isTrivia",
			"FunctionFlags",
			"getFunctionFlags",
			"isAsyncFunction",
			"isStringOrNumericLiteralLike",
			"isSignedNumericLiteral",
			"hasDynamicName",
			"isDynamicName",
			"isWellKnownSymbolSyntactically",
			"getPropertyNameForPropertyNameNode",
			"isPropertyNameLiteral",
			"getTextOfIdentifierOrLiteral",
			"getEscapedTextOfIdentifierOrLiteral",
			"getPropertyNameForUniqueESSymbol",
			"getPropertyNameForKnownSymbolName",
			"getSymbolNameForPrivateIdentifier",
			"isKnownSymbol",
			"isESSymbolIdentifier",
			"isPushOrUnshiftIdentifier",
			"isParameterDeclaration",
			"getRootDeclaration",
			"nodeStartsNewLexicalEnvironment",
			"nodeIsSynthesized",
			"getOriginalSourceFile",
			"Associativity",
			"getExpressionAssociativity",
			"getOperatorAssociativity",
			"getExpressionPrecedence",
			"getOperator",
			"OperatorPrecedence",
			"getOperatorPrecedence",
			"getBinaryOperatorPrecedence",
			"createDiagnosticCollection",
			"hasInvalidEscape",
			"escapeString",
			"escapeNonAsciiString",
			"escapeJsxAttributeString",
			"stripQuotes",
			"isIntrinsicJsxName",
			"getIndentString",
			"getIndentSize",
			"createTextWriter",
			"getTrailingSemicolonDeferringWriter",
			"hostUsesCaseSensitiveFileNames",
			"hostGetCanonicalFileName",
			"getResolvedExternalModuleName",
			"getExternalModuleNameFromDeclaration",
			"getExternalModuleNameFromPath",
			"getOwnEmitOutputFilePath",
			"getDeclarationEmitOutputFilePath",
			"getDeclarationEmitOutputFilePathWorker",
			"outFile",
			"getSourceFilesToEmit",
			"sourceFileMayBeEmitted",
			"getSourceFilePathInNewDir",
			"getSourceFilePathInNewDirWorker",
			"writeFile",
			"writeFileEnsuringDirectories",
			"getLineOfLocalPosition",
			"getLineOfLocalPositionFromLineMap",
			"getFirstConstructorWithBody",
			"getSetAccessorValueParameter",
			"getSetAccessorTypeAnnotationNode",
			"getThisParameter",
			"parameterIsThisKeyword",
			"isThisIdentifier",
			"identifierIsThisKeyword",
			"getAllAccessorDeclarations",
			"getEffectiveTypeAnnotationNode",
			"getTypeAnnotationNode",
			"getEffectiveReturnTypeNode",
			"getJSDocTypeParameterDeclarations",
			"getEffectiveSetAccessorTypeAnnotationNode",
			"emitNewLineBeforeLeadingComments",
			"emitNewLineBeforeLeadingCommentsOfPosition",
			"emitNewLineBeforeLeadingCommentOfPosition",
			"emitComments",
			"emitDetachedComments",
			"writeCommentRange",
			"hasEffectiveModifiers",
			"hasSyntacticModifiers",
			"hasEffectiveModifier",
			"hasSyntacticModifier",
			"hasStaticModifier",
			"hasEffectiveReadonlyModifier",
			"getSelectedEffectiveModifierFlags",
			"getSelectedSyntacticModifierFlags",
			"getEffectiveModifierFlags",
			"getEffectiveModifierFlagsAlwaysIncludeJSDoc",
			"getSyntacticModifierFlags",
			"getEffectiveModifierFlagsNoCache",
			"getSyntacticModifierFlagsNoCache",
			"modifiersToFlags",
			"modifierToFlag",
			"isLogicalOperator",
			"isLogicalOrCoalescingAssignmentOperator",
			"isLogicalOrCoalescingAssignmentExpression",
			"isAssignmentOperator",
			"tryGetClassExtendingExpressionWithTypeArguments",
			"tryGetClassImplementingOrExtendingExpressionWithTypeArguments",
			"isAssignmentExpression",
			"isDestructuringAssignment",
			"isExpressionWithTypeArgumentsInClassExtendsClause",
			"isEntityNameExpression",
			"getFirstIdentifier",
			"isDottedName",
			"isPropertyAccessEntityNameExpression",
			"tryGetPropertyAccessOrIdentifierToString",
			"isPrototypeAccess",
			"isRightSideOfQualifiedNameOrPropertyAccess",
			"isEmptyObjectLiteral",
			"isEmptyArrayLiteral",
			"getLocalSymbolForExportDefault",
			"tryExtractTSExtension",
			"convertToBase64",
			"base64encode",
			"base64decode",
			"readJson",
			"directoryProbablyExists",
			"getNewLineCharacter",
			"createRange",
			"moveRangeEnd",
			"moveRangePos",
			"moveRangePastDecorators",
			"moveRangePastModifiers",
			"isCollapsedRange",
			"createTokenRange",
			"rangeIsOnSingleLine",
			"rangeStartPositionsAreOnSameLine",
			"rangeEndPositionsAreOnSameLine",
			"rangeStartIsOnSameLineAsRangeEnd",
			"rangeEndIsOnSameLineAsRangeStart",
			"getLinesBetweenRangeEndAndRangeStart",
			"getLinesBetweenRangeEndPositions",
			"isNodeArrayMultiLine",
			"positionsAreOnSameLine",
			"getStartPositionOfRange",
			"getLinesBetweenPositionAndPrecedingNonWhitespaceCharacter",
			"getLinesBetweenPositionAndNextNonWhitespaceCharacter",
			"isDeclarationNameOfEnumOrNamespace",
			"getInitializedVariables",
			"isWatchSet",
			"closeFileWatcher",
			"getCheckFlags",
			"getDeclarationModifierFlagsFromSymbol",
			"skipAlias",
			"getCombinedLocalAndExportSymbolFlags",
			"isWriteOnlyAccess",
			"isWriteAccess",
			"compareDataObjects",
			"clearMap",
			"mutateMapSkippingNewValues",
			"mutateMap",
			"isAbstractConstructorType",
			"isAbstractConstructorSymbol",
			"getClassLikeDeclarationOfSymbol",
			"getObjectFlags",
			"typeHasCallOrConstructSignatures",
			"forSomeAncestorDirectory",
			"isUMDExportSymbol",
			"showModuleSpecifier",
			"getLastChild",
			"addToSeen",
			"isObjectTypeDeclaration",
			"isTypeNodeKind",
			"isAccessExpression",
			"getNameOfAccessExpression",
			"isBundleFileTextLike",
			"isNamedImportsOrExports",
			"getLeftmostExpression",
			"objectAllocator",
			"setObjectAllocator",
			"formatStringFromArgs",
			"setLocalizedDiagnosticMessages",
			"getLocaleSpecificMessage",
			"createDetachedDiagnostic",
			"attachFileToDiagnostics",
			"createFileDiagnostic",
			"formatMessage",
			"createCompilerDiagnostic",
			"createCompilerDiagnosticFromMessageChain",
			"chainDiagnosticMessages",
			"concatenateDiagnosticMessageChains",
			"compareDiagnostics",
			"compareDiagnosticsSkipRelatedInformation",
			"getLanguageVariant",
			"getEmitScriptTarget",
			"getEmitModuleKind",
			"getEmitModuleResolutionKind",
			"hasJsonModuleEmitEnabled",
			"unreachableCodeIsError",
			"unusedLabelIsError",
			"getAreDeclarationMapsEnabled",
			"getAllowSyntheticDefaultImports",
			"getEmitDeclarations",
			"isIncrementalCompilation",
			"getStrictOptionValue",
			"compilerOptionsAffectSemanticDiagnostics",
			"compilerOptionsAffectEmit",
			"getCompilerOptionValue",
			"hasZeroOrOneAsteriskCharacter",
			"createSymlinkCache",
			"discoverProbableSymlinks",
			"tryRemoveDirectoryPrefix",
			"regExpEscape",
			"commonPackageFolders",
			"getRegularExpressionForWildcard",
			"getRegularExpressionsForWildcards",
			"isImplicitGlob",
			"getFileMatcherPatterns",
			"getRegexFromPattern",
			"matchFiles",
			"ensureScriptKind",
			"getScriptKindFromFileName",
			"supportedTSExtensions",
			"supportedTSExtensionsWithJson",
			"supportedTSExtensionsForExtractExtension",
			"supportedJSExtensions",
			"supportedJSAndJsonExtensions",
			"getSupportedExtensions",
			"getSuppoertedExtensionsWithJsonIfResolveJsonModule",
			"hasJSFileExtension",
			"hasTSFileExtension",
			"isSupportedSourceFileName",
			"ExtensionPriority",
			"getExtensionPriority",
			"adjustExtensionPriority",
			"getNextLowestExtensionPriority",
			"removeFileExtension",
			"tryRemoveExtension",
			"removeExtension",
			"changeExtension",
			"tryParsePattern",
			"positionIsSynthesized",
			"extensionIsTS",
			"resolutionExtensionIsTSOrJson",
			"extensionFromPath",
			"isAnySupportedFileExtension",
			"tryGetExtensionFromPath",
			"isCheckJsEnabledForFile",
			"emptyFileSystemEntries",
			"matchPatternOrExact",
			"sliceAfter",
			"addRelatedInfo",
			"minAndMax",
			"rangeOfNode",
			"rangeOfTypeParameters",
			"skipTypeChecking",
			"isJsonEqual",
			"parsePseudoBigInt",
			"pseudoBigIntToString",
			"isValidTypeOnlyAliasUseSite",
			"typeOnlyDeclarationIsExport",
			"isIdentifierTypeReference",
			"arrayIsHomogeneous",
			"setTextRangePos",
			"setTextRangeEnd",
			"setTextRangePosEnd",
			"setTextRangePosWidth",
			"setNodeFlags",
			"setParent",
			"setEachParent",
			"setParentRecursive",
			"createBaseNodeFactory",
			"createParenthesizerRules",
			"nullParenthesizerRules",
			"createNodeConverters",
			"nullNodeConverters",
			"NodeFactoryFlags",
			"createNodeFactory",
			"getTransformFlagsSubtreeExclusions",
			"factory",
			"createUnparsedSourceFile",
			"createInputFiles",
			"createSourceMapSource",
			"setOriginalNode",
			"getOrCreateEmitNode",
			"disposeEmitNodes",
			"removeAllComments",
			"setEmitFlags",
			"addEmitFlags",
			"getSourceMapRange",
			"setSourceMapRange",
			"getTokenSourceMapRange",
			"setTokenSourceMapRange",
			"getStartsOnNewLine",
			"setStartsOnNewLine",
			"getCommentRange",
			"setCommentRange",
			"getSyntheticLeadingComments",
			"setSyntheticLeadingComments",
			"addSyntheticLeadingComment",
			"getSyntheticTrailingComments",
			"setSyntheticTrailingComments",
			"addSyntheticTrailingComment",
			"moveSyntheticComments",
			"getConstantValue",
			"setConstantValue",
			"addEmitHelper",
			"addEmitHelpers",
			"removeEmitHelper",
			"getEmitHelpers",
			"moveEmitHelpers",
			"ignoreSourceNewlines",
			"createEmitHelperFactory",
			"compareEmitHelpers",
			"helperString",
			"decorateHelper",
			"metadataHelper",
			"paramHelper",
			"assignHelper",
			"awaitHelper",
			"asyncGeneratorHelper",
			"asyncDelegator",
			"asyncValues",
			"restHelper",
			"awaiterHelper",
			"extendsHelper",
			"templateObjectHelper",
			"readHelper",
			"spreadHelper",
			"spreadArraysHelper",
			"valuesHelper",
			"generatorHelper",
			"createBindingHelper",
			"setModuleDefaultHelper",
			"importStarHelper",
			"importDefaultHelper",
			"exportStarHelper",
			"classPrivateFieldGetHelper",
			"classPrivateFieldSetHelper",
			"getAllUnscopedEmitHelpers",
			"asyncSuperHelper",
			"advancedAsyncSuperHelper",
			"isNumericLiteral",
			"isBigIntLiteral",
			"isStringLiteral",
			"isJsxText",
			"isRegularExpressionLiteral",
			"isNoSubstitutionTemplateLiteral",
			"isTemplateHead",
			"isTemplateMiddle",
			"isTemplateTail",
			"isIdentifier",
			"isQualifiedName",
			"isComputedPropertyName",
			"isPrivateIdentifier",
			"isSuperKeyword",
			"isImportKeyword",
			"isCommaToken",
			"isQuestionToken",
			"isExclamationToken",
			"isTypeParameterDeclaration",
			"isParameter",
			"isDecorator",
			"isPropertySignature",
			"isPropertyDeclaration",
			"isMethodSignature",
			"isMethodDeclaration",
			"isConstructorDeclaration",
			"isGetAccessorDeclaration",
			"isSetAccessorDeclaration",
			"isCallSignatureDeclaration",
			"isConstructSignatureDeclaration",
			"isIndexSignatureDeclaration",
			"isTypePredicateNode",
			"isTypeReferenceNode",
			"isFunctionTypeNode",
			"isConstructorTypeNode",
			"isTypeQueryNode",
			"isTypeLiteralNode",
			"isArrayTypeNode",
			"isTupleTypeNode",
			"isNamedTupleMember",
			"isOptionalTypeNode",
			"isRestTypeNode",
			"isUnionTypeNode",
			"isIntersectionTypeNode",
			"isConditionalTypeNode",
			"isInferTypeNode",
			"isParenthesizedTypeNode",
			"isThisTypeNode",
			"isTypeOperatorNode",
			"isIndexedAccessTypeNode",
			"isMappedTypeNode",
			"isLiteralTypeNode",
			"isImportTypeNode",
			"isObjectBindingPattern",
			"isArrayBindingPattern",
			"isBindingElement",
			"isArrayLiteralExpression",
			"isObjectLiteralExpression",
			"isPropertyAccessExpression",
			"isElementAccessExpression",
			"isCallExpression",
			"isNewExpression",
			"isTaggedTemplateExpression",
			"isTypeAssertionExpression",
			"isParenthesizedExpression",
			"isFunctionExpression",
			"isArrowFunction",
			"isDeleteExpression",
			"isTypeOfExpression",
			"isVoidExpression",
			"isAwaitExpression",
			"isPrefixUnaryExpression",
			"isPostfixUnaryExpression",
			"isBinaryExpression",
			"isConditionalExpression",
			"isTemplateExpression",
			"isYieldExpression",
			"isSpreadElement",
			"isClassExpression",
			"isOmittedExpression",
			"isExpressionWithTypeArguments",
			"isAsExpression",
			"isNonNullExpression",
			"isMetaProperty",
			"isSyntheticExpression",
			"isPartiallyEmittedExpression",
			"isCommaListExpression",
			"isTemplateSpan",
			"isSemicolonClassElement",
			"isBlock",
			"isVariableStatement",
			"isEmptyStatement",
			"isExpressionStatement",
			"isIfStatement",
			"isDoStatement",
			"isWhileStatement",
			"isForStatement",
			"isForInStatement",
			"isForOfStatement",
			"isContinueStatement",
			"isBreakStatement",
			"isReturnStatement",
			"isWithStatement",
			"isSwitchStatement",
			"isLabeledStatement",
			"isThrowStatement",
			"isTryStatement",
			"isDebuggerStatement",
			"isVariableDeclaration",
			"isVariableDeclarationList",
			"isFunctionDeclaration",
			"isClassDeclaration",
			"isInterfaceDeclaration",
			"isTypeAliasDeclaration",
			"isEnumDeclaration",
			"isModuleDeclaration",
			"isModuleBlock",
			"isCaseBlock",
			"isNamespaceExportDeclaration",
			"isImportEqualsDeclaration",
			"isImportDeclaration",
			"isImportClause",
			"isNamespaceImport",
			"isNamespaceExport",
			"isNamedImports",
			"isImportSpecifier",
			"isExportAssignment",
			"isExportDeclaration",
			"isNamedExports",
			"isExportSpecifier",
			"isMissingDeclaration",
			"isNotEmittedStatement",
			"isSyntheticReference",
			"isMergeDeclarationMarker",
			"isEndOfDeclarationMarker",
			"isExternalModuleReference",
			"isJsxElement",
			"isJsxSelfClosingElement",
			"isJsxOpeningElement",
			"isJsxClosingElement",
			"isJsxFragment",
			"isJsxOpeningFragment",
			"isJsxClosingFragment",
			"isJsxAttribute",
			"isJsxAttributes",
			"isJsxSpreadAttribute",
			"isJsxExpression",
			"isCaseClause",
			"isDefaultClause",
			"isHeritageClause",
			"isCatchClause",
			"isPropertyAssignment",
			"isShorthandPropertyAssignment",
			"isSpreadAssignment",
			"isEnumMember",
			"isUnparsedPrepend",
			"isSourceFile",
			"isBundle",
			"isUnparsedSource",
			"isJSDocTypeExpression",
			"isJSDocAllType",
			"isJSDocUnknownType",
			"isJSDocNullableType",
			"isJSDocNonNullableType",
			"isJSDocOptionalType",
			"isJSDocFunctionType",
			"isJSDocVariadicType",
			"isJSDocNamepathType",
			"isJSDoc",
			"isJSDocTypeLiteral",
			"isJSDocSignature",
			"isJSDocAugmentsTag",
			"isJSDocAuthorTag",
			"isJSDocClassTag",
			"isJSDocCallbackTag",
			"isJSDocPublicTag",
			"isJSDocPrivateTag",
			"isJSDocProtectedTag",
			"isJSDocReadonlyTag",
			"isJSDocDeprecatedTag",
			"isJSDocEnumTag",
			"isJSDocParameterTag",
			"isJSDocReturnTag",
			"isJSDocThisTag",
			"isJSDocTypeTag",
			"isJSDocTemplateTag",
			"isJSDocTypedefTag",
			"isJSDocUnknownTag",
			"isJSDocPropertyTag",
			"isJSDocImplementsTag",
			"isSyntaxList",
			"createEmptyExports",
			"createMemberAccessForPropertyName",
			"createExpressionForJsxElement",
			"createExpressionForJsxFragment",
			"createForOfBindingStatement",
			"insertLeadingStatement",
			"createExpressionFromEntityName",
			"createExpressionForPropertyName",
			"createExpressionForObjectLiteralElementLike",
			"isInternalName",
			"isLocalName",
			"isExportName",
			"findUseStrictPrologue",
			"startsWithUseStrict",
			"isCommaSequence",
			"isOuterExpression",
			"skipOuterExpressions",
			"skipAssertions",
			"startOnNewLine",
			"getExternalHelpersModuleName",
			"hasRecordedExternalHelpers",
			"createExternalHelpersImportDeclarationIfNeeded",
			"getOrCreateExternalHelpersModuleNameIfNeeded",
			"getLocalNameForExternalImport",
			"getExternalModuleNameLiteral",
			"tryGetModuleNameFromFile",
			"getInitializerOfBindingOrAssignmentElement",
			"getTargetOfBindingOrAssignmentElement",
			"getRestIndicatorOfBindingOrAssignmentElement",
			"getPropertyNameOfBindingOrAssignmentElement",
			"tryGetPropertyNameOfBindingOrAssignmentElement",
			"getElementsOfBindingOrAssignmentPattern",
			"getJSDocTypeAliasName",
			"canHaveModifiers",
			"isExportModifier",
			"isAsyncModifier",
			"isStaticModifier",
			"setTextRange",
			"parseBaseNodeFactory",
			"parseNodeFactory",
			"isJSDocLikeText",
			"forEachChild",
			"forEachChildRecursively",
			"createSourceFile",
			"parseIsolatedEntityName",
			"parseJsonText",
			"isExternalModule",
			"updateSourceFile",
			"parseIsolatedJSDocComment",
			"parseJSDocTypeExpressionForTests",
			"isDeclarationFileName",
			"processCommentPragmas",
			"processPragmasIntoFields",
			"tagNamesAreEquivalent",
			"compileOnSaveCommandLineOption",
			"libs",
			"libMap",
			"optionsForWatch",
			"commonOptionsWithBuild",
			"optionDeclarations",
			"semanticDiagnosticsOptionDeclarations",
			"affectsEmitOptionDeclarations",
			"moduleResolutionOptionDeclarations",
			"sourceFileAffectingCompilerOptions",
			"transpileOptionValueCompilerOptions",
			"buildOpts",
			"typeAcquisitionDeclarations",
			"createOptionNameMap",
			"getOptionsNameMap",
			"defaultInitCompilerOptions",
			"convertEnableAutoDiscoveryToEnable",
			"createCompilerDiagnosticForInvalidCustomType",
			"parseCustomTypeOption",
			"parseListTypeOption",
			"parseCommandLineWorker",
			"compilerOptionsDidYouMeanDiagnostics",
			"parseCommandLine",
			"getOptionFromName",
			"parseBuildCommand",
			"getDiagnosticText",
			"getParsedCommandLineOfConfigFile",
			"readConfigFile",
			"parseConfigFileTextToJson",
			"readJsonConfigFile",
			"tryReadFile",
			"convertToObject",
			"convertToObjectWorker",
			"convertToTSConfig",
			"generateTSConfig",
			"convertToOptionsWithAbsolutePaths",
			"parseJsonConfigFileContent",
			"parseJsonSourceFileConfigFileContent",
			"setConfigFileInOptions",
			"canJsonReportNoInputFiles",
			"updateErrorForNoInputFiles",
			"convertCompilerOptionsFromJson",
			"convertTypeAcquisitionFromJson",
			"getFileNamesFromConfigSpecs",
			"isExcludedFile",
			"convertCompilerOptionsForTelemetry",
			"trace",
			"isTraceEnabled",
			"getPackageJsonTypesVersionsPaths",
			"getEffectiveTypeRoots",
			"resolveTypeReferenceDirective",
			"getAutomaticTypeDirectiveNames",
			"createModuleResolutionCache",
			"createCacheWithRedirects",
			"createModuleResolutionCacheWithMaps",
			"resolveModuleNameFromCache",
			"resolveModuleName",
			"resolveJSModule",
			"tryResolveJSModule",
			"nodeModuleNameResolver",
			"nodeModulesPathPart",
			"pathContainsNodeModules",
			"parsePackageName",
			"getTypesPackageName",
			"mangleScopedPackageName",
			"getPackageNameFromTypesPackageName",
			"unmangleScopedPackageName",
			"classicNameResolver",
			"loadModuleFromGlobalCache",
			"ModuleInstanceState",
			"getModuleInstanceState",
			"bindSourceFile",
			"isExportsOrModuleExportsOrAlias",
			"createGetSymbolWalker",
			"getNodeId",
			"getSymbolId",
			"isInstantiatedModule",
			"createTypeChecker",
			"signatureHasRestParameter",
			"signatureHasLiteralTypes",
			"visitNode",
			"visitNodes",
			"visitLexicalEnvironment",
			"visitParameterList",
			"visitFunctionBody",
			"visitEachChild",
			"createSourceMapGenerator",
			"getLineInfo",
			"tryGetSourceMappingURL",
			"isRawSourceMap",
			"tryParseRawSourceMap",
			"decodeMappings",
			"sameMapping",
			"isSourceMapping",
			"createDocumentPositionMapper",
			"identitySourceMapConsumer",
			"getOriginalNodeId",
			"chainBundle",
			"getExportNeedsImportStarHelper",
			"getImportNeedsImportStarHelper",
			"getImportNeedsImportDefaultHelper",
			"collectExternalModuleInfo",
			"isSimpleCopiableExpression",
			"isSimpleInlineableExpression",
			"isCompoundAssignment",
			"getNonAssignmentOperatorForCompoundAssignment",
			"addPrologueDirectivesAndInitialSuperCall",
			"getProperties",
			"isInitializedProperty",
			"FlattenLevel",
			"flattenDestructuringAssignment",
			"flattenDestructuringBinding",
			"ProcessLevel",
			"processTaggedTemplateExpression",
			"transformTypeScript",
			"transformClassFields",
			"transformES2017",
			"createSuperAccessVariableStatement",
			"transformES2018",
			"transformES2019",
			"transformES2020",
			"transformESNext",
			"transformJsx",
			"transformES2016",
			"transformES2015",
			"transformES5",
			"transformGenerators",
			"transformModule",
			"transformSystemModule",
			"transformECMAScriptModule",
			"canProduceDiagnostics",
			"createGetSymbolAccessibilityDiagnosticForNodeName",
			"createGetSymbolAccessibilityDiagnosticForNode",
			"getDeclarationDiagnostics",
			"isInternalDeclaration",
			"transformDeclarations",
			"noTransformers",
			"getTransformers",
			"noEmitSubstitution",
			"noEmitNotification",
			"transformNodes",
			"nullTransformationContext",
			"isBuildInfoFile",
			"forEachEmittedFile",
			"getTsBuildInfoEmitOutputFilePath",
			"getOutputPathsForBundle",
			"getOutputPathsFor",
			"getOutputExtension",
			"getOutputDeclarationFileName",
			"getAllProjectOutputs",
			"getOutputFileNames",
			"getFirstProjectOutput",
			"emitFiles",
			"getBuildInfoText",
			"getBuildInfo",
			"notImplementedResolver",
			"emitUsingBuildInfo",
			"createPrinter",
			"createCachedDirectoryStructureHost",
			"ConfigFileProgramReloadLevel",
			"updateMissingFilePathsWatch",
			"updateWatchingWildcardDirectories",
			"isIgnoredFileFromWildCardWatching",
			"isEmittedFileOfProgram",
			"WatchLogLevel",
			"getWatchFactory",
			"getFallbackOptions",
			"closeFileWatcherOf",
			"findConfigFile",
			"resolveTripleslashReference",
			"computeCommonSourceDirectoryOfFilenames",
			"createCompilerHost",
			"createCompilerHostWorker",
			"changeCompilerHostLikeToUseCache",
			"getPreEmitDiagnostics",
			"formatDiagnostics",
			"formatDiagnostic",
			"ForegroundColorEscapeSequences",
			"formatColorAndReset",
			"formatLocation",
			"formatDiagnosticsWithColorAndContext",
			"flattenDiagnosticMessageText",
			"loadWithLocalCache",
			"inferredTypesContainingFile",
			"isProgramUptoDate",
			"getConfigFileParsingDiagnostics",
			"createProgram",
			"emitSkippedWithNoDiagnostics",
			"handleNoEmitOptions",
			"filterSemanticDiagnotics",
			"parseConfigHostFromCompilerHostLike",
			"createPrependNodes",
			"resolveProjectReferencePath",
			"getResolutionDiagnostic",
			"getFileEmitOutput",
			"BuilderState",
			"BuilderFileEmit",
			"BuilderProgramKind",
			"getBuilderCreationParameters",
			"createBuilderProgram",
			"createBuildProgramUsingProgramBuildInfo",
			"createRedirectedBuilderProgram",
			"createSemanticDiagnosticsBuilderProgram",
			"createEmitAndSemanticDiagnosticsBuilderProgram",
			"createAbstractBuilder",
			"removeIgnoredPath",
			"canWatchDirectory",
			"createResolutionCache",
			"moduleSpecifiers",
			"createDiagnosticReporter",
			"screenStartingMessageCodes",
			"getLocaleTimeString",
			"createWatchStatusReporter",
			"parseConfigFileWithSystem",
			"getErrorCountForSummary",
			"getWatchErrorSummaryDiagnosticMessage",
			"getErrorSummaryText",
			"listFiles",
			"emitFilesAndReportErrors",
			"emitFilesAndReportErrorsAndGetExitStatus",
			"noopFileWatcher",
			"returnNoopFileWatcher",
			"createWatchHost",
			"WatchType",
			"createWatchFactory",
			"createCompilerHostFromProgramHost",
			"setGetSourceFileAsHashVersioned",
			"createProgramHost",
			"createWatchCompilerHostOfConfigFile",
			"createWatchCompilerHostOfFilesAndCompilerOptions",
			"performIncrementalCompilation",
			"readBuilderProgram",
			"createIncrementalCompilerHost",
			"createIncrementalProgram",
			"createWatchCompilerHost",
			"createWatchProgram",
			"UpToDateStatusType",
			"resolveConfigFileProjectName",
			"isCircularBuildOrder",
			"getBuildOrderFromAnyBuildOrder",
			"createBuilderStatusReporter",
			"createSolutionBuilderHost",
			"createSolutionBuilderWithWatchHost",
			"createSolutionBuilder",
			"createSolutionBuilderWithWatch",
			"InvalidatedProjectKind",
			"server",
			"JsTyping",
			"ScriptSnapshot",
			"PackageJsonDependencyGroup",
			"PackageJsonAutoImportPreference",
			"LanguageServiceMode",
			"emptyOptions",
			"HighlightSpanKind",
			"IndentStyle",
			"SemicolonPreference",
			"getDefaultFormatCodeSettings",
			"testFormatSettings",
			"SymbolDisplayPartKind",
			"OutliningSpanKind",
			"OutputFileType",
			"EndOfLineState",
			"TokenClass",
			"ScriptElementKind",
			"ScriptElementKindModifier",
			"ClassificationTypeNames",
			"ClassificationType",
			"scanner",
			"SemanticMeaning",
			"getMeaningFromDeclaration",
			"getMeaningFromLocation",
			"isInRightSideOfInternalImportEqualsDeclaration",
			"isCallExpressionTarget",
			"isNewExpressionTarget",
			"isCallOrNewExpressionTarget",
			"isTaggedTemplateTag",
			"isDecoratorTarget",
			"isJsxOpeningLikeElementTagName",
			"climbPastPropertyAccess",
			"climbPastPropertyOrElementAccess",
			"getTargetLabel",
			"hasPropertyAccessExpressionWithName",
			"isJumpStatementTarget",
			"isLabelOfLabeledStatement",
			"isLabelName",
			"isTagName",
			"isRightSideOfQualifiedName",
			"isRightSideOfPropertyAccess",
			"isArgumentExpressionOfElementAccess",
			"isNameOfModuleDeclaration",
			"isNameOfFunctionDeclaration",
			"isLiteralNameOfPropertyDeclarationOrIndexAccess",
			"isExpressionOfExternalModuleImportEqualsDeclaration",
			"getContainerNode",
			"getNodeKind",
			"isThis",
			"getLineStartPositionForPosition",
			"rangeContainsRange",
			"rangeContainsRangeExclusive",
			"rangeContainsPosition",
			"rangeContainsPositionExclusive",
			"startEndContainsRange",
			"rangeContainsStartEnd",
			"rangeOverlapsWithStartEnd",
			"nodeOverlapsWithStartEnd",
			"startEndOverlapsWithStartEnd",
			"positionBelongsToNode",
			"findListItemInfo",
			"hasChildOfKind",
			"findChildOfKind",
			"findContainingList",
			"getAdjustedReferenceLocation",
			"getAdjustedRenameLocation",
			"getTouchingPropertyName",
			"getTouchingToken",
			"getTokenAtPosition",
			"findTokenOnLeftOfPosition",
			"findNextToken",
			"findPrecedingToken",
			"isInString",
			"isInsideJsxElementOrAttribute",
			"isInTemplateString",
			"isInJSXText",
			"isInsideJsxElement",
			"findPrecedingMatchingToken",
			"removeOptionality",
			"isPossiblyTypeArgumentPosition",
			"getPossibleGenericSignatures",
			"getPossibleTypeArgumentsInfo",
			"isInComment",
			"hasDocComment",
			"getNodeModifiers",
			"getTypeArgumentOrTypeParameterList",
			"isComment",
			"isStringOrRegularExpressionOrTemplateLiteral",
			"isPunctuation",
			"isInsideTemplateLiteral",
			"isAccessibilityModifier",
			"cloneCompilerOptions",
			"isArrayLiteralOrObjectLiteralDestructuringPattern",
			"isInReferenceComment",
			"isInNonReferenceComment",
			"getReplacementSpanForContextToken",
			"createTextSpanFromNode",
			"createTextSpanFromStringLiteralLikeContent",
			"createTextRangeFromNode",
			"createTextSpanFromRange",
			"createTextRangeFromSpan",
			"createTextChangeFromStartLength",
			"createTextChange",
			"typeKeywords",
			"isTypeKeyword",
			"isTypeKeywordToken",
			"isExternalModuleSymbol",
			"nodeSeenTracker",
			"getSnapshotText",
			"repeatString",
			"skipConstraint",
			"getNameFromPropertyName",
			"programContainsModules",
			"programContainsEs6Modules",
			"compilerOptionsIndicateEs6Modules",
			"createModuleSpecifierResolutionHost",
			"getModuleSpecifierResolverHost",
			"makeImportIfNecessary",
			"makeImport",
			"makeStringLiteral",
			"QuotePreference",
			"quotePreferenceFromString",
			"getQuotePreference",
			"getQuoteFromPreference",
			"symbolNameNoDefault",
			"symbolEscapedNameNoDefault",
			"isObjectBindingElementWithoutPropertyName",
			"getPropertySymbolFromBindingElement",
			"getPropertySymbolsFromBaseTypes",
			"isMemberSymbolInBaseType",
			"getParentNodeInSpan",
			"findModifier",
			"insertImports",
			"getTypeKeywordOfTypeOnlyImport",
			"textSpansEqual",
			"documentSpansEqual",
			"forEachUnique",
			"isTextWhiteSpaceLike",
			"isFirstDeclarationOfSymbolParameter",
			"symbolPart",
			"displayPart",
			"spacePart",
			"keywordPart",
			"punctuationPart",
			"operatorPart",
			"textOrKeywordPart",
			"textPart",
			"getNewLineOrDefaultFromHost",
			"lineBreakPart",
			"mapToDisplayParts",
			"typeToDisplayParts",
			"symbolToDisplayParts",
			"signatureToDisplayParts",
			"isImportOrExportSpecifierName",
			"getScriptKind",
			"getSymbolTarget",
			"getUniqueSymbolId",
			"getFirstNonSpaceCharacterPosition",
			"getPrecedingNonSpaceCharacterPosition",
			"getSynthesizedDeepClone",
			"getSynthesizedDeepCloneWithRenames",
			"getSynthesizedDeepClones",
			"suppressLeadingAndTrailingTrivia",
			"suppressLeadingTrivia",
			"suppressTrailingTrivia",
			"copyComments",
			"getUniqueName",
			"getRenameLocation",
			"copyLeadingComments",
			"copyTrailingComments",
			"copyTrailingAsLeadingComments",
			"needsParentheses",
			"getContextualTypeFromParent",
			"quote",
			"isEqualityOperatorKind",
			"isStringLiteralOrTemplate",
			"hasIndexSignature",
			"getSwitchedType",
			"ANONYMOUS",
			"getTypeNodeIfAccessible",
			"syntaxRequiresTrailingCommaOrSemicolonOrASI",
			"syntaxRequiresTrailingFunctionBlockOrSemicolonOrASI",
			"syntaxRequiresTrailingModuleBlockOrSemicolonOrASI",
			"syntaxRequiresTrailingSemicolonOrASI",
			"syntaxMayBeASICandidate",
			"positionIsASICandidate",
			"probablyUsesSemicolons",
			"tryGetDirectories",
			"tryReadDirectory",
			"tryFileExists",
			"tryDirectoryExists",
			"tryAndIgnoreErrors",
			"tryIOAndConsumeErrors",
			"findPackageJsons",
			"findPackageJson",
			"getPackageJsonsVisibleToFile",
			"createPackageJsonInfo",
			"consumesNodeCoreModules",
			"isInsideNodeModules",
			"isDiagnosticWithLocation",
			"findDiagnosticForNode",
			"getDiagnosticsWithinSpan",
			"getRefactorContextSpan",
			"mapOneOrMany",
			"firstOrOnly",
			"getNameForExportedSymbol",
			"stringContainsAt",
			"startsWithUnderscore",
			"isGlobalDeclaration",
			"isNonGlobalDeclaration",
			"createClassifier",
			"getSemanticClassifications",
			"getEncodedSemanticClassifications",
			"getSyntacticClassifications",
			"getEncodedSyntacticClassifications",
			"Completions",
			"DocumentHighlights",
			"createDocumentRegistry",
			"createDocumentRegistryInternal",
			"FindAllReferences",
			"CallHierarchy",
			"getEditsForFileRename",
			"getPathUpdater",
			"GoToDefinition",
			"JsDoc",
			"NavigateTo",
			"NavigationBar",
			"OrganizeImports",
			"OutliningElementsCollector",
			"PatternMatchKind",
			"createPatternMatcher",
			"breakIntoCharacterSpans",
			"breakIntoWordSpans",
			"preProcessFile",
			"Rename",
			"SmartSelectionRange",
			"SignatureHelp",
			"getSourceMapper",
			"getDocumentPositionMapper",
			"computeSuggestionDiagnostics",
			"isReturnStatementWithFixablePromiseHandler",
			"isFixablePromiseHandler",
			"SymbolDisplay",
			"transpileModule",
			"transpile",
			"fixupCompilerOptions",
			"formatting",
			"textChanges",
			"codefix",
			"refactor",
			"servicesVersion",
			"toEditorSettings",
			"displayPartsToString",
			"getDefaultCompilerOptions",
			"getSupportedCodeFixes",
			"createLanguageServiceSourceFile",
			"updateLanguageServiceSourceFile",
			"ThrottledCancellationToken",
			"createLanguageService",
			"getNameTable",
			"getContainingObjectLiteralElement",
			"getPropertySymbolsFromContextualType",
			"getDefaultLibFilePath",
			"BreakpointResolver",
			"transform",
			"LanguageServiceShimHostAdapter",
			"CoreServicesShimHostAdapter",
			"realizeDiagnostics",
			"TypeScriptServicesFactory",
			"createNodeArray",
			"createNumericLiteral",
			"createBigIntLiteral",
			"createStringLiteral",
			"createStringLiteralFromNode",
			"createRegularExpressionLiteral",
			"createLoopVariable",
			"createUniqueName",
			"createPrivateIdentifier",
			"createSuper",
			"createThis",
			"createNull",
			"createTrue",
			"createFalse",
			"createModifier",
			"createModifiersFromModifierFlags",
			"createQualifiedName",
			"updateQualifiedName",
			"createComputedPropertyName",
			"updateComputedPropertyName",
			"createTypeParameterDeclaration",
			"updateTypeParameterDeclaration",
			"createParameter",
			"updateParameter",
			"createDecorator",
			"updateDecorator",
			"createProperty",
			"updateProperty",
			"createMethod",
			"updateMethod",
			"createConstructor",
			"updateConstructor",
			"createGetAccessor",
			"updateGetAccessor",
			"createSetAccessor",
			"updateSetAccessor",
			"createCallSignature",
			"updateCallSignature",
			"createConstructSignature",
			"updateConstructSignature",
			"updateIndexSignature",
			"createKeywordTypeNode",
			"createTypePredicateNodeWithModifier",
			"updateTypePredicateNodeWithModifier",
			"createTypeReferenceNode",
			"updateTypeReferenceNode",
			"createFunctionTypeNode",
			"updateFunctionTypeNode",
			"createConstructorTypeNode",
			"updateConstructorTypeNode",
			"createTypeQueryNode",
			"updateTypeQueryNode",
			"createTypeLiteralNode",
			"updateTypeLiteralNode",
			"createArrayTypeNode",
			"updateArrayTypeNode",
			"createTupleTypeNode",
			"updateTupleTypeNode",
			"createOptionalTypeNode",
			"updateOptionalTypeNode",
			"createRestTypeNode",
			"updateRestTypeNode",
			"createUnionTypeNode",
			"updateUnionTypeNode",
			"createIntersectionTypeNode",
			"updateIntersectionTypeNode",
			"createConditionalTypeNode",
			"updateConditionalTypeNode",
			"createInferTypeNode",
			"updateInferTypeNode",
			"createImportTypeNode",
			"updateImportTypeNode",
			"createParenthesizedType",
			"updateParenthesizedType",
			"createThisTypeNode",
			"updateTypeOperatorNode",
			"createIndexedAccessTypeNode",
			"updateIndexedAccessTypeNode",
			"createMappedTypeNode",
			"updateMappedTypeNode",
			"createLiteralTypeNode",
			"updateLiteralTypeNode",
			"createObjectBindingPattern",
			"updateObjectBindingPattern",
			"createArrayBindingPattern",
			"updateArrayBindingPattern",
			"createBindingElement",
			"updateBindingElement",
			"createArrayLiteral",
			"updateArrayLiteral",
			"createObjectLiteral",
			"updateObjectLiteral",
			"createPropertyAccess",
			"updatePropertyAccess",
			"createPropertyAccessChain",
			"updatePropertyAccessChain",
			"createElementAccess",
			"updateElementAccess",
			"createElementAccessChain",
			"updateElementAccessChain",
			"createCall",
			"updateCall",
			"createCallChain",
			"updateCallChain",
			"createNew",
			"updateNew",
			"createTypeAssertion",
			"updateTypeAssertion",
			"createParen",
			"updateParen",
			"createFunctionExpression",
			"updateFunctionExpression",
			"createDelete",
			"updateDelete",
			"createTypeOf",
			"updateTypeOf",
			"createVoid",
			"updateVoid",
			"createAwait",
			"updateAwait",
			"createPrefix",
			"updatePrefix",
			"createPostfix",
			"updatePostfix",
			"createBinary",
			"updateConditional",
			"createTemplateExpression",
			"updateTemplateExpression",
			"createTemplateHead",
			"createTemplateMiddle",
			"createTemplateTail",
			"createNoSubstitutionTemplateLiteral",
			"updateYield",
			"createSpread",
			"updateSpread",
			"createOmittedExpression",
			"createAsExpression",
			"updateAsExpression",
			"createNonNullExpression",
			"updateNonNullExpression",
			"createNonNullChain",
			"updateNonNullChain",
			"createMetaProperty",
			"updateMetaProperty",
			"createTemplateSpan",
			"updateTemplateSpan",
			"createSemicolonClassElement",
			"createBlock",
			"updateBlock",
			"createVariableStatement",
			"updateVariableStatement",
			"createEmptyStatement",
			"createExpressionStatement",
			"updateExpressionStatement",
			"createStatement",
			"updateStatement",
			"createIf",
			"updateIf",
			"createDo",
			"updateDo",
			"createWhile",
			"updateWhile",
			"createFor",
			"updateFor",
			"createForIn",
			"updateForIn",
			"createForOf",
			"updateForOf",
			"createContinue",
			"updateContinue",
			"createBreak",
			"updateBreak",
			"createReturn",
			"updateReturn",
			"createWith",
			"updateWith",
			"createSwitch",
			"updateSwitch",
			"createLabel",
			"updateLabel",
			"createThrow",
			"updateThrow",
			"createTry",
			"updateTry",
			"createDebuggerStatement",
			"createVariableDeclarationList",
			"updateVariableDeclarationList",
			"createFunctionDeclaration",
			"updateFunctionDeclaration",
			"createClassDeclaration",
			"updateClassDeclaration",
			"createInterfaceDeclaration",
			"updateInterfaceDeclaration",
			"createTypeAliasDeclaration",
			"updateTypeAliasDeclaration",
			"createEnumDeclaration",
			"updateEnumDeclaration",
			"createModuleDeclaration",
			"updateModuleDeclaration",
			"createModuleBlock",
			"updateModuleBlock",
			"createCaseBlock",
			"updateCaseBlock",
			"createNamespaceExportDeclaration",
			"updateNamespaceExportDeclaration",
			"createImportEqualsDeclaration",
			"updateImportEqualsDeclaration",
			"createImportDeclaration",
			"updateImportDeclaration",
			"createNamespaceImport",
			"updateNamespaceImport",
			"createNamedImports",
			"updateNamedImports",
			"createImportSpecifier",
			"updateImportSpecifier",
			"createExportAssignment",
			"updateExportAssignment",
			"createNamedExports",
			"updateNamedExports",
			"createExportSpecifier",
			"updateExportSpecifier",
			"createExternalModuleReference",
			"updateExternalModuleReference",
			"createJSDocTypeExpression",
			"createJSDocTypeTag",
			"createJSDocReturnTag",
			"createJSDocThisTag",
			"createJSDocComment",
			"createJSDocParameterTag",
			"createJSDocClassTag",
			"createJSDocAugmentsTag",
			"createJSDocEnumTag",
			"createJSDocTemplateTag",
			"createJSDocTypedefTag",
			"createJSDocCallbackTag",
			"createJSDocSignature",
			"createJSDocPropertyTag",
			"createJSDocTypeLiteral",
			"createJSDocImplementsTag",
			"createJSDocAuthorTag",
			"createJSDocPublicTag",
			"createJSDocPrivateTag",
			"createJSDocProtectedTag",
			"createJSDocReadonlyTag",
			"createJSDocTag",
			"createJsxElement",
			"updateJsxElement",
			"createJsxSelfClosingElement",
			"updateJsxSelfClosingElement",
			"createJsxOpeningElement",
			"updateJsxOpeningElement",
			"createJsxClosingElement",
			"updateJsxClosingElement",
			"createJsxFragment",
			"createJsxText",
			"updateJsxText",
			"createJsxOpeningFragment",
			"createJsxJsxClosingFragment",
			"updateJsxFragment",
			"createJsxAttribute",
			"updateJsxAttribute",
			"createJsxAttributes",
			"updateJsxAttributes",
			"createJsxSpreadAttribute",
			"updateJsxSpreadAttribute",
			"createJsxExpression",
			"updateJsxExpression",
			"createCaseClause",
			"updateCaseClause",
			"createDefaultClause",
			"updateDefaultClause",
			"createHeritageClause",
			"updateHeritageClause",
			"createCatchClause",
			"updateCatchClause",
			"createPropertyAssignment",
			"updatePropertyAssignment",
			"createShorthandPropertyAssignment",
			"updateShorthandPropertyAssignment",
			"createSpreadAssignment",
			"updateSpreadAssignment",
			"createEnumMember",
			"updateEnumMember",
			"updateSourceFileNode",
			"createNotEmittedStatement",
			"createPartiallyEmittedExpression",
			"updatePartiallyEmittedExpression",
			"createCommaList",
			"updateCommaList",
			"createBundle",
			"updateBundle",
			"createImmediatelyInvokedFunctionExpression",
			"createImmediatelyInvokedArrowFunction",
			"createVoidZero",
			"createExportDefault",
			"createExternalModuleExport",
			"createNamespaceExport",
			"updateNamespaceExport",
			"createToken",
			"createIdentifier",
			"createTempVariable",
			"getGeneratedNameForNode",
			"createOptimisticUniqueName",
			"createFileLevelUniqueName",
			"createIndexSignature",
			"createTypePredicateNode",
			"updateTypePredicateNode",
			"createLiteral",
			"createMethodSignature",
			"updateMethodSignature",
			"createTypeOperatorNode",
			"createTaggedTemplate",
			"updateTaggedTemplate",
			"updateBinary",
			"createConditional",
			"createYield",
			"createClassExpression",
			"updateClassExpression",
			"createPropertySignature",
			"updatePropertySignature",
			"createExpressionWithTypeArguments",
			"updateExpressionWithTypeArguments",
			"createArrowFunction",
			"updateArrowFunction",
			"createVariableDeclaration",
			"updateVariableDeclaration",
			"createImportClause",
			"updateImportClause",
			"createExportDeclaration",
			"updateExportDeclaration",
			"createJSDocParamTag",
			"createComma",
			"createLessThan",
			"createAssignment",
			"createStrictEquality",
			"createStrictInequality",
			"createAdd",
			"createSubtract",
			"createLogicalAnd",
			"createLogicalOr",
			"createPostfixIncrement",
			"createLogicalNot",
			"createNode",
			"getMutableClone",
			"isTypeAssertion"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@angular/core",
		"transpiled": true,
		"expectedNames": [
			"InjectFlags",
			"ChangeDetectionStrategy",
			"ɵChangeDetectorStatus",
			"ViewEncapsulation",
			"SecurityContext",
			"RendererStyleFlags2",
			"ɵLocaleDataIndex",
			"MissingTranslationStrategy",
			"ANALYZE_FOR_ENTRY_COMPONENTS",
			"APP_BOOTSTRAP_LISTENER",
			"APP_ID",
			"APP_INITIALIZER",
			"ApplicationInitStatus",
			"ApplicationModule",
			"ApplicationRef",
			"Attribute",
			"COMPILER_OPTIONS",
			"CUSTOM_ELEMENTS_SCHEMA",
			"ChangeDetectorRef",
			"Compiler",
			"CompilerFactory",
			"Component",
			"ComponentFactory",
			"ComponentFactoryResolver",
			"ComponentRef",
			"ContentChild",
			"ContentChildren",
			"DEFAULT_CURRENCY_CODE",
			"DebugElement",
			"DebugEventListener",
			"DebugNode",
			"DefaultIterableDiffer",
			"Directive",
			"ElementRef",
			"EmbeddedViewRef",
			"ErrorHandler",
			"EventEmitter",
			"Host",
			"HostBinding",
			"HostListener",
			"INJECTOR",
			"Inject",
			"Injectable",
			"InjectionToken",
			"Injector",
			"Input",
			"IterableDiffers",
			"KeyValueDiffers",
			"LOCALE_ID",
			"ModuleWithComponentFactories",
			"NO_ERRORS_SCHEMA",
			"NgModule",
			"NgModuleFactory",
			"NgModuleFactoryLoader",
			"NgModuleRef",
			"NgProbeToken",
			"NgZone",
			"Optional",
			"Output",
			"PACKAGE_ROOT_URL",
			"PLATFORM_ID",
			"PLATFORM_INITIALIZER",
			"Pipe",
			"PlatformRef",
			"Query",
			"QueryList",
			"ReflectiveInjector",
			"ReflectiveKey",
			"Renderer2",
			"RendererFactory2",
			"ResolvedReflectiveFactory",
			"Sanitizer",
			"Self",
			"SimpleChange",
			"SkipSelf",
			"SystemJsNgModuleLoader",
			"SystemJsNgModuleLoaderConfig",
			"TRANSLATIONS",
			"TRANSLATIONS_FORMAT",
			"TemplateRef",
			"Testability",
			"TestabilityRegistry",
			"Type",
			"VERSION",
			"Version",
			"ViewChild",
			"ViewChildren",
			"ViewContainerRef",
			"ViewRef",
			"WrappedValue",
			"asNativeElements",
			"assertPlatform",
			"createPlatform",
			"createPlatformFactory",
			"defineInjectable",
			"destroyPlatform",
			"enableProdMode",
			"forwardRef",
			"getDebugNode",
			"getModuleFactory",
			"getPlatform",
			"inject",
			"isDevMode",
			"platformCore",
			"resolveForwardRef",
			"setTestabilityGetter",
			"ɵ0",
			"ɵ1",
			"ɵALLOW_MULTIPLE_PLATFORMS",
			"ɵAPP_ID_RANDOM_PROVIDER",
			"ɵCodegenComponentFactoryResolver",
			"ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__",
			"ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__",
			"ɵCompiler_compileModuleAsync__POST_R3__",
			"ɵCompiler_compileModuleSync__POST_R3__",
			"ɵComponentFactory",
			"ɵConsole",
			"ɵDEFAULT_LOCALE_ID",
			"ɵEMPTY_ARRAY",
			"ɵEMPTY_MAP",
			"ɵINJECTOR_IMPL__POST_R3__",
			"ɵINJECTOR_SCOPE",
			"ɵLifecycleHooksFeature",
			"ɵNG_COMP_DEF",
			"ɵNG_DIR_DEF",
			"ɵNG_ELEMENT_ID",
			"ɵNG_INJ_DEF",
			"ɵNG_MOD_DEF",
			"ɵNG_PIPE_DEF",
			"ɵNG_PROV_DEF",
			"ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR",
			"ɵNO_CHANGE",
			"ɵNgModuleFactory",
			"ɵNoopNgZone",
			"ɵReflectionCapabilities",
			"ɵRender3ComponentFactory",
			"ɵRender3ComponentRef",
			"ɵRender3NgModuleRef",
			"ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__",
			"ɵSWITCH_COMPILE_COMPONENT__POST_R3__",
			"ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__",
			"ɵSWITCH_COMPILE_INJECTABLE__POST_R3__",
			"ɵSWITCH_COMPILE_NGMODULE__POST_R3__",
			"ɵSWITCH_COMPILE_PIPE__POST_R3__",
			"ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__",
			"ɵSWITCH_IVY_ENABLED__POST_R3__",
			"ɵSWITCH_RENDERER2_FACTORY__POST_R3__",
			"ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__",
			"ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__",
			"ɵ_sanitizeHtml",
			"ɵ_sanitizeUrl",
			"ɵallowSanitizationBypassAndThrow",
			"ɵand",
			"ɵangular_packages_core_core_a",
			"ɵangular_packages_core_core_b",
			"ɵangular_packages_core_core_ba",
			"ɵangular_packages_core_core_bb",
			"ɵangular_packages_core_core_bc",
			"ɵangular_packages_core_core_bd",
			"ɵangular_packages_core_core_be",
			"ɵangular_packages_core_core_bg",
			"ɵangular_packages_core_core_bh",
			"ɵangular_packages_core_core_bi",
			"ɵangular_packages_core_core_bj",
			"ɵangular_packages_core_core_bk",
			"ɵangular_packages_core_core_bl",
			"ɵangular_packages_core_core_bm",
			"ɵangular_packages_core_core_bn",
			"ɵangular_packages_core_core_bo",
			"ɵangular_packages_core_core_bq",
			"ɵangular_packages_core_core_br",
			"ɵangular_packages_core_core_c",
			"ɵangular_packages_core_core_d",
			"ɵangular_packages_core_core_e",
			"ɵangular_packages_core_core_f",
			"ɵangular_packages_core_core_g",
			"ɵangular_packages_core_core_h",
			"ɵangular_packages_core_core_i",
			"ɵangular_packages_core_core_j",
			"ɵangular_packages_core_core_k",
			"ɵangular_packages_core_core_l",
			"ɵangular_packages_core_core_m",
			"ɵangular_packages_core_core_n",
			"ɵangular_packages_core_core_o",
			"ɵangular_packages_core_core_p",
			"ɵangular_packages_core_core_q",
			"ɵangular_packages_core_core_r",
			"ɵangular_packages_core_core_s",
			"ɵangular_packages_core_core_t",
			"ɵangular_packages_core_core_u",
			"ɵangular_packages_core_core_v",
			"ɵangular_packages_core_core_w",
			"ɵangular_packages_core_core_x",
			"ɵangular_packages_core_core_y",
			"ɵangular_packages_core_core_z",
			"ɵbypassSanitizationTrustHtml",
			"ɵbypassSanitizationTrustResourceUrl",
			"ɵbypassSanitizationTrustScript",
			"ɵbypassSanitizationTrustStyle",
			"ɵbypassSanitizationTrustUrl",
			"ɵccf",
			"ɵclearOverrides",
			"ɵclearResolutionOfComponentResourcesQueue",
			"ɵcmf",
			"ɵcompileComponent",
			"ɵcompileDirective",
			"ɵcompileNgModule",
			"ɵcompileNgModuleDefs",
			"ɵcompileNgModuleFactory__POST_R3__",
			"ɵcompilePipe",
			"ɵcreateInjector",
			"ɵcrt",
			"ɵdefaultIterableDiffers",
			"ɵdefaultKeyValueDiffers",
			"ɵdetectChanges",
			"ɵdevModeEqual",
			"ɵdid",
			"ɵeld",
			"ɵfindLocaleData",
			"ɵflushModuleScopingQueueAsMuchAsPossible",
			"ɵgetComponentViewDefinitionFactory",
			"ɵgetDebugNodeR2",
			"ɵgetDebugNode__POST_R3__",
			"ɵgetDirectives",
			"ɵgetHostElement",
			"ɵgetInjectableDef",
			"ɵgetLContext",
			"ɵgetLocaleCurrencyCode",
			"ɵgetLocalePluralCase",
			"ɵgetModuleFactory__POST_R3__",
			"ɵgetSanitizationBypassType",
			"ɵglobal",
			"ɵinitServicesIfNeeded",
			"ɵinlineInterpolate",
			"ɵinterpolate",
			"ɵisBoundToModule__POST_R3__",
			"ɵisDefaultChangeDetectionStrategy",
			"ɵisListLikeIterable",
			"ɵisObservable",
			"ɵisPromise",
			"ɵivyEnabled",
			"ɵmakeDecorator",
			"ɵmarkDirty",
			"ɵmod",
			"ɵmpd",
			"ɵncd",
			"ɵnoSideEffects",
			"ɵnov",
			"ɵoverrideComponentView",
			"ɵoverrideProvider",
			"ɵpad",
			"ɵpatchComponentDefWithScope",
			"ɵpid",
			"ɵpod",
			"ɵppd",
			"ɵprd",
			"ɵpublishDefaultGlobalUtils",
			"ɵpublishGlobalUtil",
			"ɵqud",
			"ɵregisterLocaleData",
			"ɵregisterModuleFactory",
			"ɵregisterNgModuleType",
			"ɵrenderComponent",
			"ɵresetCompiledComponents",
			"ɵresetJitOptions",
			"ɵresolveComponentResources",
			"ɵsetClassMetadata",
			"ɵsetCurrentInjector",
			"ɵsetDocument",
			"ɵsetLocaleId",
			"ɵstore",
			"ɵstringify",
			"ɵted",
			"ɵtransitiveScopesFor",
			"ɵunregisterLocaleData",
			"ɵunv",
			"ɵunwrapSafeValue",
			"ɵvid",
			"ɵwhenRendered",
			"ɵɵCopyDefinitionFeature",
			"ɵɵInheritDefinitionFeature",
			"ɵɵNgOnChangesFeature",
			"ɵɵProvidersFeature",
			"ɵɵadvance",
			"ɵɵattribute",
			"ɵɵattributeInterpolate1",
			"ɵɵattributeInterpolate2",
			"ɵɵattributeInterpolate3",
			"ɵɵattributeInterpolate4",
			"ɵɵattributeInterpolate5",
			"ɵɵattributeInterpolate6",
			"ɵɵattributeInterpolate7",
			"ɵɵattributeInterpolate8",
			"ɵɵattributeInterpolateV",
			"ɵɵclassMap",
			"ɵɵclassMapInterpolate1",
			"ɵɵclassMapInterpolate2",
			"ɵɵclassMapInterpolate3",
			"ɵɵclassMapInterpolate4",
			"ɵɵclassMapInterpolate5",
			"ɵɵclassMapInterpolate6",
			"ɵɵclassMapInterpolate7",
			"ɵɵclassMapInterpolate8",
			"ɵɵclassMapInterpolateV",
			"ɵɵclassProp",
			"ɵɵcontentQuery",
			"ɵɵdefineComponent",
			"ɵɵdefineDirective",
			"ɵɵdefineInjectable",
			"ɵɵdefineInjector",
			"ɵɵdefineNgModule",
			"ɵɵdefinePipe",
			"ɵɵdirectiveInject",
			"ɵɵdisableBindings",
			"ɵɵelement",
			"ɵɵelementContainer",
			"ɵɵelementContainerEnd",
			"ɵɵelementContainerStart",
			"ɵɵelementEnd",
			"ɵɵelementStart",
			"ɵɵenableBindings",
			"ɵɵgetCurrentView",
			"ɵɵgetFactoryOf",
			"ɵɵgetInheritedFactory",
			"ɵɵhostProperty",
			"ɵɵi18n",
			"ɵɵi18nApply",
			"ɵɵi18nAttributes",
			"ɵɵi18nEnd",
			"ɵɵi18nExp",
			"ɵɵi18nPostprocess",
			"ɵɵi18nStart",
			"ɵɵinject",
			"ɵɵinjectAttribute",
			"ɵɵinjectPipeChangeDetectorRef",
			"ɵɵinvalidFactory",
			"ɵɵinvalidFactoryDep",
			"ɵɵlistener",
			"ɵɵloadQuery",
			"ɵɵnamespaceHTML",
			"ɵɵnamespaceMathML",
			"ɵɵnamespaceSVG",
			"ɵɵnextContext",
			"ɵɵpipe",
			"ɵɵpipeBind1",
			"ɵɵpipeBind2",
			"ɵɵpipeBind3",
			"ɵɵpipeBind4",
			"ɵɵpipeBindV",
			"ɵɵprojection",
			"ɵɵprojectionDef",
			"ɵɵproperty",
			"ɵɵpropertyInterpolate",
			"ɵɵpropertyInterpolate1",
			"ɵɵpropertyInterpolate2",
			"ɵɵpropertyInterpolate3",
			"ɵɵpropertyInterpolate4",
			"ɵɵpropertyInterpolate5",
			"ɵɵpropertyInterpolate6",
			"ɵɵpropertyInterpolate7",
			"ɵɵpropertyInterpolate8",
			"ɵɵpropertyInterpolateV",
			"ɵɵpureFunction0",
			"ɵɵpureFunction1",
			"ɵɵpureFunction2",
			"ɵɵpureFunction3",
			"ɵɵpureFunction4",
			"ɵɵpureFunction5",
			"ɵɵpureFunction6",
			"ɵɵpureFunction7",
			"ɵɵpureFunction8",
			"ɵɵpureFunctionV",
			"ɵɵqueryRefresh",
			"ɵɵreference",
			"ɵɵresolveBody",
			"ɵɵresolveDocument",
			"ɵɵresolveWindow",
			"ɵɵrestoreView",
			"ɵɵsanitizeHtml",
			"ɵɵsanitizeResourceUrl",
			"ɵɵsanitizeScript",
			"ɵɵsanitizeStyle",
			"ɵɵsanitizeUrl",
			"ɵɵsanitizeUrlOrResourceUrl",
			"ɵɵsetComponentScope",
			"ɵɵsetNgModuleScope",
			"ɵɵstaticContentQuery",
			"ɵɵstaticViewQuery",
			"ɵɵstyleMap",
			"ɵɵstyleMapInterpolate1",
			"ɵɵstyleMapInterpolate2",
			"ɵɵstyleMapInterpolate3",
			"ɵɵstyleMapInterpolate4",
			"ɵɵstyleMapInterpolate5",
			"ɵɵstyleMapInterpolate6",
			"ɵɵstyleMapInterpolate7",
			"ɵɵstyleMapInterpolate8",
			"ɵɵstyleMapInterpolateV",
			"ɵɵstyleProp",
			"ɵɵstylePropInterpolate1",
			"ɵɵstylePropInterpolate2",
			"ɵɵstylePropInterpolate3",
			"ɵɵstylePropInterpolate4",
			"ɵɵstylePropInterpolate5",
			"ɵɵstylePropInterpolate6",
			"ɵɵstylePropInterpolate7",
			"ɵɵstylePropInterpolate8",
			"ɵɵstylePropInterpolateV",
			"ɵɵsyntheticHostListener",
			"ɵɵsyntheticHostProperty",
			"ɵɵtemplate",
			"ɵɵtemplateRefExtractor",
			"ɵɵtext",
			"ɵɵtextInterpolate",
			"ɵɵtextInterpolate1",
			"ɵɵtextInterpolate2",
			"ɵɵtextInterpolate3",
			"ɵɵtextInterpolate4",
			"ɵɵtextInterpolate5",
			"ɵɵtextInterpolate6",
			"ɵɵtextInterpolate7",
			"ɵɵtextInterpolate8",
			"ɵɵtextInterpolateV",
			"ɵɵviewQuery"
		],
		"detectedNames": [
			"InjectFlags",
			"ChangeDetectionStrategy",
			"ɵChangeDetectorStatus",
			"ViewEncapsulation",
			"SecurityContext",
			"RendererStyleFlags2",
			"ɵLocaleDataIndex",
			"MissingTranslationStrategy",
			"ANALYZE_FOR_ENTRY_COMPONENTS",
			"APP_BOOTSTRAP_LISTENER",
			"APP_ID",
			"APP_INITIALIZER",
			"ApplicationInitStatus",
			"ApplicationModule",
			"ApplicationRef",
			"Attribute",
			"COMPILER_OPTIONS",
			"CUSTOM_ELEMENTS_SCHEMA",
			"ChangeDetectorRef",
			"Compiler",
			"CompilerFactory",
			"Component",
			"ComponentFactory",
			"ComponentFactoryResolver",
			"ComponentRef",
			"ContentChild",
			"ContentChildren",
			"DEFAULT_CURRENCY_CODE",
			"DebugElement",
			"DebugEventListener",
			"DebugNode",
			"DefaultIterableDiffer",
			"Directive",
			"ElementRef",
			"EmbeddedViewRef",
			"ErrorHandler",
			"EventEmitter",
			"Host",
			"HostBinding",
			"HostListener",
			"INJECTOR",
			"Inject",
			"Injectable",
			"InjectionToken",
			"Injector",
			"Input",
			"IterableDiffers",
			"KeyValueDiffers",
			"LOCALE_ID",
			"ModuleWithComponentFactories",
			"NO_ERRORS_SCHEMA",
			"NgModule",
			"NgModuleFactory",
			"NgModuleFactoryLoader",
			"NgModuleRef",
			"NgProbeToken",
			"NgZone",
			"Optional",
			"Output",
			"PACKAGE_ROOT_URL",
			"PLATFORM_ID",
			"PLATFORM_INITIALIZER",
			"Pipe",
			"PlatformRef",
			"Query",
			"QueryList",
			"ReflectiveInjector",
			"ReflectiveKey",
			"Renderer2",
			"RendererFactory2",
			"ResolvedReflectiveFactory",
			"Sanitizer",
			"Self",
			"SimpleChange",
			"SkipSelf",
			"SystemJsNgModuleLoader",
			"SystemJsNgModuleLoaderConfig",
			"TRANSLATIONS",
			"TRANSLATIONS_FORMAT",
			"TemplateRef",
			"Testability",
			"TestabilityRegistry",
			"Type",
			"VERSION",
			"Version",
			"ViewChild",
			"ViewChildren",
			"ViewContainerRef",
			"ViewRef",
			"WrappedValue",
			"asNativeElements",
			"assertPlatform",
			"createPlatform",
			"createPlatformFactory",
			"defineInjectable",
			"destroyPlatform",
			"enableProdMode",
			"forwardRef",
			"getDebugNode",
			"getModuleFactory",
			"getPlatform",
			"inject",
			"isDevMode",
			"platformCore",
			"resolveForwardRef",
			"setTestabilityGetter",
			"ɵ0",
			"ɵ1",
			"ɵALLOW_MULTIPLE_PLATFORMS",
			"ɵAPP_ID_RANDOM_PROVIDER",
			"ɵCodegenComponentFactoryResolver",
			"ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__",
			"ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__",
			"ɵCompiler_compileModuleAsync__POST_R3__",
			"ɵCompiler_compileModuleSync__POST_R3__",
			"ɵComponentFactory",
			"ɵConsole",
			"ɵDEFAULT_LOCALE_ID",
			"ɵEMPTY_ARRAY",
			"ɵEMPTY_MAP",
			"ɵINJECTOR_IMPL__POST_R3__",
			"ɵINJECTOR_SCOPE",
			"ɵLifecycleHooksFeature",
			"ɵNG_COMP_DEF",
			"ɵNG_DIR_DEF",
			"ɵNG_ELEMENT_ID",
			"ɵNG_INJ_DEF",
			"ɵNG_MOD_DEF",
			"ɵNG_PIPE_DEF",
			"ɵNG_PROV_DEF",
			"ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR",
			"ɵNO_CHANGE",
			"ɵNgModuleFactory",
			"ɵNoopNgZone",
			"ɵReflectionCapabilities",
			"ɵRender3ComponentFactory",
			"ɵRender3ComponentRef",
			"ɵRender3NgModuleRef",
			"ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__",
			"ɵSWITCH_COMPILE_COMPONENT__POST_R3__",
			"ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__",
			"ɵSWITCH_COMPILE_INJECTABLE__POST_R3__",
			"ɵSWITCH_COMPILE_NGMODULE__POST_R3__",
			"ɵSWITCH_COMPILE_PIPE__POST_R3__",
			"ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__",
			"ɵSWITCH_IVY_ENABLED__POST_R3__",
			"ɵSWITCH_RENDERER2_FACTORY__POST_R3__",
			"ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__",
			"ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__",
			"ɵ_sanitizeHtml",
			"ɵ_sanitizeUrl",
			"ɵallowSanitizationBypassAndThrow",
			"ɵand",
			"ɵangular_packages_core_core_a",
			"ɵangular_packages_core_core_b",
			"ɵangular_packages_core_core_ba",
			"ɵangular_packages_core_core_bb",
			"ɵangular_packages_core_core_bc",
			"ɵangular_packages_core_core_bd",
			"ɵangular_packages_core_core_be",
			"ɵangular_packages_core_core_bg",
			"ɵangular_packages_core_core_bh",
			"ɵangular_packages_core_core_bi",
			"ɵangular_packages_core_core_bj",
			"ɵangular_packages_core_core_bk",
			"ɵangular_packages_core_core_bl",
			"ɵangular_packages_core_core_bm",
			"ɵangular_packages_core_core_bn",
			"ɵangular_packages_core_core_bo",
			"ɵangular_packages_core_core_bq",
			"ɵangular_packages_core_core_br",
			"ɵangular_packages_core_core_c",
			"ɵangular_packages_core_core_d",
			"ɵangular_packages_core_core_e",
			"ɵangular_packages_core_core_f",
			"ɵangular_packages_core_core_g",
			"ɵangular_packages_core_core_h",
			"ɵangular_packages_core_core_i",
			"ɵangular_packages_core_core_j",
			"ɵangular_packages_core_core_k",
			"ɵangular_packages_core_core_l",
			"ɵangular_packages_core_core_m",
			"ɵangular_packages_core_core_n",
			"ɵangular_packages_core_core_o",
			"ɵangular_packages_core_core_p",
			"ɵangular_packages_core_core_q",
			"ɵangular_packages_core_core_r",
			"ɵangular_packages_core_core_s",
			"ɵangular_packages_core_core_t",
			"ɵangular_packages_core_core_u",
			"ɵangular_packages_core_core_v",
			"ɵangular_packages_core_core_w",
			"ɵangular_packages_core_core_x",
			"ɵangular_packages_core_core_y",
			"ɵangular_packages_core_core_z",
			"ɵbypassSanitizationTrustHtml",
			"ɵbypassSanitizationTrustResourceUrl",
			"ɵbypassSanitizationTrustScript",
			"ɵbypassSanitizationTrustStyle",
			"ɵbypassSanitizationTrustUrl",
			"ɵccf",
			"ɵclearOverrides",
			"ɵclearResolutionOfComponentResourcesQueue",
			"ɵcmf",
			"ɵcompileComponent",
			"ɵcompileDirective",
			"ɵcompileNgModule",
			"ɵcompileNgModuleDefs",
			"ɵcompileNgModuleFactory__POST_R3__",
			"ɵcompilePipe",
			"ɵcreateInjector",
			"ɵcrt",
			"ɵdefaultIterableDiffers",
			"ɵdefaultKeyValueDiffers",
			"ɵdetectChanges",
			"ɵdevModeEqual",
			"ɵdid",
			"ɵeld",
			"ɵfindLocaleData",
			"ɵflushModuleScopingQueueAsMuchAsPossible",
			"ɵgetComponentViewDefinitionFactory",
			"ɵgetDebugNodeR2",
			"ɵgetDebugNode__POST_R3__",
			"ɵgetDirectives",
			"ɵgetHostElement",
			"ɵgetInjectableDef",
			"ɵgetLContext",
			"ɵgetLocaleCurrencyCode",
			"ɵgetLocalePluralCase",
			"ɵgetModuleFactory__POST_R3__",
			"ɵgetSanitizationBypassType",
			"ɵglobal",
			"ɵinitServicesIfNeeded",
			"ɵinlineInterpolate",
			"ɵinterpolate",
			"ɵisBoundToModule__POST_R3__",
			"ɵisDefaultChangeDetectionStrategy",
			"ɵisListLikeIterable",
			"ɵisObservable",
			"ɵisPromise",
			"ɵivyEnabled",
			"ɵmakeDecorator",
			"ɵmarkDirty",
			"ɵmod",
			"ɵmpd",
			"ɵncd",
			"ɵnoSideEffects",
			"ɵnov",
			"ɵoverrideComponentView",
			"ɵoverrideProvider",
			"ɵpad",
			"ɵpatchComponentDefWithScope",
			"ɵpid",
			"ɵpod",
			"ɵppd",
			"ɵprd",
			"ɵpublishDefaultGlobalUtils",
			"ɵpublishGlobalUtil",
			"ɵqud",
			"ɵregisterLocaleData",
			"ɵregisterModuleFactory",
			"ɵregisterNgModuleType",
			"ɵrenderComponent",
			"ɵresetCompiledComponents",
			"ɵresetJitOptions",
			"ɵresolveComponentResources",
			"ɵsetClassMetadata",
			"ɵsetCurrentInjector",
			"ɵsetDocument",
			"ɵsetLocaleId",
			"ɵstore",
			"ɵstringify",
			"ɵted",
			"ɵtransitiveScopesFor",
			"ɵunregisterLocaleData",
			"ɵunv",
			"ɵunwrapSafeValue",
			"ɵvid",
			"ɵwhenRendered",
			"ɵɵCopyDefinitionFeature",
			"ɵɵInheritDefinitionFeature",
			"ɵɵNgOnChangesFeature",
			"ɵɵProvidersFeature",
			"ɵɵadvance",
			"ɵɵattribute",
			"ɵɵattributeInterpolate1",
			"ɵɵattributeInterpolate2",
			"ɵɵattributeInterpolate3",
			"ɵɵattributeInterpolate4",
			"ɵɵattributeInterpolate5",
			"ɵɵattributeInterpolate6",
			"ɵɵattributeInterpolate7",
			"ɵɵattributeInterpolate8",
			"ɵɵattributeInterpolateV",
			"ɵɵclassMap",
			"ɵɵclassMapInterpolate1",
			"ɵɵclassMapInterpolate2",
			"ɵɵclassMapInterpolate3",
			"ɵɵclassMapInterpolate4",
			"ɵɵclassMapInterpolate5",
			"ɵɵclassMapInterpolate6",
			"ɵɵclassMapInterpolate7",
			"ɵɵclassMapInterpolate8",
			"ɵɵclassMapInterpolateV",
			"ɵɵclassProp",
			"ɵɵcontentQuery",
			"ɵɵdefineComponent",
			"ɵɵdefineDirective",
			"ɵɵdefineInjectable",
			"ɵɵdefineInjector",
			"ɵɵdefineNgModule",
			"ɵɵdefinePipe",
			"ɵɵdirectiveInject",
			"ɵɵdisableBindings",
			"ɵɵelement",
			"ɵɵelementContainer",
			"ɵɵelementContainerEnd",
			"ɵɵelementContainerStart",
			"ɵɵelementEnd",
			"ɵɵelementStart",
			"ɵɵenableBindings",
			"ɵɵgetCurrentView",
			"ɵɵgetFactoryOf",
			"ɵɵgetInheritedFactory",
			"ɵɵhostProperty",
			"ɵɵi18n",
			"ɵɵi18nApply",
			"ɵɵi18nAttributes",
			"ɵɵi18nEnd",
			"ɵɵi18nExp",
			"ɵɵi18nPostprocess",
			"ɵɵi18nStart",
			"ɵɵinject",
			"ɵɵinjectAttribute",
			"ɵɵinjectPipeChangeDetectorRef",
			"ɵɵinvalidFactory",
			"ɵɵinvalidFactoryDep",
			"ɵɵlistener",
			"ɵɵloadQuery",
			"ɵɵnamespaceHTML",
			"ɵɵnamespaceMathML",
			"ɵɵnamespaceSVG",
			"ɵɵnextContext",
			"ɵɵpipe",
			"ɵɵpipeBind1",
			"ɵɵpipeBind2",
			"ɵɵpipeBind3",
			"ɵɵpipeBind4",
			"ɵɵpipeBindV",
			"ɵɵprojection",
			"ɵɵprojectionDef",
			"ɵɵproperty",
			"ɵɵpropertyInterpolate",
			"ɵɵpropertyInterpolate1",
			"ɵɵpropertyInterpolate2",
			"ɵɵpropertyInterpolate3",
			"ɵɵpropertyInterpolate4",
			"ɵɵpropertyInterpolate5",
			"ɵɵpropertyInterpolate6",
			"ɵɵpropertyInterpolate7",
			"ɵɵpropertyInterpolate8",
			"ɵɵpropertyInterpolateV",
			"ɵɵpureFunction0",
			"ɵɵpureFunction1",
			"ɵɵpureFunction2",
			"ɵɵpureFunction3",
			"ɵɵpureFunction4",
			"ɵɵpureFunction5",
			"ɵɵpureFunction6",
			"ɵɵpureFunction7",
			"ɵɵpureFunction8",
			"ɵɵpureFunctionV",
			"ɵɵqueryRefresh",
			"ɵɵreference",
			"ɵɵresolveBody",
			"ɵɵresolveDocument",
			"ɵɵresolveWindow",
			"ɵɵrestoreView",
			"ɵɵsanitizeHtml",
			"ɵɵsanitizeResourceUrl",
			"ɵɵsanitizeScript",
			"ɵɵsanitizeStyle",
			"ɵɵsanitizeUrl",
			"ɵɵsanitizeUrlOrResourceUrl",
			"ɵɵsetComponentScope",
			"ɵɵsetNgModuleScope",
			"ɵɵstaticContentQuery",
			"ɵɵstaticViewQuery",
			"ɵɵstyleMap",
			"ɵɵstyleMapInterpolate1",
			"ɵɵstyleMapInterpolate2",
			"ɵɵstyleMapInterpolate3",
			"ɵɵstyleMapInterpolate4",
			"ɵɵstyleMapInterpolate5",
			"ɵɵstyleMapInterpolate6",
			"ɵɵstyleMapInterpolate7",
			"ɵɵstyleMapInterpolate8",
			"ɵɵstyleMapInterpolateV",
			"ɵɵstyleProp",
			"ɵɵstylePropInterpolate1",
			"ɵɵstylePropInterpolate2",
			"ɵɵstylePropInterpolate3",
			"ɵɵstylePropInterpolate4",
			"ɵɵstylePropInterpolate5",
			"ɵɵstylePropInterpolate6",
			"ɵɵstylePropInterpolate7",
			"ɵɵstylePropInterpolate8",
			"ɵɵstylePropInterpolateV",
			"ɵɵsyntheticHostListener",
			"ɵɵsyntheticHostProperty",
			"ɵɵtemplate",
			"ɵɵtemplateRefExtractor",
			"ɵɵtext",
			"ɵɵtextInterpolate",
			"ɵɵtextInterpolate1",
			"ɵɵtextInterpolate2",
			"ɵɵtextInterpolate3",
			"ɵɵtextInterpolate4",
			"ɵɵtextInterpolate5",
			"ɵɵtextInterpolate6",
			"ɵɵtextInterpolate7",
			"ɵɵtextInterpolate8",
			"ɵɵtextInterpolateV",
			"ɵɵviewQuery"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "js-yaml",
		"expectedNames": [
			"Type",
			"Schema",
			"FAILSAFE_SCHEMA",
			"JSON_SCHEMA",
			"CORE_SCHEMA",
			"DEFAULT_SAFE_SCHEMA",
			"DEFAULT_FULL_SCHEMA",
			"load",
			"loadAll",
			"safeLoad",
			"safeLoadAll",
			"dump",
			"safeDump",
			"YAMLException",
			"MINIMAL_SCHEMA",
			"SAFE_SCHEMA",
			"DEFAULT_SCHEMA",
			"scan",
			"parse",
			"compose",
			"addConstructor"
		],
		"detectedNames": [],
		"missingNames": [
			"Type",
			"Schema",
			"FAILSAFE_SCHEMA",
			"JSON_SCHEMA",
			"CORE_SCHEMA",
			"DEFAULT_SAFE_SCHEMA",
			"DEFAULT_FULL_SCHEMA",
			"load",
			"loadAll",
			"safeLoad",
			"safeLoadAll",
			"dump",
			"safeDump",
			"YAMLException",
			"MINIMAL_SCHEMA",
			"SAFE_SCHEMA",
			"DEFAULT_SCHEMA",
			"scan",
			"parse",
			"compose",
			"addConstructor"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "style-loader",
		"expectedNames": [
			"pitch"
		],
		"detectedNames": [],
		"missingNames": [
			"pitch"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "winston",
		"expectedNames": [
			"version",
			"transports",
			"config",
			"addColors",
			"format",
			"createLogger",
			"ExceptionHandler",
			"RejectionHandler",
			"Container",
			"Transport",
			"loggers",
			"error",
			"warn",
			"info",
			"http",
			"verbose",
			"debug",
			"silly",
			"log",
			"query",
			"stream",
			"add",
			"remove",
			"clear",
			"profile",
			"startTimer",
			"handleExceptions",
			"unhandleExceptions",
			"handleRejections",
			"unhandleRejections",
			"configure",
			"child",
			"cli",
			"addRewriter",
			"addFilter",
			"clone",
			"extend"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"transports",
			"config",
			"addColors",
			"format",
			"createLogger",
			"ExceptionHandler",
			"RejectionHandler",
			"Container",
			"Transport",
			"loggers",
			"error",
			"warn",
			"info",
			"http",
			"verbose",
			"debug",
			"silly",
			"log",
			"query",
			"stream",
			"add",
			"remove",
			"clear",
			"profile",
			"startTimer",
			"handleExceptions",
			"unhandleExceptions",
			"handleRejections",
			"unhandleRejections",
			"configure",
			"child",
			"cli",
			"addRewriter",
			"addFilter",
			"clone",
			"extend"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "@angular/common",
		"transpiled": true,
		"expectedNames": [
			"NumberFormatStyle",
			"Plural",
			"FormStyle",
			"TranslationWidth",
			"FormatWidth",
			"NumberSymbol",
			"WeekDay",
			"APP_BASE_HREF",
			"AsyncPipe",
			"CommonModule",
			"CurrencyPipe",
			"DOCUMENT",
			"DatePipe",
			"DecimalPipe",
			"HashLocationStrategy",
			"I18nPluralPipe",
			"I18nSelectPipe",
			"JsonPipe",
			"KeyValuePipe",
			"LOCATION_INITIALIZED",
			"Location",
			"LocationStrategy",
			"LowerCasePipe",
			"NgClass",
			"NgComponentOutlet",
			"NgForOf",
			"NgForOfContext",
			"NgIf",
			"NgIfContext",
			"NgLocaleLocalization",
			"NgLocalization",
			"NgPlural",
			"NgPluralCase",
			"NgStyle",
			"NgSwitch",
			"NgSwitchCase",
			"NgSwitchDefault",
			"NgTemplateOutlet",
			"PathLocationStrategy",
			"PercentPipe",
			"PlatformLocation",
			"SlicePipe",
			"TitleCasePipe",
			"UpperCasePipe",
			"VERSION",
			"ViewportScroller",
			"formatCurrency",
			"formatDate",
			"formatNumber",
			"formatPercent",
			"getCurrencySymbol",
			"getLocaleCurrencyCode",
			"getLocaleCurrencyName",
			"getLocaleCurrencySymbol",
			"getLocaleDateFormat",
			"getLocaleDateTimeFormat",
			"getLocaleDayNames",
			"getLocaleDayPeriods",
			"getLocaleDirection",
			"getLocaleEraNames",
			"getLocaleExtraDayPeriodRules",
			"getLocaleExtraDayPeriods",
			"getLocaleFirstDayOfWeek",
			"getLocaleId",
			"getLocaleMonthNames",
			"getLocaleNumberFormat",
			"getLocaleNumberSymbol",
			"getLocalePluralCase",
			"getLocaleTimeFormat",
			"getLocaleWeekEndRange",
			"getNumberOfCurrencyDigits",
			"isPlatformBrowser",
			"isPlatformServer",
			"isPlatformWorkerApp",
			"isPlatformWorkerUi",
			"registerLocaleData",
			"ɵBrowserPlatformLocation",
			"ɵDomAdapter",
			"ɵNullViewportScroller",
			"ɵPLATFORM_BROWSER_ID",
			"ɵPLATFORM_SERVER_ID",
			"ɵPLATFORM_WORKER_APP_ID",
			"ɵPLATFORM_WORKER_UI_ID",
			"ɵangular_packages_common_common_a",
			"ɵangular_packages_common_common_b",
			"ɵangular_packages_common_common_c",
			"ɵangular_packages_common_common_d",
			"ɵangular_packages_common_common_e",
			"ɵangular_packages_common_common_f",
			"ɵgetDOM",
			"ɵparseCookieValue",
			"ɵsetRootDomAdapter"
		],
		"detectedNames": [
			"NumberFormatStyle",
			"Plural",
			"FormStyle",
			"TranslationWidth",
			"FormatWidth",
			"NumberSymbol",
			"WeekDay",
			"APP_BASE_HREF",
			"AsyncPipe",
			"CommonModule",
			"CurrencyPipe",
			"DOCUMENT",
			"DatePipe",
			"DecimalPipe",
			"HashLocationStrategy",
			"I18nPluralPipe",
			"I18nSelectPipe",
			"JsonPipe",
			"KeyValuePipe",
			"LOCATION_INITIALIZED",
			"Location",
			"LocationStrategy",
			"LowerCasePipe",
			"NgClass",
			"NgComponentOutlet",
			"NgForOf",
			"NgForOfContext",
			"NgIf",
			"NgIfContext",
			"NgLocaleLocalization",
			"NgLocalization",
			"NgPlural",
			"NgPluralCase",
			"NgStyle",
			"NgSwitch",
			"NgSwitchCase",
			"NgSwitchDefault",
			"NgTemplateOutlet",
			"PathLocationStrategy",
			"PercentPipe",
			"PlatformLocation",
			"SlicePipe",
			"TitleCasePipe",
			"UpperCasePipe",
			"VERSION",
			"ViewportScroller",
			"formatCurrency",
			"formatDate",
			"formatNumber",
			"formatPercent",
			"getCurrencySymbol",
			"getLocaleCurrencyCode",
			"getLocaleCurrencyName",
			"getLocaleCurrencySymbol",
			"getLocaleDateFormat",
			"getLocaleDateTimeFormat",
			"getLocaleDayNames",
			"getLocaleDayPeriods",
			"getLocaleDirection",
			"getLocaleEraNames",
			"getLocaleExtraDayPeriodRules",
			"getLocaleExtraDayPeriods",
			"getLocaleFirstDayOfWeek",
			"getLocaleId",
			"getLocaleMonthNames",
			"getLocaleNumberFormat",
			"getLocaleNumberSymbol",
			"getLocalePluralCase",
			"getLocaleTimeFormat",
			"getLocaleWeekEndRange",
			"getNumberOfCurrencyDigits",
			"isPlatformBrowser",
			"isPlatformServer",
			"isPlatformWorkerApp",
			"isPlatformWorkerUi",
			"registerLocaleData",
			"ɵBrowserPlatformLocation",
			"ɵDomAdapter",
			"ɵNullViewportScroller",
			"ɵPLATFORM_BROWSER_ID",
			"ɵPLATFORM_SERVER_ID",
			"ɵPLATFORM_WORKER_APP_ID",
			"ɵPLATFORM_WORKER_UI_ID",
			"ɵangular_packages_common_common_a",
			"ɵangular_packages_common_common_b",
			"ɵangular_packages_common_common_c",
			"ɵangular_packages_common_common_d",
			"ɵangular_packages_common_common_e",
			"ɵangular_packages_common_common_f",
			"ɵgetDOM",
			"ɵparseCookieValue",
			"ɵsetRootDomAdapter"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "redux",
		"transpiled": true,
		"expectedNames": [
			"__DO_NOT_USE__ActionTypes",
			"applyMiddleware",
			"bindActionCreators",
			"combineReducers",
			"compose",
			"createStore"
		],
		"detectedNames": [
			"__DO_NOT_USE__ActionTypes",
			"applyMiddleware",
			"bindActionCreators",
			"combineReducers",
			"compose",
			"createStore"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "object-assign",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "zone.js",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-eslint",
		"expectedNames": [
			"parse",
			"parseForESLint",
			"parseNoPatch"
		],
		"detectedNames": [
			"parse",
			"parseForESLint",
			"parseNoPatch"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp",
		"expectedNames": [
			"_events",
			"_eventsCount",
			"_maxListeners",
			"_registry",
			"_settle",
			"watch",
			"task",
			"series",
			"parallel",
			"registry",
			"tree",
			"lastRun",
			"src",
			"dest",
			"symlink",
			"Gulp",
			"_getTask",
			"_setTask",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"detectedNames": [],
		"missingNames": [
			"_events",
			"_eventsCount",
			"_maxListeners",
			"_registry",
			"_settle",
			"watch",
			"task",
			"series",
			"parallel",
			"registry",
			"tree",
			"lastRun",
			"src",
			"dest",
			"symlink",
			"Gulp",
			"_getTask",
			"_setTask",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-util",
		"expectedNames": [
			"File",
			"replaceExtension",
			"colors",
			"date",
			"log",
			"template",
			"env",
			"beep",
			"noop",
			"isStream",
			"isBuffer",
			"isNull",
			"linefeed",
			"combine",
			"buffer",
			"PluginError"
		],
		"detectedNames": [
			"File"
		],
		"missingNames": [
			"replaceExtension",
			"colors",
			"date",
			"log",
			"template",
			"env",
			"beep",
			"noop",
			"isStream",
			"isBuffer",
			"isNull",
			"linefeed",
			"combine",
			"buffer",
			"PluginError"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "file-loader",
		"expectedNames": [
			"raw"
		],
		"detectedNames": [
			"raw"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ora",
		"expectedNames": [
			"promise"
		],
		"detectedNames": [
			"promise"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-fetch",
		"transpiled": true,
		"expectedNames": [
			"isRedirect",
			"Promise",
			"Headers",
			"Request",
			"Response",
			"FetchError"
		],
		"detectedNames": [
			"Headers",
			"Request",
			"Response",
			"FetchError"
		],
		"missingNames": [
			"isRedirect",
			"Promise"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@angular/platform-browser",
		"transpiled": true,
		"expectedNames": [
			"ɵgetDOM",
			"BrowserModule",
			"BrowserTransferStateModule",
			"By",
			"DomSanitizer",
			"EVENT_MANAGER_PLUGINS",
			"EventManager",
			"HAMMER_GESTURE_CONFIG",
			"HAMMER_LOADER",
			"HammerGestureConfig",
			"HammerModule",
			"Meta",
			"Title",
			"TransferState",
			"VERSION",
			"disableDebugTools",
			"enableDebugTools",
			"makeStateKey",
			"platformBrowser",
			"ɵBROWSER_SANITIZATION_PROVIDERS",
			"ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__",
			"ɵBrowserDomAdapter",
			"ɵBrowserGetTestability",
			"ɵDomEventsPlugin",
			"ɵDomRendererFactory2",
			"ɵDomSanitizerImpl",
			"ɵDomSharedStylesHost",
			"ɵELEMENT_PROBE_PROVIDERS",
			"ɵELEMENT_PROBE_PROVIDERS__POST_R3__",
			"ɵHAMMER_PROVIDERS__POST_R3__",
			"ɵHammerGesturesPlugin",
			"ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS",
			"ɵKeyEventsPlugin",
			"ɵNAMESPACE_URIS",
			"ɵSharedStylesHost",
			"ɵTRANSITION_ID",
			"ɵangular_packages_platform_browser_platform_browser_a",
			"ɵangular_packages_platform_browser_platform_browser_b",
			"ɵangular_packages_platform_browser_platform_browser_c",
			"ɵangular_packages_platform_browser_platform_browser_d",
			"ɵangular_packages_platform_browser_platform_browser_e",
			"ɵangular_packages_platform_browser_platform_browser_f",
			"ɵangular_packages_platform_browser_platform_browser_g",
			"ɵangular_packages_platform_browser_platform_browser_h",
			"ɵangular_packages_platform_browser_platform_browser_i",
			"ɵangular_packages_platform_browser_platform_browser_j",
			"ɵangular_packages_platform_browser_platform_browser_k",
			"ɵangular_packages_platform_browser_platform_browser_l",
			"ɵangular_packages_platform_browser_platform_browser_m",
			"ɵangular_packages_platform_browser_platform_browser_n",
			"ɵangular_packages_platform_browser_platform_browser_o",
			"ɵescapeHtml",
			"ɵflattenStyles",
			"ɵinitDomAdapter",
			"ɵshimContentAttribute",
			"ɵshimHostAttribute"
		],
		"detectedNames": [
			"ɵgetDOM",
			"BrowserModule",
			"BrowserTransferStateModule",
			"By",
			"DomSanitizer",
			"EVENT_MANAGER_PLUGINS",
			"EventManager",
			"HAMMER_GESTURE_CONFIG",
			"HAMMER_LOADER",
			"HammerGestureConfig",
			"HammerModule",
			"Meta",
			"Title",
			"TransferState",
			"VERSION",
			"disableDebugTools",
			"enableDebugTools",
			"makeStateKey",
			"platformBrowser",
			"ɵBROWSER_SANITIZATION_PROVIDERS",
			"ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__",
			"ɵBrowserDomAdapter",
			"ɵBrowserGetTestability",
			"ɵDomEventsPlugin",
			"ɵDomRendererFactory2",
			"ɵDomSanitizerImpl",
			"ɵDomSharedStylesHost",
			"ɵELEMENT_PROBE_PROVIDERS",
			"ɵELEMENT_PROBE_PROVIDERS__POST_R3__",
			"ɵHAMMER_PROVIDERS__POST_R3__",
			"ɵHammerGesturesPlugin",
			"ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS",
			"ɵKeyEventsPlugin",
			"ɵNAMESPACE_URIS",
			"ɵSharedStylesHost",
			"ɵTRANSITION_ID",
			"ɵangular_packages_platform_browser_platform_browser_a",
			"ɵangular_packages_platform_browser_platform_browser_b",
			"ɵangular_packages_platform_browser_platform_browser_c",
			"ɵangular_packages_platform_browser_platform_browser_d",
			"ɵangular_packages_platform_browser_platform_browser_e",
			"ɵangular_packages_platform_browser_platform_browser_f",
			"ɵangular_packages_platform_browser_platform_browser_g",
			"ɵangular_packages_platform_browser_platform_browser_h",
			"ɵangular_packages_platform_browser_platform_browser_i",
			"ɵangular_packages_platform_browser_platform_browser_j",
			"ɵangular_packages_platform_browser_platform_browser_k",
			"ɵangular_packages_platform_browser_platform_browser_l",
			"ɵangular_packages_platform_browser_platform_browser_m",
			"ɵangular_packages_platform_browser_platform_browser_n",
			"ɵangular_packages_platform_browser_platform_browser_o",
			"ɵescapeHtml",
			"ɵflattenStyles",
			"ɵinitDomAdapter",
			"ɵshimContentAttribute",
			"ɵshimHostAttribute"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "handlebars",
		"transpiled": true,
		"expectedNames": [
			"helpers",
			"partials",
			"decorators",
			"HandlebarsEnvironment",
			"VERSION",
			"COMPILER_REVISION",
			"LAST_COMPATIBLE_COMPILER_REVISION",
			"REVISION_CHANGES",
			"log",
			"createFrame",
			"logger",
			"SafeString",
			"Exception",
			"Utils",
			"escapeExpression",
			"VM",
			"template",
			"compile",
			"precompile",
			"AST",
			"Compiler",
			"JavaScriptCompiler",
			"Parser",
			"parse",
			"parseWithoutProcessing",
			"create",
			"noConflict",
			"Visitor",
			"PrintVisitor",
			"print",
			"constructor",
			"registerHelper",
			"unregisterHelper",
			"registerPartial",
			"unregisterPartial",
			"registerDecorator",
			"unregisterDecorator",
			"resetLoggedPropertyAccesses"
		],
		"detectedNames": [],
		"missingNames": [
			"helpers",
			"partials",
			"decorators",
			"HandlebarsEnvironment",
			"VERSION",
			"COMPILER_REVISION",
			"LAST_COMPATIBLE_COMPILER_REVISION",
			"REVISION_CHANGES",
			"log",
			"createFrame",
			"logger",
			"SafeString",
			"Exception",
			"Utils",
			"escapeExpression",
			"VM",
			"template",
			"compile",
			"precompile",
			"AST",
			"Compiler",
			"JavaScriptCompiler",
			"Parser",
			"parse",
			"parseWithoutProcessing",
			"create",
			"noConflict",
			"Visitor",
			"PrintVisitor",
			"print",
			"constructor",
			"registerHelper",
			"unregisterHelper",
			"registerPartial",
			"unregisterPartial",
			"registerDecorator",
			"unregisterDecorator",
			"resetLoggedPropertyAccesses"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-import",
		"transpiled": true,
		"expectedNames": [
			"rules",
			"configs"
		],
		"detectedNames": [
			"rules",
			"configs"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@angular/compiler",
		"transpiled": true,
		"expectedNames": [
			"TagContentType",
			"BuiltinTypeName",
			"BinaryOperator",
			"BuiltinVar",
			"BuiltinMethod",
			"StmtModifier",
			"CompileSummaryKind",
			"ParseErrorLevel",
			"R3FactoryTarget",
			"R3ResolvedDependencyType",
			"ParsedPropertyType",
			"ProviderAstType",
			"TokenType",
			"AST",
			"ASTWithName",
			"ASTWithSource",
			"AbsoluteSourceSpan",
			"AotCompiler",
			"AotSummaryResolver",
			"ArrayType",
			"AssertNotNull",
			"AstMemoryEfficientTransformer",
			"AstPath",
			"AstTransformer",
			"AttrAst",
			"Attribute",
			"Binary",
			"BinaryOperatorExpr",
			"BindingPipe",
			"BoundDirectivePropertyAst",
			"BoundElementProperty",
			"BoundElementPropertyAst",
			"BoundEventAst",
			"BoundTextAst",
			"BuiltinType",
			"CONTENT_ATTR",
			"CUSTOM_ELEMENTS_SCHEMA",
			"CastExpr",
			"Chain",
			"ClassField",
			"ClassMethod",
			"ClassStmt",
			"CommaExpr",
			"Comment",
			"CommentStmt",
			"CompileDirectiveMetadata",
			"CompileMetadataResolver",
			"CompileNgModuleMetadata",
			"CompilePipeMetadata",
			"CompileReflector",
			"CompileShallowModuleMetadata",
			"CompileStylesheetMetadata",
			"CompileTemplateMetadata",
			"CompiledStylesheet",
			"CompilerConfig",
			"Conditional",
			"ConditionalExpr",
			"ConstantPool",
			"CssSelector",
			"DEFAULT_INTERPOLATION_CONFIG",
			"DYNAMIC_TYPE",
			"DeclareFunctionStmt",
			"DeclareVarStmt",
			"DirectiveAst",
			"DirectiveNormalizer",
			"DirectiveResolver",
			"DomElementSchemaRegistry",
			"EOF",
			"ERROR_COMPONENT_TYPE",
			"Element",
			"ElementAst",
			"ElementSchemaRegistry",
			"EmbeddedTemplateAst",
			"EmitterVisitorContext",
			"EmptyExpr",
			"Expansion",
			"ExpansionCase",
			"Expression",
			"ExpressionBinding",
			"ExpressionStatement",
			"ExpressionType",
			"ExternalExpr",
			"ExternalReference",
			"Extractor",
			"FunctionCall",
			"FunctionExpr",
			"GeneratedFile",
			"HOST_ATTR",
			"HtmlParser",
			"HtmlTagDefinition",
			"I18NHtmlParser",
			"Identifiers",
			"IfStmt",
			"ImplicitReceiver",
			"InstantiateExpr",
			"Interpolation",
			"InterpolationConfig",
			"InvokeFunctionExpr",
			"InvokeMethodExpr",
			"IvyParser",
			"JSDocCommentStmt",
			"JitCompiler",
			"JitEvaluator",
			"JitSummaryResolver",
			"KeyedRead",
			"KeyedWrite",
			"Lexer",
			"LiteralArray",
			"LiteralArrayExpr",
			"LiteralExpr",
			"LiteralMap",
			"LiteralMapExpr",
			"LiteralPrimitive",
			"MapType",
			"MessageBundle",
			"MethodCall",
			"NAMED_ENTITIES",
			"NGSP_UNICODE",
			"NONE_TYPE",
			"NO_ERRORS_SCHEMA",
			"NgContentAst",
			"NgModuleCompiler",
			"NgModuleResolver",
			"NodeWithI18n",
			"NonNullAssert",
			"NotExpr",
			"NullTemplateVisitor",
			"ParseError",
			"ParseLocation",
			"ParseSourceFile",
			"ParseSourceSpan",
			"ParseSpan",
			"ParseTreeResult",
			"ParsedEvent",
			"ParsedProperty",
			"ParsedVariable",
			"Parser",
			"ParserError",
			"PipeResolver",
			"PrefixNot",
			"PropertyRead",
			"PropertyWrite",
			"ProviderAst",
			"ProviderMeta",
			"Quote",
			"R3BoundTarget",
			"R3Identifiers",
			"R3TargetBinder",
			"ReadKeyExpr",
			"ReadPropExpr",
			"ReadVarExpr",
			"RecursiveAstVisitor",
			"RecursiveTemplateAstVisitor",
			"RecursiveVisitor",
			"ReferenceAst",
			"ResolvedStaticSymbol",
			"ResourceLoader",
			"ReturnStatement",
			"STRING_TYPE",
			"SafeMethodCall",
			"SafePropertyRead",
			"SelectorContext",
			"SelectorListContext",
			"SelectorMatcher",
			"Serializer",
			"SplitInterpolation",
			"Statement",
			"StaticReflector",
			"StaticSymbol",
			"StaticSymbolCache",
			"StaticSymbolResolver",
			"StyleCompiler",
			"StylesCompileDependency",
			"SummaryResolver",
			"TemplateBindingParseResult",
			"TemplateParseError",
			"TemplateParseResult",
			"TemplateParser",
			"Text",
			"TextAst",
			"ThrowStmt",
			"TmplAstBoundAttribute",
			"TmplAstBoundEvent",
			"TmplAstBoundText",
			"TmplAstContent",
			"TmplAstElement",
			"TmplAstRecursiveVisitor",
			"TmplAstReference",
			"TmplAstTemplate",
			"TmplAstText",
			"TmplAstTextAttribute",
			"TmplAstVariable",
			"Token",
			"TransitiveCompileNgModuleMetadata",
			"TreeError",
			"TryCatchStmt",
			"Type",
			"TypeScriptEmitter",
			"TypeofExpr",
			"Unary",
			"UrlResolver",
			"VERSION",
			"VariableAst",
			"VariableBinding",
			"Version",
			"ViewCompiler",
			"WrappedNodeExpr",
			"WriteKeyExpr",
			"WritePropExpr",
			"WriteVarExpr",
			"Xliff",
			"Xliff2",
			"Xmb",
			"XmlParser",
			"Xtb",
			"_ParseAST",
			"analyzeAndValidateNgModules",
			"analyzeFile",
			"analyzeFileForInjectables",
			"analyzeNgModules",
			"collectExternalReferences",
			"compileComponentFromMetadata",
			"compileDirectiveFromMetadata",
			"compileFactoryFunction",
			"compileInjectable",
			"compileInjector",
			"compileNgModule",
			"compilePipeFromMetadata",
			"componentFactoryName",
			"computeMsgId",
			"core",
			"createAotCompiler",
			"createAotUrlResolver",
			"createElementCssSelector",
			"createLoweredSymbol",
			"createOfflineCompileUrlResolver",
			"createUrlResolverWithoutPackagePrefix",
			"debugOutputAstAsTypeScript",
			"findNode",
			"flatten",
			"formattedError",
			"getHtmlTagDefinition",
			"getNsPrefix",
			"getParseErrors",
			"getUrlScheme",
			"hostViewClassName",
			"identifierModuleUrl",
			"identifierName",
			"isEmptyExpression",
			"isFormattedError",
			"isIdentifier",
			"isLoweredSymbol",
			"isNgContainer",
			"isNgContent",
			"isNgTemplate",
			"isQuote",
			"isSyntaxError",
			"literalMap",
			"makeBindingParser",
			"mergeAnalyzedFiles",
			"mergeNsAndName",
			"ngModuleJitUrl",
			"parseHostBindings",
			"parseTemplate",
			"preserveWhitespacesDefault",
			"publishFacade",
			"r3JitTypeSourceSpan",
			"removeSummaryDuplicates",
			"rendererTypeName",
			"sanitizeIdentifier",
			"sharedStylesheetJitUrl",
			"splitClasses",
			"splitNsName",
			"syntaxError",
			"templateJitUrl",
			"templateSourceUrl",
			"templateVisitAll",
			"toTypeScript",
			"tokenName",
			"tokenReference",
			"typeSourceSpan",
			"unescapeIdentifier",
			"unwrapResolvedMetadata",
			"verifyHostBindings",
			"viewClassName",
			"visitAll"
		],
		"detectedNames": [
			"TagContentType",
			"BuiltinTypeName",
			"BinaryOperator",
			"BuiltinVar",
			"BuiltinMethod",
			"StmtModifier",
			"CompileSummaryKind",
			"ParseErrorLevel",
			"R3FactoryTarget",
			"R3ResolvedDependencyType",
			"ParsedPropertyType",
			"ProviderAstType",
			"TokenType",
			"AST",
			"ASTWithName",
			"ASTWithSource",
			"AbsoluteSourceSpan",
			"AotCompiler",
			"AotSummaryResolver",
			"ArrayType",
			"AssertNotNull",
			"AstMemoryEfficientTransformer",
			"AstPath",
			"AstTransformer",
			"AttrAst",
			"Attribute",
			"Binary",
			"BinaryOperatorExpr",
			"BindingPipe",
			"BoundDirectivePropertyAst",
			"BoundElementProperty",
			"BoundElementPropertyAst",
			"BoundEventAst",
			"BoundTextAst",
			"BuiltinType",
			"CONTENT_ATTR",
			"CUSTOM_ELEMENTS_SCHEMA",
			"CastExpr",
			"Chain",
			"ClassField",
			"ClassMethod",
			"ClassStmt",
			"CommaExpr",
			"Comment",
			"CommentStmt",
			"CompileDirectiveMetadata",
			"CompileMetadataResolver",
			"CompileNgModuleMetadata",
			"CompilePipeMetadata",
			"CompileReflector",
			"CompileShallowModuleMetadata",
			"CompileStylesheetMetadata",
			"CompileTemplateMetadata",
			"CompiledStylesheet",
			"CompilerConfig",
			"Conditional",
			"ConditionalExpr",
			"ConstantPool",
			"CssSelector",
			"DEFAULT_INTERPOLATION_CONFIG",
			"DYNAMIC_TYPE",
			"DeclareFunctionStmt",
			"DeclareVarStmt",
			"DirectiveAst",
			"DirectiveNormalizer",
			"DirectiveResolver",
			"DomElementSchemaRegistry",
			"EOF",
			"ERROR_COMPONENT_TYPE",
			"Element",
			"ElementAst",
			"ElementSchemaRegistry",
			"EmbeddedTemplateAst",
			"EmitterVisitorContext",
			"EmptyExpr",
			"Expansion",
			"ExpansionCase",
			"Expression",
			"ExpressionBinding",
			"ExpressionStatement",
			"ExpressionType",
			"ExternalExpr",
			"ExternalReference",
			"Extractor",
			"FunctionCall",
			"FunctionExpr",
			"GeneratedFile",
			"HOST_ATTR",
			"HtmlParser",
			"HtmlTagDefinition",
			"I18NHtmlParser",
			"Identifiers",
			"IfStmt",
			"ImplicitReceiver",
			"InstantiateExpr",
			"Interpolation",
			"InterpolationConfig",
			"InvokeFunctionExpr",
			"InvokeMethodExpr",
			"IvyParser",
			"JSDocCommentStmt",
			"JitCompiler",
			"JitEvaluator",
			"JitSummaryResolver",
			"KeyedRead",
			"KeyedWrite",
			"Lexer",
			"LiteralArray",
			"LiteralArrayExpr",
			"LiteralExpr",
			"LiteralMap",
			"LiteralMapExpr",
			"LiteralPrimitive",
			"MapType",
			"MessageBundle",
			"MethodCall",
			"NAMED_ENTITIES",
			"NGSP_UNICODE",
			"NONE_TYPE",
			"NO_ERRORS_SCHEMA",
			"NgContentAst",
			"NgModuleCompiler",
			"NgModuleResolver",
			"NodeWithI18n",
			"NonNullAssert",
			"NotExpr",
			"NullTemplateVisitor",
			"ParseError",
			"ParseLocation",
			"ParseSourceFile",
			"ParseSourceSpan",
			"ParseSpan",
			"ParseTreeResult",
			"ParsedEvent",
			"ParsedProperty",
			"ParsedVariable",
			"Parser",
			"ParserError",
			"PipeResolver",
			"PrefixNot",
			"PropertyRead",
			"PropertyWrite",
			"ProviderAst",
			"ProviderMeta",
			"Quote",
			"R3BoundTarget",
			"R3Identifiers",
			"R3TargetBinder",
			"ReadKeyExpr",
			"ReadPropExpr",
			"ReadVarExpr",
			"RecursiveAstVisitor",
			"RecursiveTemplateAstVisitor",
			"RecursiveVisitor",
			"ReferenceAst",
			"ResolvedStaticSymbol",
			"ResourceLoader",
			"ReturnStatement",
			"STRING_TYPE",
			"SafeMethodCall",
			"SafePropertyRead",
			"SelectorContext",
			"SelectorListContext",
			"SelectorMatcher",
			"Serializer",
			"SplitInterpolation",
			"Statement",
			"StaticReflector",
			"StaticSymbol",
			"StaticSymbolCache",
			"StaticSymbolResolver",
			"StyleCompiler",
			"StylesCompileDependency",
			"SummaryResolver",
			"TemplateBindingParseResult",
			"TemplateParseError",
			"TemplateParseResult",
			"TemplateParser",
			"Text",
			"TextAst",
			"ThrowStmt",
			"TmplAstBoundAttribute",
			"TmplAstBoundEvent",
			"TmplAstBoundText",
			"TmplAstContent",
			"TmplAstElement",
			"TmplAstRecursiveVisitor",
			"TmplAstReference",
			"TmplAstTemplate",
			"TmplAstText",
			"TmplAstTextAttribute",
			"TmplAstVariable",
			"Token",
			"TransitiveCompileNgModuleMetadata",
			"TreeError",
			"TryCatchStmt",
			"Type",
			"TypeScriptEmitter",
			"TypeofExpr",
			"Unary",
			"UrlResolver",
			"VERSION",
			"VariableAst",
			"VariableBinding",
			"Version",
			"ViewCompiler",
			"WrappedNodeExpr",
			"WriteKeyExpr",
			"WritePropExpr",
			"WriteVarExpr",
			"Xliff",
			"Xliff2",
			"Xmb",
			"XmlParser",
			"Xtb",
			"_ParseAST",
			"analyzeAndValidateNgModules",
			"analyzeFile",
			"analyzeFileForInjectables",
			"analyzeNgModules",
			"collectExternalReferences",
			"compileComponentFromMetadata",
			"compileDirectiveFromMetadata",
			"compileFactoryFunction",
			"compileInjectable",
			"compileInjector",
			"compileNgModule",
			"compilePipeFromMetadata",
			"componentFactoryName",
			"computeMsgId",
			"core",
			"createAotCompiler",
			"createAotUrlResolver",
			"createElementCssSelector",
			"createLoweredSymbol",
			"createOfflineCompileUrlResolver",
			"createUrlResolverWithoutPackagePrefix",
			"debugOutputAstAsTypeScript",
			"findNode",
			"flatten",
			"formattedError",
			"getHtmlTagDefinition",
			"getNsPrefix",
			"getParseErrors",
			"getUrlScheme",
			"hostViewClassName",
			"identifierModuleUrl",
			"identifierName",
			"isEmptyExpression",
			"isFormattedError",
			"isIdentifier",
			"isLoweredSymbol",
			"isNgContainer",
			"isNgContent",
			"isNgTemplate",
			"isQuote",
			"isSyntaxError",
			"literalMap",
			"makeBindingParser",
			"mergeAnalyzedFiles",
			"mergeNsAndName",
			"ngModuleJitUrl",
			"parseHostBindings",
			"parseTemplate",
			"preserveWhitespacesDefault",
			"publishFacade",
			"r3JitTypeSourceSpan",
			"removeSummaryDuplicates",
			"rendererTypeName",
			"sanitizeIdentifier",
			"sharedStylesheetJitUrl",
			"splitClasses",
			"splitNsName",
			"syntaxError",
			"templateJitUrl",
			"templateSourceUrl",
			"templateVisitAll",
			"toTypeScript",
			"tokenName",
			"tokenReference",
			"typeSourceSpan",
			"unescapeIdentifier",
			"unwrapResolvedMetadata",
			"verifyHostBindings",
			"viewClassName",
			"visitAll"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-react",
		"expectedNames": [
			"deprecatedRules",
			"rules",
			"configs"
		],
		"detectedNames": [
			"deprecatedRules",
			"rules"
		],
		"missingNames": [
			"configs"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "aws-sdk",
		"expectedNames": [
			"util",
			"VERSION",
			"Signers",
			"Protocol",
			"XML",
			"JSON",
			"Model",
			"apiLoader",
			"EndpointCache",
			"SequentialExecutor",
			"Service",
			"Credentials",
			"CredentialProviderChain",
			"Config",
			"config",
			"Endpoint",
			"HttpRequest",
			"HttpResponse",
			"HttpClient",
			"EventListeners",
			"Request",
			"Response",
			"ResourceWaiter",
			"ParamValidator",
			"events",
			"endpointCache",
			"IniLoader",
			"STS",
			"TemporaryCredentials",
			"ChainableTemporaryCredentials",
			"WebIdentityCredentials",
			"CognitoIdentity",
			"CognitoIdentityCredentials",
			"SAMLCredentials",
			"ProcessCredentials",
			"NodeHttpClient",
			"TokenFileWebIdentityCredentials",
			"MetadataService",
			"EC2MetadataCredentials",
			"RemoteCredentials",
			"ECSCredentials",
			"EnvironmentCredentials",
			"FileSystemCredentials",
			"SharedIniFileCredentials",
			"ACM",
			"APIGateway",
			"ApplicationAutoScaling",
			"AppStream",
			"AutoScaling",
			"Batch",
			"Budgets",
			"CloudDirectory",
			"CloudFormation",
			"CloudFront",
			"CloudHSM",
			"CloudSearch",
			"CloudSearchDomain",
			"CloudTrail",
			"CloudWatch",
			"CloudWatchEvents",
			"CloudWatchLogs",
			"CodeBuild",
			"CodeCommit",
			"CodeDeploy",
			"CodePipeline",
			"CognitoIdentityServiceProvider",
			"CognitoSync",
			"ConfigService",
			"CUR",
			"DataPipeline",
			"DeviceFarm",
			"DirectConnect",
			"DirectoryService",
			"Discovery",
			"DMS",
			"DynamoDB",
			"DynamoDBStreams",
			"EC2",
			"ECR",
			"ECS",
			"EFS",
			"ElastiCache",
			"ElasticBeanstalk",
			"ELB",
			"ELBv2",
			"EMR",
			"ES",
			"ElasticTranscoder",
			"Firehose",
			"GameLift",
			"Glacier",
			"Health",
			"IAM",
			"ImportExport",
			"Inspector",
			"Iot",
			"IotData",
			"Kinesis",
			"KinesisAnalytics",
			"KMS",
			"Lambda",
			"LexRuntime",
			"Lightsail",
			"MachineLearning",
			"MarketplaceCommerceAnalytics",
			"MarketplaceMetering",
			"MTurk",
			"MobileAnalytics",
			"OpsWorks",
			"OpsWorksCM",
			"Organizations",
			"Pinpoint",
			"Polly",
			"RDS",
			"Redshift",
			"Rekognition",
			"ResourceGroupsTaggingAPI",
			"Route53",
			"Route53Domains",
			"S3",
			"S3Control",
			"ServiceCatalog",
			"SES",
			"Shield",
			"SimpleDB",
			"SMS",
			"Snowball",
			"SNS",
			"SQS",
			"SSM",
			"StorageGateway",
			"StepFunctions",
			"Support",
			"SWF",
			"XRay",
			"WAF",
			"WAFRegional",
			"WorkDocs",
			"WorkSpaces",
			"CodeStar",
			"LexModelBuildingService",
			"MarketplaceEntitlementService",
			"Athena",
			"Greengrass",
			"DAX",
			"MigrationHub",
			"CloudHSMV2",
			"Glue",
			"Mobile",
			"Pricing",
			"CostExplorer",
			"MediaConvert",
			"MediaLive",
			"MediaPackage",
			"MediaStore",
			"MediaStoreData",
			"AppSync",
			"GuardDuty",
			"MQ",
			"Comprehend",
			"IoTJobsDataPlane",
			"KinesisVideoArchivedMedia",
			"KinesisVideoMedia",
			"KinesisVideo",
			"SageMakerRuntime",
			"SageMaker",
			"Translate",
			"ResourceGroups",
			"AlexaForBusiness",
			"Cloud9",
			"ServerlessApplicationRepository",
			"ServiceDiscovery",
			"WorkMail",
			"AutoScalingPlans",
			"TranscribeService",
			"Connect",
			"ACMPCA",
			"FMS",
			"SecretsManager",
			"IoTAnalytics",
			"IoT1ClickDevicesService",
			"IoT1ClickProjects",
			"PI",
			"Neptune",
			"MediaTailor",
			"EKS",
			"Macie",
			"DLM",
			"Signer",
			"Chime",
			"PinpointEmail",
			"RAM",
			"Route53Resolver",
			"PinpointSMSVoice",
			"QuickSight",
			"RDSDataService",
			"Amplify",
			"DataSync",
			"RoboMaker",
			"Transfer",
			"GlobalAccelerator",
			"ComprehendMedical",
			"KinesisAnalyticsV2",
			"MediaConnect",
			"FSx",
			"SecurityHub",
			"AppMesh",
			"LicenseManager",
			"Kafka",
			"ApiGatewayManagementApi",
			"ApiGatewayV2",
			"DocDB",
			"Backup",
			"WorkLink",
			"Textract",
			"ManagedBlockchain",
			"MediaPackageVod",
			"GroundStation",
			"IoTThingsGraph",
			"IoTEvents",
			"IoTEventsData",
			"Personalize",
			"PersonalizeEvents",
			"PersonalizeRuntime",
			"ApplicationInsights",
			"ServiceQuotas",
			"EC2InstanceConnect",
			"EventBridge",
			"LakeFormation",
			"ForecastService",
			"ForecastQueryService",
			"QLDB",
			"QLDBSession",
			"WorkMailMessageFlow",
			"CodeStarNotifications",
			"SavingsPlans",
			"SSO",
			"SSOOIDC",
			"MarketplaceCatalog",
			"DataExchange",
			"SESV2",
			"MigrationHubConfig",
			"ConnectParticipant",
			"AppConfig",
			"IoTSecureTunneling",
			"WAFV2",
			"ElasticInference",
			"Imagebuilder",
			"Schemas",
			"AccessAnalyzer",
			"CodeGuruReviewer",
			"CodeGuruProfiler",
			"ComputeOptimizer",
			"FraudDetector",
			"Kendra",
			"NetworkManager",
			"Outposts",
			"AugmentedAIRuntime",
			"EBS",
			"KinesisVideoSignalingChannels",
			"Detective",
			"CodeStarconnections",
			"Synthetics",
			"IoTSiteWise",
			"Macie2",
			"CodeArtifact",
			"Honeycode",
			"IVS",
			"Braket",
			"IdentityStore",
			"Appflow",
			"RedshiftData",
			"SSOAdmin"
		],
		"detectedNames": [],
		"missingNames": [
			"util",
			"VERSION",
			"Signers",
			"Protocol",
			"XML",
			"JSON",
			"Model",
			"apiLoader",
			"EndpointCache",
			"SequentialExecutor",
			"Service",
			"Credentials",
			"CredentialProviderChain",
			"Config",
			"config",
			"Endpoint",
			"HttpRequest",
			"HttpResponse",
			"HttpClient",
			"EventListeners",
			"Request",
			"Response",
			"ResourceWaiter",
			"ParamValidator",
			"events",
			"endpointCache",
			"IniLoader",
			"STS",
			"TemporaryCredentials",
			"ChainableTemporaryCredentials",
			"WebIdentityCredentials",
			"CognitoIdentity",
			"CognitoIdentityCredentials",
			"SAMLCredentials",
			"ProcessCredentials",
			"NodeHttpClient",
			"TokenFileWebIdentityCredentials",
			"MetadataService",
			"EC2MetadataCredentials",
			"RemoteCredentials",
			"ECSCredentials",
			"EnvironmentCredentials",
			"FileSystemCredentials",
			"SharedIniFileCredentials",
			"ACM",
			"APIGateway",
			"ApplicationAutoScaling",
			"AppStream",
			"AutoScaling",
			"Batch",
			"Budgets",
			"CloudDirectory",
			"CloudFormation",
			"CloudFront",
			"CloudHSM",
			"CloudSearch",
			"CloudSearchDomain",
			"CloudTrail",
			"CloudWatch",
			"CloudWatchEvents",
			"CloudWatchLogs",
			"CodeBuild",
			"CodeCommit",
			"CodeDeploy",
			"CodePipeline",
			"CognitoIdentityServiceProvider",
			"CognitoSync",
			"ConfigService",
			"CUR",
			"DataPipeline",
			"DeviceFarm",
			"DirectConnect",
			"DirectoryService",
			"Discovery",
			"DMS",
			"DynamoDB",
			"DynamoDBStreams",
			"EC2",
			"ECR",
			"ECS",
			"EFS",
			"ElastiCache",
			"ElasticBeanstalk",
			"ELB",
			"ELBv2",
			"EMR",
			"ES",
			"ElasticTranscoder",
			"Firehose",
			"GameLift",
			"Glacier",
			"Health",
			"IAM",
			"ImportExport",
			"Inspector",
			"Iot",
			"IotData",
			"Kinesis",
			"KinesisAnalytics",
			"KMS",
			"Lambda",
			"LexRuntime",
			"Lightsail",
			"MachineLearning",
			"MarketplaceCommerceAnalytics",
			"MarketplaceMetering",
			"MTurk",
			"MobileAnalytics",
			"OpsWorks",
			"OpsWorksCM",
			"Organizations",
			"Pinpoint",
			"Polly",
			"RDS",
			"Redshift",
			"Rekognition",
			"ResourceGroupsTaggingAPI",
			"Route53",
			"Route53Domains",
			"S3",
			"S3Control",
			"ServiceCatalog",
			"SES",
			"Shield",
			"SimpleDB",
			"SMS",
			"Snowball",
			"SNS",
			"SQS",
			"SSM",
			"StorageGateway",
			"StepFunctions",
			"Support",
			"SWF",
			"XRay",
			"WAF",
			"WAFRegional",
			"WorkDocs",
			"WorkSpaces",
			"CodeStar",
			"LexModelBuildingService",
			"MarketplaceEntitlementService",
			"Athena",
			"Greengrass",
			"DAX",
			"MigrationHub",
			"CloudHSMV2",
			"Glue",
			"Mobile",
			"Pricing",
			"CostExplorer",
			"MediaConvert",
			"MediaLive",
			"MediaPackage",
			"MediaStore",
			"MediaStoreData",
			"AppSync",
			"GuardDuty",
			"MQ",
			"Comprehend",
			"IoTJobsDataPlane",
			"KinesisVideoArchivedMedia",
			"KinesisVideoMedia",
			"KinesisVideo",
			"SageMakerRuntime",
			"SageMaker",
			"Translate",
			"ResourceGroups",
			"AlexaForBusiness",
			"Cloud9",
			"ServerlessApplicationRepository",
			"ServiceDiscovery",
			"WorkMail",
			"AutoScalingPlans",
			"TranscribeService",
			"Connect",
			"ACMPCA",
			"FMS",
			"SecretsManager",
			"IoTAnalytics",
			"IoT1ClickDevicesService",
			"IoT1ClickProjects",
			"PI",
			"Neptune",
			"MediaTailor",
			"EKS",
			"Macie",
			"DLM",
			"Signer",
			"Chime",
			"PinpointEmail",
			"RAM",
			"Route53Resolver",
			"PinpointSMSVoice",
			"QuickSight",
			"RDSDataService",
			"Amplify",
			"DataSync",
			"RoboMaker",
			"Transfer",
			"GlobalAccelerator",
			"ComprehendMedical",
			"KinesisAnalyticsV2",
			"MediaConnect",
			"FSx",
			"SecurityHub",
			"AppMesh",
			"LicenseManager",
			"Kafka",
			"ApiGatewayManagementApi",
			"ApiGatewayV2",
			"DocDB",
			"Backup",
			"WorkLink",
			"Textract",
			"ManagedBlockchain",
			"MediaPackageVod",
			"GroundStation",
			"IoTThingsGraph",
			"IoTEvents",
			"IoTEventsData",
			"Personalize",
			"PersonalizeEvents",
			"PersonalizeRuntime",
			"ApplicationInsights",
			"ServiceQuotas",
			"EC2InstanceConnect",
			"EventBridge",
			"LakeFormation",
			"ForecastService",
			"ForecastQueryService",
			"QLDB",
			"QLDBSession",
			"WorkMailMessageFlow",
			"CodeStarNotifications",
			"SavingsPlans",
			"SSO",
			"SSOOIDC",
			"MarketplaceCatalog",
			"DataExchange",
			"SESV2",
			"MigrationHubConfig",
			"ConnectParticipant",
			"AppConfig",
			"IoTSecureTunneling",
			"WAFV2",
			"ElasticInference",
			"Imagebuilder",
			"Schemas",
			"AccessAnalyzer",
			"CodeGuruReviewer",
			"CodeGuruProfiler",
			"ComputeOptimizer",
			"FraudDetector",
			"Kendra",
			"NetworkManager",
			"Outposts",
			"AugmentedAIRuntime",
			"EBS",
			"KinesisVideoSignalingChannels",
			"Detective",
			"CodeStarconnections",
			"Synthetics",
			"IoTSiteWise",
			"Macie2",
			"CodeArtifact",
			"Honeycode",
			"IVS",
			"Braket",
			"IdentityStore",
			"Appflow",
			"RedshiftData",
			"SSOAdmin"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "yosay",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "url-loader",
		"expectedNames": [
			"raw"
		],
		"detectedNames": [
			"raw"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@angular/forms",
		"transpiled": true,
		"expectedNames": [
			"AbstractControl",
			"AbstractControlDirective",
			"AbstractFormGroupDirective",
			"COMPOSITION_BUFFER_MODE",
			"CheckboxControlValueAccessor",
			"CheckboxRequiredValidator",
			"ControlContainer",
			"DefaultValueAccessor",
			"EmailValidator",
			"FormArray",
			"FormArrayName",
			"FormBuilder",
			"FormControl",
			"FormControlDirective",
			"FormControlName",
			"FormGroup",
			"FormGroupDirective",
			"FormGroupName",
			"FormsModule",
			"MaxLengthValidator",
			"MinLengthValidator",
			"NG_ASYNC_VALIDATORS",
			"NG_VALIDATORS",
			"NG_VALUE_ACCESSOR",
			"NgControl",
			"NgControlStatus",
			"NgControlStatusGroup",
			"NgForm",
			"NgModel",
			"NgModelGroup",
			"NgSelectOption",
			"NumberValueAccessor",
			"PatternValidator",
			"RadioControlValueAccessor",
			"RangeValueAccessor",
			"ReactiveFormsModule",
			"RequiredValidator",
			"SelectControlValueAccessor",
			"SelectMultipleControlValueAccessor",
			"VERSION",
			"Validators",
			"ɵInternalFormsSharedModule",
			"ɵNgNoValidate",
			"ɵNgSelectMultipleOption",
			"ɵangular_packages_forms_forms_a",
			"ɵangular_packages_forms_forms_b",
			"ɵangular_packages_forms_forms_ba",
			"ɵangular_packages_forms_forms_bb",
			"ɵangular_packages_forms_forms_bc",
			"ɵangular_packages_forms_forms_bd",
			"ɵangular_packages_forms_forms_be",
			"ɵangular_packages_forms_forms_c",
			"ɵangular_packages_forms_forms_d",
			"ɵangular_packages_forms_forms_e",
			"ɵangular_packages_forms_forms_f",
			"ɵangular_packages_forms_forms_g",
			"ɵangular_packages_forms_forms_h",
			"ɵangular_packages_forms_forms_i",
			"ɵangular_packages_forms_forms_j",
			"ɵangular_packages_forms_forms_k",
			"ɵangular_packages_forms_forms_l",
			"ɵangular_packages_forms_forms_m",
			"ɵangular_packages_forms_forms_n",
			"ɵangular_packages_forms_forms_o",
			"ɵangular_packages_forms_forms_p",
			"ɵangular_packages_forms_forms_q",
			"ɵangular_packages_forms_forms_r",
			"ɵangular_packages_forms_forms_s",
			"ɵangular_packages_forms_forms_t",
			"ɵangular_packages_forms_forms_u",
			"ɵangular_packages_forms_forms_v",
			"ɵangular_packages_forms_forms_w",
			"ɵangular_packages_forms_forms_x",
			"ɵangular_packages_forms_forms_y",
			"ɵangular_packages_forms_forms_z"
		],
		"detectedNames": [
			"AbstractControl",
			"AbstractControlDirective",
			"AbstractFormGroupDirective",
			"COMPOSITION_BUFFER_MODE",
			"CheckboxControlValueAccessor",
			"CheckboxRequiredValidator",
			"ControlContainer",
			"DefaultValueAccessor",
			"EmailValidator",
			"FormArray",
			"FormArrayName",
			"FormBuilder",
			"FormControl",
			"FormControlDirective",
			"FormControlName",
			"FormGroup",
			"FormGroupDirective",
			"FormGroupName",
			"FormsModule",
			"MaxLengthValidator",
			"MinLengthValidator",
			"NG_ASYNC_VALIDATORS",
			"NG_VALIDATORS",
			"NG_VALUE_ACCESSOR",
			"NgControl",
			"NgControlStatus",
			"NgControlStatusGroup",
			"NgForm",
			"NgModel",
			"NgModelGroup",
			"NgSelectOption",
			"NumberValueAccessor",
			"PatternValidator",
			"RadioControlValueAccessor",
			"RangeValueAccessor",
			"ReactiveFormsModule",
			"RequiredValidator",
			"SelectControlValueAccessor",
			"SelectMultipleControlValueAccessor",
			"VERSION",
			"Validators",
			"ɵInternalFormsSharedModule",
			"ɵNgNoValidate",
			"ɵNgSelectMultipleOption",
			"ɵangular_packages_forms_forms_a",
			"ɵangular_packages_forms_forms_b",
			"ɵangular_packages_forms_forms_ba",
			"ɵangular_packages_forms_forms_bb",
			"ɵangular_packages_forms_forms_bc",
			"ɵangular_packages_forms_forms_bd",
			"ɵangular_packages_forms_forms_be",
			"ɵangular_packages_forms_forms_c",
			"ɵangular_packages_forms_forms_d",
			"ɵangular_packages_forms_forms_e",
			"ɵangular_packages_forms_forms_f",
			"ɵangular_packages_forms_forms_g",
			"ɵangular_packages_forms_forms_h",
			"ɵangular_packages_forms_forms_i",
			"ɵangular_packages_forms_forms_j",
			"ɵangular_packages_forms_forms_k",
			"ɵangular_packages_forms_forms_l",
			"ɵangular_packages_forms_forms_m",
			"ɵangular_packages_forms_forms_n",
			"ɵangular_packages_forms_forms_o",
			"ɵangular_packages_forms_forms_p",
			"ɵangular_packages_forms_forms_q",
			"ɵangular_packages_forms_forms_r",
			"ɵangular_packages_forms_forms_s",
			"ɵangular_packages_forms_forms_t",
			"ɵangular_packages_forms_forms_u",
			"ɵangular_packages_forms_forms_v",
			"ɵangular_packages_forms_forms_w",
			"ɵangular_packages_forms_forms_x",
			"ɵangular_packages_forms_forms_y",
			"ɵangular_packages_forms_forms_z"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "webpack-dev-server",
		"expectedNames": [
			"addDevServerEntrypoints"
		],
		"detectedNames": [],
		"missingNames": [
			"addDevServerEntrypoints"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@angular/platform-browser-dynamic",
		"transpiled": true,
		"expectedNames": [
			"JitCompilerFactory",
			"RESOURCE_CACHE_PROVIDER",
			"VERSION",
			"platformBrowserDynamic",
			"ɵCOMPILER_PROVIDERS__POST_R3__",
			"ɵCompilerImpl",
			"ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS",
			"ɵResourceLoaderImpl",
			"ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a",
			"ɵplatformCoreDynamic"
		],
		"detectedNames": [
			"JitCompilerFactory",
			"RESOURCE_CACHE_PROVIDER",
			"VERSION",
			"platformBrowserDynamic",
			"ɵCOMPILER_PROVIDERS__POST_R3__",
			"ɵCompilerImpl",
			"ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS",
			"ɵResourceLoaderImpl",
			"ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a",
			"ɵplatformCoreDynamic"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mocha",
		"expectedNames": [
			"utils",
			"interfaces",
			"reporters",
			"Runnable",
			"Context",
			"Runner",
			"Suite",
			"Hook",
			"Test",
			"unloadFile"
		],
		"detectedNames": [
			"utils",
			"interfaces",
			"reporters",
			"Runnable",
			"Context",
			"Runner",
			"Suite",
			"Hook",
			"Test"
		],
		"missingNames": [
			"unloadFile"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "html-webpack-plugin",
		"expectedNames": [
			"version",
			"getHooks",
			"createHtmlTagObject"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"getHooks",
			"createHtmlTagObject"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "socket.io",
		"expectedNames": [
			"listen"
		],
		"detectedNames": [],
		"missingNames": [
			"listen"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ws",
		"expectedNames": [
			"CONNECTING",
			"OPEN",
			"CLOSING",
			"CLOSED",
			"createWebSocketStream",
			"Server",
			"Receiver",
			"Sender",
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"detectedNames": [],
		"missingNames": [
			"CONNECTING",
			"OPEN",
			"CLOSING",
			"CLOSED",
			"createWebSocketStream",
			"Server",
			"Receiver",
			"Sender",
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-preset-es2015",
		"expectedNames": [
			"plugins"
		],
		"detectedNames": [],
		"missingNames": [
			"plugins"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "postcss-loader",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ember-cli-babel",
		"expectedNames": [
			"name",
			"configKey",
			"init",
			"buildBabelOptions",
			"_debugTree",
			"transpileTree",
			"setupPreprocessorRegistry",
			"_shouldIncludePolyfill",
			"_importPolyfill",
			"_shouldIncludeHelpers",
			"_getHelperVersion",
			"_getHelpersPlugin",
			"treeForAddon",
			"treeForVendor",
			"included",
			"isPluginRequired",
			"_getAddonOptions",
			"_getAppOptions",
			"_parentName",
			"_getAddonProvidedConfig",
			"_getExtensions",
			"_getBabelOptions",
			"_shouldHandleTypeScript",
			"_buildClassFeaturePluginConstraints",
			"_addTypeScriptPlugin",
			"_shouldIncludeDecoratorPlugins",
			"_addDecoratorPlugins",
			"_getDebugMacroPlugins",
			"_getEmberModulesAPIPolyfill",
			"_getEmberDataPackagesPolyfill",
			"_getPresetEnv",
			"_getTargets",
			"_getModulesPlugin",
			"shouldCompileModules",
			"_shouldCompileModules",
			"_emberVersionRequiresModulesAPIPolyfill",
			"_emberDataVersionRequiresPackagesPolyfill",
			"_getEmberModulesAPIIgnore",
			"_isProjectName",
			"_isTransitiveDependency",
			"_shouldIgnoreEmberString",
			"_shouldIgnoreJQuery",
			"_shouldHighlightCode",
			"_shouldDoNothing"
		],
		"detectedNames": [],
		"missingNames": [
			"name",
			"configKey",
			"init",
			"buildBabelOptions",
			"_debugTree",
			"transpileTree",
			"setupPreprocessorRegistry",
			"_shouldIncludePolyfill",
			"_importPolyfill",
			"_shouldIncludeHelpers",
			"_getHelperVersion",
			"_getHelpersPlugin",
			"treeForAddon",
			"treeForVendor",
			"included",
			"isPluginRequired",
			"_getAddonOptions",
			"_getAppOptions",
			"_parentName",
			"_getAddonProvidedConfig",
			"_getExtensions",
			"_getBabelOptions",
			"_shouldHandleTypeScript",
			"_buildClassFeaturePluginConstraints",
			"_addTypeScriptPlugin",
			"_shouldIncludeDecoratorPlugins",
			"_addDecoratorPlugins",
			"_getDebugMacroPlugins",
			"_getEmberModulesAPIPolyfill",
			"_getEmberDataPackagesPolyfill",
			"_getPresetEnv",
			"_getTargets",
			"_getModulesPlugin",
			"shouldCompileModules",
			"_shouldCompileModules",
			"_emberVersionRequiresModulesAPIPolyfill",
			"_emberDataVersionRequiresPackagesPolyfill",
			"_getEmberModulesAPIIgnore",
			"_isProjectName",
			"_isTransitiveDependency",
			"_shouldIgnoreEmberString",
			"_shouldIgnoreJQuery",
			"_shouldHighlightCode",
			"_shouldDoNothing"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-polyfill",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@angular/router",
		"transpiled": true,
		"expectedNames": [
			"ActivatedRoute",
			"ActivatedRouteSnapshot",
			"ActivationEnd",
			"ActivationStart",
			"BaseRouteReuseStrategy",
			"ChildActivationEnd",
			"ChildActivationStart",
			"ChildrenOutletContexts",
			"DefaultUrlSerializer",
			"GuardsCheckEnd",
			"GuardsCheckStart",
			"NavigationCancel",
			"NavigationEnd",
			"NavigationError",
			"NavigationStart",
			"NoPreloading",
			"OutletContext",
			"PRIMARY_OUTLET",
			"PreloadAllModules",
			"PreloadingStrategy",
			"ROUTER_CONFIGURATION",
			"ROUTER_INITIALIZER",
			"ROUTES",
			"ResolveEnd",
			"ResolveStart",
			"RouteConfigLoadEnd",
			"RouteConfigLoadStart",
			"RouteReuseStrategy",
			"Router",
			"RouterEvent",
			"RouterLink",
			"RouterLinkActive",
			"RouterLinkWithHref",
			"RouterModule",
			"RouterOutlet",
			"RouterPreloader",
			"RouterState",
			"RouterStateSnapshot",
			"RoutesRecognized",
			"Scroll",
			"UrlHandlingStrategy",
			"UrlSegment",
			"UrlSegmentGroup",
			"UrlSerializer",
			"UrlTree",
			"VERSION",
			"convertToParamMap",
			"provideRoutes",
			"ɵEmptyOutletComponent",
			"ɵROUTER_PROVIDERS",
			"ɵangular_packages_router_router_a",
			"ɵangular_packages_router_router_b",
			"ɵangular_packages_router_router_c",
			"ɵangular_packages_router_router_d",
			"ɵangular_packages_router_router_e",
			"ɵangular_packages_router_router_f",
			"ɵangular_packages_router_router_g",
			"ɵangular_packages_router_router_h",
			"ɵangular_packages_router_router_i",
			"ɵangular_packages_router_router_j",
			"ɵangular_packages_router_router_k",
			"ɵangular_packages_router_router_l",
			"ɵangular_packages_router_router_m",
			"ɵangular_packages_router_router_n",
			"ɵangular_packages_router_router_o",
			"ɵflatten"
		],
		"detectedNames": [
			"ActivatedRoute",
			"ActivatedRouteSnapshot",
			"ActivationEnd",
			"ActivationStart",
			"BaseRouteReuseStrategy",
			"ChildActivationEnd",
			"ChildActivationStart",
			"ChildrenOutletContexts",
			"DefaultUrlSerializer",
			"GuardsCheckEnd",
			"GuardsCheckStart",
			"NavigationCancel",
			"NavigationEnd",
			"NavigationError",
			"NavigationStart",
			"NoPreloading",
			"OutletContext",
			"PRIMARY_OUTLET",
			"PreloadAllModules",
			"PreloadingStrategy",
			"ROUTER_CONFIGURATION",
			"ROUTER_INITIALIZER",
			"ROUTES",
			"ResolveEnd",
			"ResolveStart",
			"RouteConfigLoadEnd",
			"RouteConfigLoadStart",
			"RouteReuseStrategy",
			"Router",
			"RouterEvent",
			"RouterLink",
			"RouterLinkActive",
			"RouterLinkWithHref",
			"RouterModule",
			"RouterOutlet",
			"RouterPreloader",
			"RouterState",
			"RouterStateSnapshot",
			"RoutesRecognized",
			"Scroll",
			"UrlHandlingStrategy",
			"UrlSegment",
			"UrlSegmentGroup",
			"UrlSerializer",
			"UrlTree",
			"VERSION",
			"convertToParamMap",
			"provideRoutes",
			"ɵEmptyOutletComponent",
			"ɵROUTER_PROVIDERS",
			"ɵangular_packages_router_router_a",
			"ɵangular_packages_router_router_b",
			"ɵangular_packages_router_router_c",
			"ɵangular_packages_router_router_d",
			"ɵangular_packages_router_router_e",
			"ɵangular_packages_router_router_f",
			"ɵangular_packages_router_router_g",
			"ɵangular_packages_router_router_h",
			"ɵangular_packages_router_router_i",
			"ɵangular_packages_router_router_j",
			"ɵangular_packages_router_router_k",
			"ɵangular_packages_router_router_l",
			"ɵangular_packages_router_router_m",
			"ɵangular_packages_router_router_n",
			"ɵangular_packages_router_router_o",
			"ɵflatten"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ramda",
		"expectedNames": [
			"F",
			"T",
			"__",
			"add",
			"addIndex",
			"adjust",
			"all",
			"allPass",
			"always",
			"and",
			"any",
			"anyPass",
			"ap",
			"aperture",
			"append",
			"apply",
			"applySpec",
			"applyTo",
			"ascend",
			"assoc",
			"assocPath",
			"binary",
			"bind",
			"both",
			"call",
			"chain",
			"clamp",
			"clone",
			"comparator",
			"complement",
			"compose",
			"composeK",
			"composeP",
			"composeWith",
			"concat",
			"cond",
			"construct",
			"constructN",
			"contains",
			"converge",
			"countBy",
			"curry",
			"curryN",
			"dec",
			"defaultTo",
			"descend",
			"difference",
			"differenceWith",
			"dissoc",
			"dissocPath",
			"divide",
			"drop",
			"dropLast",
			"dropLastWhile",
			"dropRepeats",
			"dropRepeatsWith",
			"dropWhile",
			"either",
			"empty",
			"endsWith",
			"eqBy",
			"eqProps",
			"equals",
			"evolve",
			"filter",
			"find",
			"findIndex",
			"findLast",
			"findLastIndex",
			"flatten",
			"flip",
			"forEach",
			"forEachObjIndexed",
			"fromPairs",
			"groupBy",
			"groupWith",
			"gt",
			"gte",
			"has",
			"hasIn",
			"hasPath",
			"head",
			"identical",
			"identity",
			"ifElse",
			"inc",
			"includes",
			"indexBy",
			"indexOf",
			"init",
			"innerJoin",
			"insert",
			"insertAll",
			"intersection",
			"intersperse",
			"into",
			"invert",
			"invertObj",
			"invoker",
			"is",
			"isEmpty",
			"isNil",
			"join",
			"juxt",
			"keys",
			"keysIn",
			"last",
			"lastIndexOf",
			"length",
			"lens",
			"lensIndex",
			"lensPath",
			"lensProp",
			"lift",
			"liftN",
			"lt",
			"lte",
			"map",
			"mapAccum",
			"mapAccumRight",
			"mapObjIndexed",
			"match",
			"mathMod",
			"max",
			"maxBy",
			"mean",
			"median",
			"memoizeWith",
			"merge",
			"mergeAll",
			"mergeDeepLeft",
			"mergeDeepRight",
			"mergeDeepWith",
			"mergeDeepWithKey",
			"mergeLeft",
			"mergeRight",
			"mergeWith",
			"mergeWithKey",
			"min",
			"minBy",
			"modulo",
			"move",
			"multiply",
			"nAry",
			"negate",
			"none",
			"not",
			"nth",
			"nthArg",
			"o",
			"objOf",
			"of",
			"omit",
			"once",
			"or",
			"otherwise",
			"over",
			"pair",
			"partial",
			"partialRight",
			"partition",
			"path",
			"paths",
			"pathEq",
			"pathOr",
			"pathSatisfies",
			"pick",
			"pickAll",
			"pickBy",
			"pipe",
			"pipeK",
			"pipeP",
			"pipeWith",
			"pluck",
			"prepend",
			"product",
			"project",
			"prop",
			"propEq",
			"propIs",
			"propOr",
			"propSatisfies",
			"props",
			"range",
			"reduce",
			"reduceBy",
			"reduceRight",
			"reduceWhile",
			"reduced",
			"reject",
			"remove",
			"repeat",
			"replace",
			"reverse",
			"scan",
			"sequence",
			"set",
			"slice",
			"sort",
			"sortBy",
			"sortWith",
			"split",
			"splitAt",
			"splitEvery",
			"splitWhen",
			"startsWith",
			"subtract",
			"sum",
			"symmetricDifference",
			"symmetricDifferenceWith",
			"tail",
			"take",
			"takeLast",
			"takeLastWhile",
			"takeWhile",
			"tap",
			"test",
			"andThen",
			"times",
			"toLower",
			"toPairs",
			"toPairsIn",
			"toString",
			"toUpper",
			"transduce",
			"transpose",
			"traverse",
			"trim",
			"tryCatch",
			"type",
			"unapply",
			"unary",
			"uncurryN",
			"unfold",
			"union",
			"unionWith",
			"uniq",
			"uniqBy",
			"uniqWith",
			"unless",
			"unnest",
			"until",
			"update",
			"useWith",
			"values",
			"valuesIn",
			"view",
			"when",
			"where",
			"whereEq",
			"without",
			"xor",
			"xprod",
			"zip",
			"zipObj",
			"zipWith",
			"thunkify"
		],
		"detectedNames": [
			"F",
			"T",
			"__",
			"add",
			"addIndex",
			"adjust",
			"all",
			"allPass",
			"always",
			"and",
			"any",
			"anyPass",
			"ap",
			"aperture",
			"append",
			"apply",
			"applySpec",
			"applyTo",
			"ascend",
			"assoc",
			"assocPath",
			"binary",
			"bind",
			"both",
			"call",
			"chain",
			"clamp",
			"clone",
			"comparator",
			"complement",
			"compose",
			"composeK",
			"composeP",
			"composeWith",
			"concat",
			"cond",
			"construct",
			"constructN",
			"contains",
			"converge",
			"countBy",
			"curry",
			"curryN",
			"dec",
			"defaultTo",
			"descend",
			"difference",
			"differenceWith",
			"dissoc",
			"dissocPath",
			"divide",
			"drop",
			"dropLast",
			"dropLastWhile",
			"dropRepeats",
			"dropRepeatsWith",
			"dropWhile",
			"either",
			"empty",
			"endsWith",
			"eqBy",
			"eqProps",
			"equals",
			"evolve",
			"filter",
			"find",
			"findIndex",
			"findLast",
			"findLastIndex",
			"flatten",
			"flip",
			"forEach",
			"forEachObjIndexed",
			"fromPairs",
			"groupBy",
			"groupWith",
			"gt",
			"gte",
			"has",
			"hasIn",
			"hasPath",
			"head",
			"identical",
			"identity",
			"ifElse",
			"inc",
			"includes",
			"indexBy",
			"indexOf",
			"init",
			"innerJoin",
			"insert",
			"insertAll",
			"intersection",
			"intersperse",
			"into",
			"invert",
			"invertObj",
			"invoker",
			"is",
			"isEmpty",
			"isNil",
			"join",
			"juxt",
			"keys",
			"keysIn",
			"last",
			"lastIndexOf",
			"length",
			"lens",
			"lensIndex",
			"lensPath",
			"lensProp",
			"lift",
			"liftN",
			"lt",
			"lte",
			"map",
			"mapAccum",
			"mapAccumRight",
			"mapObjIndexed",
			"match",
			"mathMod",
			"max",
			"maxBy",
			"mean",
			"median",
			"memoizeWith",
			"merge",
			"mergeAll",
			"mergeDeepLeft",
			"mergeDeepRight",
			"mergeDeepWith",
			"mergeDeepWithKey",
			"mergeLeft",
			"mergeRight",
			"mergeWith",
			"mergeWithKey",
			"min",
			"minBy",
			"modulo",
			"move",
			"multiply",
			"nAry",
			"negate",
			"none",
			"not",
			"nth",
			"nthArg",
			"o",
			"objOf",
			"of",
			"omit",
			"once",
			"or",
			"otherwise",
			"over",
			"pair",
			"partial",
			"partialRight",
			"partition",
			"path",
			"paths",
			"pathEq",
			"pathOr",
			"pathSatisfies",
			"pick",
			"pickAll",
			"pickBy",
			"pipe",
			"pipeK",
			"pipeP",
			"pipeWith",
			"pluck",
			"prepend",
			"product",
			"project",
			"prop",
			"propEq",
			"propIs",
			"propOr",
			"propSatisfies",
			"props",
			"range",
			"reduce",
			"reduceBy",
			"reduceRight",
			"reduceWhile",
			"reduced",
			"reject",
			"remove",
			"repeat",
			"replace",
			"reverse",
			"scan",
			"sequence",
			"set",
			"slice",
			"sort",
			"sortBy",
			"sortWith",
			"split",
			"splitAt",
			"splitEvery",
			"splitWhen",
			"startsWith",
			"subtract",
			"sum",
			"symmetricDifference",
			"symmetricDifferenceWith",
			"tail",
			"take",
			"takeLast",
			"takeLastWhile",
			"takeWhile",
			"tap",
			"test",
			"andThen",
			"times",
			"toLower",
			"toPairs",
			"toPairsIn",
			"toString",
			"toUpper",
			"transduce",
			"transpose",
			"traverse",
			"trim",
			"tryCatch",
			"type",
			"unapply",
			"unary",
			"uncurryN",
			"unfold",
			"union",
			"unionWith",
			"uniq",
			"uniqBy",
			"uniqWith",
			"unless",
			"unnest",
			"until",
			"update",
			"useWith",
			"values",
			"valuesIn",
			"view",
			"when",
			"where",
			"whereEq",
			"without",
			"xor",
			"xprod",
			"zip",
			"zipObj",
			"zipWith",
			"thunkify"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "react-redux",
		"transpiled": true,
		"expectedNames": [
			"Provider",
			"connectAdvanced",
			"ReactReduxContext",
			"connect",
			"useDispatch",
			"createDispatchHook",
			"useSelector",
			"createSelectorHook",
			"useStore",
			"createStoreHook",
			"batch",
			"shallowEqual"
		],
		"detectedNames": [
			"Provider",
			"connectAdvanced",
			"ReactReduxContext",
			"connect",
			"useDispatch",
			"createDispatchHook",
			"useSelector",
			"createSelectorHook",
			"useStore",
			"createStoreHook",
			"batch",
			"shallowEqual"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/core",
		"transpiled": true,
		"expectedNames": [
			"Plugin",
			"File",
			"buildExternalHelpers",
			"resolvePlugin",
			"resolvePreset",
			"version",
			"getEnv",
			"tokTypes",
			"traverse",
			"template",
			"createConfigItem",
			"loadPartialConfig",
			"loadPartialConfigSync",
			"loadPartialConfigAsync",
			"loadOptions",
			"loadOptionsSync",
			"loadOptionsAsync",
			"transform",
			"transformSync",
			"transformAsync",
			"transformFile",
			"transformFileSync",
			"transformFileAsync",
			"transformFromAst",
			"transformFromAstSync",
			"transformFromAstAsync",
			"parse",
			"parseSync",
			"parseAsync",
			"DEFAULT_EXTENSIONS",
			"OptionManager",
			"types"
		],
		"detectedNames": [
			"Plugin",
			"File",
			"buildExternalHelpers",
			"resolvePlugin",
			"resolvePreset",
			"version",
			"getEnv",
			"tokTypes",
			"traverse",
			"template",
			"createConfigItem",
			"loadPartialConfig",
			"loadPartialConfigSync",
			"loadPartialConfigAsync",
			"loadOptions",
			"loadOptionsSync",
			"loadOptionsAsync",
			"transform",
			"transformSync",
			"transformAsync",
			"transformFile",
			"transformFileSync",
			"transformFileAsync",
			"transformFromAst",
			"transformFromAstSync",
			"transformFromAstAsync",
			"parse",
			"parseSync",
			"parseAsync",
			"DEFAULT_EXTENSIONS",
			"OptionManager",
			"types"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@angular/http",
		"transpiled": true,
		"expectedNames": [
			"RequestMethod",
			"ReadyState",
			"ResponseType",
			"ResponseContentType",
			"ɵangular_packages_http_http_e",
			"ɵangular_packages_http_http_f",
			"ɵangular_packages_http_http_a",
			"ɵangular_packages_http_http_b",
			"ɵangular_packages_http_http_c",
			"BrowserXhr",
			"JSONPBackend",
			"JSONPConnection",
			"CookieXSRFStrategy",
			"XHRBackend",
			"XHRConnection",
			"BaseRequestOptions",
			"RequestOptions",
			"BaseResponseOptions",
			"ResponseOptions",
			"Headers",
			"Http",
			"Jsonp",
			"HttpModule",
			"JsonpModule",
			"Connection",
			"ConnectionBackend",
			"XSRFStrategy",
			"Request",
			"Response",
			"QueryEncoder",
			"URLSearchParams",
			"VERSION"
		],
		"detectedNames": [
			"RequestMethod",
			"ReadyState",
			"ResponseType",
			"ResponseContentType",
			"ɵangular_packages_http_http_e",
			"ɵangular_packages_http_http_f",
			"ɵangular_packages_http_http_a",
			"ɵangular_packages_http_http_b",
			"ɵangular_packages_http_http_c",
			"BrowserXhr",
			"JSONPBackend",
			"JSONPConnection",
			"CookieXSRFStrategy",
			"XHRBackend",
			"XHRConnection",
			"BaseRequestOptions",
			"RequestOptions",
			"BaseResponseOptions",
			"ResponseOptions",
			"Headers",
			"Http",
			"Jsonp",
			"HttpModule",
			"JsonpModule",
			"Connection",
			"ConnectionBackend",
			"XSRFStrategy",
			"Request",
			"Response",
			"QueryEncoder",
			"URLSearchParams",
			"VERSION"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ejs",
		"expectedNames": [
			"cache",
			"fileLoader",
			"localsName",
			"promiseImpl",
			"resolveInclude",
			"compile",
			"render",
			"renderFile",
			"Template",
			"clearCache",
			"escapeXML",
			"__express",
			"VERSION",
			"name"
		],
		"detectedNames": [
			"cache",
			"fileLoader",
			"localsName",
			"promiseImpl",
			"resolveInclude",
			"compile",
			"render",
			"renderFile",
			"Template",
			"clearCache",
			"escapeXML",
			"__express",
			"VERSION",
			"name"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "coffee-script",
		"expectedNames": [
			"VERSION",
			"FILE_EXTENSIONS",
			"helpers",
			"compile",
			"tokens",
			"nodes",
			"run",
			"eval",
			"register",
			"_compileFile"
		],
		"detectedNames": [
			"VERSION",
			"FILE_EXTENSIONS",
			"helpers",
			"compile",
			"tokens",
			"nodes",
			"run",
			"eval",
			"register",
			"_compileFile"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "superagent",
		"expectedNames": [
			"Request",
			"agent",
			"Response",
			"protocols",
			"serialize",
			"parse",
			"buffer",
			"acl",
			"bind",
			"checkout",
			"connect",
			"copy",
			"delete",
			"get",
			"head",
			"link",
			"lock",
			"m-search",
			"merge",
			"mkactivity",
			"mkcalendar",
			"mkcol",
			"move",
			"notify",
			"options",
			"patch",
			"post",
			"pri",
			"propfind",
			"proppatch",
			"purge",
			"put",
			"rebind",
			"report",
			"search",
			"source",
			"subscribe",
			"trace",
			"unbind",
			"unlink",
			"unlock",
			"unsubscribe",
			"del"
		],
		"detectedNames": [
			"Request",
			"agent",
			"Response",
			"protocols",
			"serialize",
			"parse",
			"buffer"
		],
		"missingNames": [
			"acl",
			"bind",
			"checkout",
			"connect",
			"copy",
			"delete",
			"get",
			"head",
			"link",
			"lock",
			"m-search",
			"merge",
			"mkactivity",
			"mkcalendar",
			"mkcol",
			"move",
			"notify",
			"options",
			"patch",
			"post",
			"pri",
			"propfind",
			"proppatch",
			"purge",
			"put",
			"rebind",
			"report",
			"search",
			"source",
			"subscribe",
			"trace",
			"unbind",
			"unlink",
			"unlock",
			"unsubscribe",
			"del"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "request-promise",
		"expectedNames": [
			"get",
			"head",
			"options",
			"post",
			"put",
			"patch",
			"del",
			"delete",
			"jar",
			"cookie",
			"defaults",
			"forever",
			"Request",
			"initParams",
			"debug",
			"bindCLS"
		],
		"detectedNames": [],
		"missingNames": [
			"get",
			"head",
			"options",
			"post",
			"put",
			"patch",
			"del",
			"delete",
			"jar",
			"cookie",
			"defaults",
			"forever",
			"Request",
			"initParams",
			"debug",
			"bindCLS"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "autoprefixer",
		"expectedNames": [
			"postcss",
			"data",
			"defaults",
			"info"
		],
		"detectedNames": [
			"postcss",
			"data",
			"defaults",
			"info"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "path",
		"expectedNames": [
			"resolve",
			"normalize",
			"isAbsolute",
			"join",
			"relative",
			"toNamespacedPath",
			"dirname",
			"basename",
			"extname",
			"format",
			"parse",
			"sep",
			"delimiter",
			"win32",
			"posix",
			"_makeLong"
		],
		"detectedNames": [
			"resolve",
			"normalize",
			"isAbsolute",
			"join",
			"relative",
			"toNamespacedPath",
			"dirname",
			"basename",
			"extname",
			"format",
			"parse",
			"sep",
			"delimiter",
			"win32",
			"posix",
			"_makeLong"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mongodb",
		"expectedNames": [
			"MongoError",
			"MongoNetworkError",
			"MongoTimeoutError",
			"MongoServerSelectionError",
			"MongoParseError",
			"MongoWriteConcernError",
			"MongoBulkWriteError",
			"BulkWriteError",
			"Admin",
			"MongoClient",
			"Db",
			"Collection",
			"Server",
			"ReplSet",
			"Mongos",
			"ReadPreference",
			"GridStore",
			"Chunk",
			"Logger",
			"AggregationCursor",
			"CommandCursor",
			"Cursor",
			"GridFSBucket",
			"CoreServer",
			"CoreConnection",
			"Binary",
			"Code",
			"Map",
			"DBRef",
			"Double",
			"Int32",
			"Long",
			"MinKey",
			"MaxKey",
			"ObjectID",
			"ObjectId",
			"Symbol",
			"Timestamp",
			"BSONRegExp",
			"Decimal128",
			"connect",
			"instrument"
		],
		"detectedNames": [],
		"missingNames": [
			"MongoError",
			"MongoNetworkError",
			"MongoTimeoutError",
			"MongoServerSelectionError",
			"MongoParseError",
			"MongoWriteConcernError",
			"MongoBulkWriteError",
			"BulkWriteError",
			"Admin",
			"MongoClient",
			"Db",
			"Collection",
			"Server",
			"ReplSet",
			"Mongos",
			"ReadPreference",
			"GridStore",
			"Chunk",
			"Logger",
			"AggregationCursor",
			"CommandCursor",
			"Cursor",
			"GridFSBucket",
			"CoreServer",
			"CoreConnection",
			"Binary",
			"Code",
			"Map",
			"DBRef",
			"Double",
			"Int32",
			"Long",
			"MinKey",
			"MaxKey",
			"ObjectID",
			"ObjectId",
			"Symbol",
			"Timestamp",
			"BSONRegExp",
			"Decimal128",
			"connect",
			"instrument"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "chai",
		"expectedNames": [
			"version",
			"AssertionError",
			"use",
			"util",
			"config",
			"Assertion",
			"expect",
			"should",
			"Should",
			"assert"
		],
		"detectedNames": [
			"version",
			"AssertionError",
			"use",
			"util",
			"config"
		],
		"missingNames": [
			"Assertion",
			"expect",
			"should",
			"Should",
			"assert"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "mongoose",
		"expectedNames": [
			"connections",
			"models",
			"modelSchemas",
			"options",
			"_pluralize",
			"Schema",
			"model",
			"plugins",
			"cast",
			"STATES",
			"driver",
			"set",
			"get",
			"createConnection",
			"connect",
			"disconnect",
			"startSession",
			"pluralize",
			"deleteModel",
			"modelNames",
			"_applyPlugins",
			"plugin",
			"connection",
			"Aggregate",
			"Collection",
			"Connection",
			"version",
			"Mongoose",
			"SchemaType",
			"SchemaTypes",
			"VirtualType",
			"Types",
			"Query",
			"PromiseProvider",
			"Model",
			"Document",
			"DocumentProvider",
			"ObjectId",
			"isValidObjectId",
			"Decimal128",
			"Mixed",
			"Date",
			"Number",
			"Error",
			"now",
			"CastError",
			"SchemaTypeOptions",
			"mongo",
			"mquery"
		],
		"detectedNames": [],
		"missingNames": [
			"connections",
			"models",
			"modelSchemas",
			"options",
			"_pluralize",
			"Schema",
			"model",
			"plugins",
			"cast",
			"STATES",
			"driver",
			"set",
			"get",
			"createConnection",
			"connect",
			"disconnect",
			"startSession",
			"pluralize",
			"deleteModel",
			"modelNames",
			"_applyPlugins",
			"plugin",
			"connection",
			"Aggregate",
			"Collection",
			"Connection",
			"version",
			"Mongoose",
			"SchemaType",
			"SchemaTypes",
			"VirtualType",
			"Types",
			"Query",
			"PromiseProvider",
			"Model",
			"Document",
			"DocumentProvider",
			"ObjectId",
			"isValidObjectId",
			"Decimal128",
			"Mixed",
			"Date",
			"Number",
			"Error",
			"now",
			"CastError",
			"SchemaTypeOptions",
			"mongo",
			"mquery"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "xml2js",
		"expectedNames": [
			"defaults",
			"processors",
			"ValidationError",
			"Builder",
			"Parser",
			"parseString",
			"parseStringPromise"
		],
		"detectedNames": [
			"defaults",
			"processors",
			"ValidationError",
			"Builder",
			"Parser",
			"parseString",
			"parseStringPromise"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jest",
		"transpiled": true,
		"expectedNames": [
			"SearchSource",
			"TestScheduler",
			"TestWatcher",
			"getVersion",
			"runCLI",
			"run"
		],
		"detectedNames": [
			"SearchSource",
			"TestScheduler",
			"TestWatcher",
			"getVersion",
			"runCLI",
			"run"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "sass-loader",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "redis",
		"expectedNames": [
			"debug_mode",
			"createClient",
			"RedisClient",
			"print",
			"Multi",
			"AbortError",
			"RedisError",
			"ParserError",
			"ReplyError",
			"AggregateError",
			"add_command",
			"addCommand"
		],
		"detectedNames": [
			"debug_mode",
			"createClient",
			"RedisClient",
			"print",
			"Multi",
			"AbortError",
			"RedisError",
			"ParserError",
			"ReplyError",
			"AggregateError",
			"add_command",
			"addCommand"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "vue-router",
		"expectedNames": [
			"install",
			"version",
			"isNavigationFailure",
			"NavigationFailureType"
		],
		"detectedNames": [],
		"missingNames": [
			"install",
			"version",
			"isNavigationFailure",
			"NavigationFailureType"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "chokidar",
		"expectedNames": [
			"FSWatcher",
			"watch"
		],
		"detectedNames": [
			"FSWatcher",
			"watch"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "co",
		"expectedNames": [
			"co",
			"wrap"
		],
		"detectedNames": [],
		"missingNames": [
			"co",
			"wrap"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-jsx-a11y",
		"expectedNames": [
			"rules",
			"configs"
		],
		"detectedNames": [],
		"missingNames": [
			"rules",
			"configs"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "optimist",
		"expectedNames": [
			"$0",
			"boolean",
			"string",
			"alias",
			"demand",
			"usage",
			"check",
			"describe",
			"parse",
			"options",
			"option",
			"wrap",
			"showHelp",
			"help",
			"argv",
			"rebase"
		],
		"detectedNames": [
			"rebase"
		],
		"missingNames": [
			"$0",
			"boolean",
			"string",
			"alias",
			"demand",
			"usage",
			"check",
			"describe",
			"parse",
			"options",
			"option",
			"wrap",
			"showHelp",
			"help",
			"argv"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "promise",
		"expectedNames": [
			"_Y",
			"_Z",
			"_0",
			"resolve",
			"all",
			"reject",
			"race",
			"denodeify",
			"nodeify",
			"enableSynchronous",
			"disableSynchronous"
		],
		"detectedNames": [],
		"missingNames": [
			"_Y",
			"_Z",
			"_0",
			"resolve",
			"all",
			"reject",
			"race",
			"denodeify",
			"nodeify",
			"enableSynchronous",
			"disableSynchronous"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@angular/animations",
		"transpiled": true,
		"expectedNames": [
			"AUTO_STYLE",
			"AnimationBuilder",
			"AnimationFactory",
			"NoopAnimationPlayer",
			"animate",
			"animateChild",
			"animation",
			"group",
			"keyframes",
			"query",
			"sequence",
			"stagger",
			"state",
			"style",
			"transition",
			"trigger",
			"useAnimation",
			"ɵAnimationGroupPlayer",
			"ɵPRE_STYLE"
		],
		"detectedNames": [
			"AUTO_STYLE",
			"AnimationBuilder",
			"AnimationFactory",
			"NoopAnimationPlayer",
			"animate",
			"animateChild",
			"animation",
			"group",
			"keyframes",
			"query",
			"sequence",
			"stagger",
			"state",
			"style",
			"transition",
			"trigger",
			"useAnimation",
			"ɵAnimationGroupPlayer",
			"ɵPRE_STYLE"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "postcss",
		"expectedNames": [
			"plugin",
			"stringify",
			"parse",
			"list",
			"comment",
			"atRule",
			"decl",
			"rule",
			"root",
			"CssSyntaxError",
			"Declaration",
			"Container",
			"Comment",
			"Warning",
			"AtRule",
			"Result",
			"Input",
			"Rule",
			"Root",
			"Node"
		],
		"detectedNames": [
			"plugin",
			"stringify",
			"parse",
			"list",
			"comment",
			"atRule",
			"decl",
			"rule",
			"root",
			"CssSyntaxError",
			"Declaration",
			"Container",
			"Comment",
			"Warning",
			"AtRule",
			"Result",
			"Input",
			"Rule",
			"Root",
			"Node"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "morgan",
		"expectedNames": [
			"compile",
			"format",
			"token",
			"combined",
			"common",
			"short",
			"tiny",
			"dev",
			"url",
			"method",
			"response-time",
			"total-time",
			"date",
			"status",
			"referrer",
			"remote-addr",
			"remote-user",
			"http-version",
			"user-agent",
			"req",
			"res"
		],
		"detectedNames": [
			"compile",
			"format",
			"token"
		],
		"missingNames": [
			"combined",
			"common",
			"short",
			"tiny",
			"dev",
			"url",
			"method",
			"response-time",
			"total-time",
			"date",
			"status",
			"referrer",
			"remote-addr",
			"remote-user",
			"http-version",
			"user-agent",
			"req",
			"res"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "less",
		"expectedNames": [
			"node",
			"color",
			"atrule",
			"detachedruleset",
			"operation",
			"dimension",
			"unit",
			"keyword",
			"variable",
			"property",
			"ruleset",
			"element",
			"attribute",
			"combinator",
			"selector",
			"quoted",
			"expression",
			"declaration",
			"call",
			"url",
			"import",
			"comment",
			"anonymous",
			"value",
			"javascript",
			"assignment",
			"condition",
			"paren",
			"media",
			"unicodedescriptor",
			"negative",
			"extend",
			"variablecall",
			"namespacevalue",
			"mixin",
			"createFromEnvironment",
			"lesscHelper",
			"PluginLoader",
			"fs",
			"FileManager",
			"UrlFileManager",
			"options",
			"version",
			"data",
			"tree",
			"Environment",
			"AbstractFileManager",
			"AbstractPluginLoader",
			"environment",
			"visitors",
			"Parser",
			"functions",
			"contexts",
			"SourceMapOutput",
			"SourceMapBuilder",
			"ParseTree",
			"ImportManager",
			"render",
			"parse",
			"LessError",
			"transformTree",
			"utils",
			"PluginManager",
			"logger"
		],
		"detectedNames": [],
		"missingNames": [
			"node",
			"color",
			"atrule",
			"detachedruleset",
			"operation",
			"dimension",
			"unit",
			"keyword",
			"variable",
			"property",
			"ruleset",
			"element",
			"attribute",
			"combinator",
			"selector",
			"quoted",
			"expression",
			"declaration",
			"call",
			"url",
			"import",
			"comment",
			"anonymous",
			"value",
			"javascript",
			"assignment",
			"condition",
			"paren",
			"media",
			"unicodedescriptor",
			"negative",
			"extend",
			"variablecall",
			"namespacevalue",
			"mixin",
			"createFromEnvironment",
			"lesscHelper",
			"PluginLoader",
			"fs",
			"FileManager",
			"UrlFileManager",
			"options",
			"version",
			"data",
			"tree",
			"Environment",
			"AbstractFileManager",
			"AbstractPluginLoader",
			"environment",
			"visitors",
			"Parser",
			"functions",
			"contexts",
			"SourceMapOutput",
			"SourceMapBuilder",
			"ParseTree",
			"ImportManager",
			"render",
			"parse",
			"LessError",
			"transformTree",
			"utils",
			"PluginManager",
			"logger"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "immutable",
		"expectedNames": [
			"Iterable",
			"Seq",
			"Collection",
			"Map",
			"OrderedMap",
			"List",
			"Stack",
			"Set",
			"OrderedSet",
			"Record",
			"Range",
			"Repeat",
			"is",
			"fromJS"
		],
		"detectedNames": [],
		"missingNames": [
			"Iterable",
			"Seq",
			"Collection",
			"Map",
			"OrderedMap",
			"List",
			"Stack",
			"Set",
			"OrderedSet",
			"Record",
			"Range",
			"Repeat",
			"is",
			"fromJS"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "qs",
		"expectedNames": [
			"formats",
			"parse",
			"stringify"
		],
		"detectedNames": [
			"formats",
			"parse",
			"stringify"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "loader-utils",
		"expectedNames": [
			"getOptions",
			"parseQuery",
			"stringifyRequest",
			"getRemainingRequest",
			"getCurrentRequest",
			"isUrlRequest",
			"urlToRequest",
			"parseString",
			"getHashDigest",
			"interpolateName"
		],
		"detectedNames": [
			"getOptions",
			"parseQuery",
			"stringifyRequest",
			"getRemainingRequest",
			"getCurrentRequest",
			"isUrlRequest",
			"urlToRequest",
			"parseString",
			"getHashDigest",
			"interpolateName"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "extract-text-webpack-plugin",
		"expectedNames": [
			"extract"
		],
		"detectedNames": [],
		"missingNames": [
			"extract"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "marked",
		"expectedNames": [
			"setOptions",
			"options",
			"getDefaults",
			"defaults",
			"use",
			"walkTokens",
			"Parser",
			"parser",
			"Renderer",
			"TextRenderer",
			"Lexer",
			"lexer",
			"Tokenizer",
			"Slugger",
			"parse"
		],
		"detectedNames": [],
		"missingNames": [
			"setOptions",
			"options",
			"getDefaults",
			"defaults",
			"use",
			"walkTokens",
			"Parser",
			"parser",
			"Renderer",
			"TextRenderer",
			"Lexer",
			"lexer",
			"Tokenizer",
			"Slugger",
			"parse"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mime",
		"expectedNames": [
			"_types",
			"_extensions",
			"define",
			"getType",
			"getExtension"
		],
		"detectedNames": [],
		"missingNames": [
			"_types",
			"_extensions",
			"define",
			"getType",
			"getExtension"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@alifd/next",
		"transpiled": true,
		"expectedNames": [
			"Affix",
			"Animate",
			"Badge",
			"Balloon",
			"Breadcrumb",
			"Button",
			"Calendar",
			"Card",
			"Cascader",
			"CascaderSelect",
			"Checkbox",
			"Collapse",
			"ConfigProvider",
			"DatePicker",
			"Dialog",
			"Dropdown",
			"Drawer",
			"Field",
			"Form",
			"Grid",
			"Icon",
			"Input",
			"Loading",
			"Menu",
			"MenuButton",
			"Message",
			"Nav",
			"NumberPicker",
			"Overlay",
			"Pagination",
			"Paragraph",
			"Progress",
			"Radio",
			"Range",
			"Rating",
			"Search",
			"Select",
			"Shell",
			"Slider",
			"SplitButton",
			"Step",
			"Switch",
			"Tab",
			"Table",
			"Tag",
			"TimePicker",
			"Timeline",
			"Transfer",
			"Tree",
			"TreeSelect",
			"Typography",
			"Upload",
			"VirtualList",
			"Notification",
			"Divider",
			"Avatar",
			"ResponsiveGrid",
			"Box",
			"List",
			"version"
		],
		"detectedNames": [],
		"missingNames": [
			"Affix",
			"Animate",
			"Badge",
			"Balloon",
			"Breadcrumb",
			"Button",
			"Calendar",
			"Card",
			"Cascader",
			"CascaderSelect",
			"Checkbox",
			"Collapse",
			"ConfigProvider",
			"DatePicker",
			"Dialog",
			"Dropdown",
			"Drawer",
			"Field",
			"Form",
			"Grid",
			"Icon",
			"Input",
			"Loading",
			"Menu",
			"MenuButton",
			"Message",
			"Nav",
			"NumberPicker",
			"Overlay",
			"Pagination",
			"Paragraph",
			"Progress",
			"Radio",
			"Range",
			"Rating",
			"Search",
			"Select",
			"Shell",
			"Slider",
			"SplitButton",
			"Step",
			"Switch",
			"Tab",
			"Table",
			"Tag",
			"TimePicker",
			"Timeline",
			"Transfer",
			"Tree",
			"TreeSelect",
			"Typography",
			"Upload",
			"VirtualList",
			"Notification",
			"Divider",
			"Avatar",
			"ResponsiveGrid",
			"Box",
			"List",
			"version"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "meow",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "resolve",
		"expectedNames": [
			"core",
			"isCore",
			"sync"
		],
		"detectedNames": [],
		"missingNames": [
			"core",
			"isCore",
			"sync"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "reflect-metadata",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-preset-react",
		"expectedNames": [
			"presets",
			"plugins",
			"env"
		],
		"detectedNames": [],
		"missingNames": [
			"presets",
			"plugins",
			"env"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jsonwebtoken",
		"expectedNames": [
			"decode",
			"verify",
			"sign",
			"JsonWebTokenError",
			"NotBeforeError",
			"TokenExpiredError"
		],
		"detectedNames": [
			"decode"
		],
		"missingNames": [
			"verify",
			"sign",
			"JsonWebTokenError",
			"NotBeforeError",
			"TokenExpiredError"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-router-dom",
		"expectedNames": [
			"MemoryRouter",
			"Prompt",
			"Redirect",
			"Route",
			"Router",
			"StaticRouter",
			"Switch",
			"generatePath",
			"matchPath",
			"useHistory",
			"useLocation",
			"useParams",
			"useRouteMatch",
			"withRouter",
			"BrowserRouter",
			"HashRouter",
			"Link",
			"NavLink"
		],
		"detectedNames": [
			"MemoryRouter",
			"Prompt",
			"Redirect",
			"Route",
			"Router",
			"StaticRouter",
			"Switch",
			"generatePath",
			"matchPath",
			"useHistory",
			"useLocation",
			"useParams",
			"useRouteMatch",
			"withRouter",
			"BrowserRouter",
			"HashRouter",
			"Link",
			"NavLink"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "extend",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cookie-parser",
		"expectedNames": [
			"JSONCookie",
			"JSONCookies",
			"signedCookie",
			"signedCookies"
		],
		"detectedNames": [
			"JSONCookie",
			"JSONCookies",
			"signedCookie",
			"signedCookies"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "whatwg-fetch",
		"transpiled": true,
		"expectedNames": [
			"DOMException",
			"Headers",
			"Request",
			"Response",
			"fetch"
		],
		"detectedNames": [
			"DOMException",
			"Headers",
			"Request",
			"Response",
			"fetch"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "babel-preset-env",
		"transpiled": true,
		"expectedNames": [
			"isPluginRequired",
			"transformIncludesAndExcludes"
		],
		"detectedNames": [
			"isPluginRequired",
			"transformIncludesAndExcludes"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-jest",
		"expectedNames": [
			"canInstrument",
			"getCacheKey",
			"process",
			"createTransformer"
		],
		"detectedNames": [],
		"missingNames": [
			"canInstrument",
			"getCacheKey",
			"process",
			"createTransformer"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mysql",
		"expectedNames": [
			"createConnection",
			"createPool",
			"createPoolCluster",
			"createQuery",
			"escape",
			"escapeId",
			"format",
			"raw"
		],
		"detectedNames": [
			"createConnection",
			"createPool",
			"createPoolCluster",
			"createQuery",
			"escape",
			"escapeId",
			"format",
			"raw"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "joi",
		"expectedNames": [
			"_types",
			"alternatives",
			"any",
			"array",
			"boolean",
			"date",
			"function",
			"link",
			"number",
			"object",
			"string",
			"symbol",
			"binary",
			"allow",
			"custom",
			"disallow",
			"equal",
			"exist",
			"forbidden",
			"invalid",
			"not",
			"only",
			"optional",
			"options",
			"prefs",
			"preferences",
			"required",
			"strip",
			"valid",
			"when",
			"ValidationError",
			"version",
			"cache",
			"assert",
			"attempt",
			"build",
			"checkPreferences",
			"compile",
			"defaults",
			"expression",
			"extend",
			"isError",
			"isExpression",
			"isRef",
			"isSchema",
			"in",
			"override",
			"ref",
			"types",
			"alt",
			"bool",
			"func",
			"x",
			"trace",
			"untrace"
		],
		"detectedNames": [],
		"missingNames": [
			"_types",
			"alternatives",
			"any",
			"array",
			"boolean",
			"date",
			"function",
			"link",
			"number",
			"object",
			"string",
			"symbol",
			"binary",
			"allow",
			"custom",
			"disallow",
			"equal",
			"exist",
			"forbidden",
			"invalid",
			"not",
			"only",
			"optional",
			"options",
			"prefs",
			"preferences",
			"required",
			"strip",
			"valid",
			"when",
			"ValidationError",
			"version",
			"cache",
			"assert",
			"attempt",
			"build",
			"checkPreferences",
			"compile",
			"defaults",
			"expression",
			"extend",
			"isError",
			"isExpression",
			"isRef",
			"isSchema",
			"in",
			"override",
			"ref",
			"types",
			"alt",
			"bool",
			"func",
			"x",
			"trace",
			"untrace"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "minimatch",
		"expectedNames": [
			"Minimatch",
			"GLOBSTAR",
			"filter",
			"defaults",
			"braceExpand",
			"makeRe",
			"match"
		],
		"detectedNames": [],
		"missingNames": [
			"Minimatch",
			"GLOBSTAR",
			"filter",
			"defaults",
			"braceExpand",
			"makeRe",
			"match"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-loader",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-uuid",
		"expectedNames": [
			"v1",
			"v4",
			"parse",
			"unparse",
			"BufferClass",
			"_rng",
			"_mathRNG",
			"_nodeRNG",
			"_whatwgRNG"
		],
		"detectedNames": [],
		"missingNames": [
			"v1",
			"v4",
			"parse",
			"unparse",
			"BufferClass",
			"_rng",
			"_mathRNG",
			"_nodeRNG",
			"_whatwgRNG"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "es6-promise",
		"expectedNames": [
			"all",
			"race",
			"resolve",
			"reject",
			"_setScheduler",
			"_setAsap",
			"_asap",
			"polyfill",
			"Promise"
		],
		"detectedNames": [],
		"missingNames": [
			"all",
			"race",
			"resolve",
			"reject",
			"_setScheduler",
			"_setAsap",
			"_asap",
			"polyfill",
			"Promise"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cross-spawn",
		"expectedNames": [
			"spawn",
			"sync",
			"_parse",
			"_enoent"
		],
		"detectedNames": [
			"spawn",
			"sync",
			"_parse",
			"_enoent"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "case-sensitive-paths-webpack-plugin",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "uglify-js",
		"expectedNames": [
			"FILES",
			"AST_Token",
			"AST_Node",
			"AST_Statement",
			"AST_Debugger",
			"AST_Directive",
			"AST_SimpleStatement",
			"AST_Block",
			"AST_BlockStatement",
			"AST_EmptyStatement",
			"AST_StatementWithBody",
			"AST_LabeledStatement",
			"AST_IterationStatement",
			"AST_DWLoop",
			"AST_Do",
			"AST_While",
			"AST_For",
			"AST_ForIn",
			"AST_With",
			"AST_Scope",
			"AST_Toplevel",
			"AST_Lambda",
			"AST_Accessor",
			"AST_Function",
			"AST_Defun",
			"AST_Jump",
			"AST_Exit",
			"AST_Return",
			"AST_Throw",
			"AST_LoopControl",
			"AST_Break",
			"AST_Continue",
			"AST_If",
			"AST_Switch",
			"AST_SwitchBranch",
			"AST_Default",
			"AST_Case",
			"AST_Try",
			"AST_Catch",
			"AST_Finally",
			"AST_Definitions",
			"AST_Var",
			"AST_VarDef",
			"AST_Call",
			"AST_New",
			"AST_Sequence",
			"AST_PropAccess",
			"AST_Dot",
			"AST_Sub",
			"AST_Unary",
			"AST_UnaryPrefix",
			"AST_UnaryPostfix",
			"AST_Binary",
			"AST_Conditional",
			"AST_Assign",
			"AST_Array",
			"AST_Object",
			"AST_ObjectProperty",
			"AST_ObjectKeyVal",
			"AST_ObjectSetter",
			"AST_ObjectGetter",
			"AST_Symbol",
			"AST_SymbolAccessor",
			"AST_SymbolDeclaration",
			"AST_SymbolVar",
			"AST_SymbolFunarg",
			"AST_SymbolDefun",
			"AST_SymbolLambda",
			"AST_SymbolCatch",
			"AST_Label",
			"AST_SymbolRef",
			"AST_LabelRef",
			"AST_This",
			"AST_Constant",
			"AST_String",
			"AST_Number",
			"AST_RegExp",
			"AST_Atom",
			"AST_Null",
			"AST_NaN",
			"AST_Undefined",
			"AST_Hole",
			"AST_Infinity",
			"AST_Boolean",
			"AST_False",
			"AST_True",
			"Dictionary",
			"List",
			"minify",
			"parse",
			"push_uniq",
			"TreeTransformer",
			"TreeWalker",
			"describe_ast",
			"default_options"
		],
		"detectedNames": [
			"FILES",
			"default_options"
		],
		"missingNames": [
			"AST_Token",
			"AST_Node",
			"AST_Statement",
			"AST_Debugger",
			"AST_Directive",
			"AST_SimpleStatement",
			"AST_Block",
			"AST_BlockStatement",
			"AST_EmptyStatement",
			"AST_StatementWithBody",
			"AST_LabeledStatement",
			"AST_IterationStatement",
			"AST_DWLoop",
			"AST_Do",
			"AST_While",
			"AST_For",
			"AST_ForIn",
			"AST_With",
			"AST_Scope",
			"AST_Toplevel",
			"AST_Lambda",
			"AST_Accessor",
			"AST_Function",
			"AST_Defun",
			"AST_Jump",
			"AST_Exit",
			"AST_Return",
			"AST_Throw",
			"AST_LoopControl",
			"AST_Break",
			"AST_Continue",
			"AST_If",
			"AST_Switch",
			"AST_SwitchBranch",
			"AST_Default",
			"AST_Case",
			"AST_Try",
			"AST_Catch",
			"AST_Finally",
			"AST_Definitions",
			"AST_Var",
			"AST_VarDef",
			"AST_Call",
			"AST_New",
			"AST_Sequence",
			"AST_PropAccess",
			"AST_Dot",
			"AST_Sub",
			"AST_Unary",
			"AST_UnaryPrefix",
			"AST_UnaryPostfix",
			"AST_Binary",
			"AST_Conditional",
			"AST_Assign",
			"AST_Array",
			"AST_Object",
			"AST_ObjectProperty",
			"AST_ObjectKeyVal",
			"AST_ObjectSetter",
			"AST_ObjectGetter",
			"AST_Symbol",
			"AST_SymbolAccessor",
			"AST_SymbolDeclaration",
			"AST_SymbolVar",
			"AST_SymbolFunarg",
			"AST_SymbolDefun",
			"AST_SymbolLambda",
			"AST_SymbolCatch",
			"AST_Label",
			"AST_SymbolRef",
			"AST_LabelRef",
			"AST_This",
			"AST_Constant",
			"AST_String",
			"AST_Number",
			"AST_RegExp",
			"AST_Atom",
			"AST_Null",
			"AST_NaN",
			"AST_Undefined",
			"AST_Hole",
			"AST_Infinity",
			"AST_Boolean",
			"AST_False",
			"AST_True",
			"Dictionary",
			"List",
			"minify",
			"parse",
			"push_uniq",
			"TreeTransformer",
			"TreeWalker",
			"describe_ast"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cors",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-flowtype",
		"expectedNames": [
			"configs",
			"rules",
			"rulesConfig"
		],
		"detectedNames": [],
		"missingNames": [
			"configs",
			"rules",
			"rulesConfig"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-router",
		"expectedNames": [
			"MemoryRouter",
			"Prompt",
			"Redirect",
			"Route",
			"Router",
			"StaticRouter",
			"Switch",
			"__HistoryContext",
			"__RouterContext",
			"generatePath",
			"matchPath",
			"useHistory",
			"useLocation",
			"useParams",
			"useRouteMatch",
			"withRouter"
		],
		"detectedNames": [
			"MemoryRouter",
			"Prompt",
			"Redirect",
			"Route",
			"Router",
			"StaticRouter",
			"Switch",
			"__HistoryContext",
			"__RouterContext",
			"generatePath",
			"matchPath",
			"useHistory",
			"useLocation",
			"useParams",
			"useRouteMatch",
			"withRouter"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "@babel/preset-env",
		"transpiled": true,
		"expectedNames": [
			"isPluginRequired",
			"transformIncludesAndExcludes",
			"getModulesPluginNames",
			"getPolyfillPlugins"
		],
		"detectedNames": [
			"isPluginRequired",
			"transformIncludesAndExcludes",
			"getModulesPluginNames",
			"getPolyfillPlugins"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "deepmerge",
		"expectedNames": [
			"all"
		],
		"detectedNames": [],
		"missingNames": [
			"all"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "socket.io-client",
		"expectedNames": [
			"managers",
			"protocol",
			"connect",
			"Manager",
			"Socket"
		],
		"detectedNames": [
			"managers",
			"protocol",
			"connect",
			"Manager",
			"Socket"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "npm",
		"expectedNames": [
			"_events",
			"_eventsCount",
			"_maxListeners",
			"config",
			"commands",
			"limit",
			"lockfileVersion",
			"rollbacks",
			"name",
			"version",
			"fullList",
			"deref",
			"load",
			"prefix",
			"bin",
			"dir",
			"globalDir",
			"cache",
			"tmp",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"detectedNames": [],
		"missingNames": [
			"_events",
			"_eventsCount",
			"_maxListeners",
			"config",
			"commands",
			"limit",
			"lockfileVersion",
			"rollbacks",
			"name",
			"version",
			"fullList",
			"deref",
			"load",
			"prefix",
			"bin",
			"dir",
			"globalDir",
			"cache",
			"tmp",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "webpack-manifest-plugin",
		"expectedNames": [
			"getCompilerHooks"
		],
		"detectedNames": [],
		"missingNames": [
			"getCompilerHooks"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "koa",
		"expectedNames": [
			"HttpError",
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"detectedNames": [
			"HttpError"
		],
		"missingNames": [
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "isomorphic-fetch",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "del",
		"expectedNames": [
			"sync"
		],
		"detectedNames": [
			"sync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "postcss-flexbugs-fixes",
		"expectedNames": [
			"process"
		],
		"detectedNames": [],
		"missingNames": [
			"process"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "compression",
		"expectedNames": [
			"filter"
		],
		"detectedNames": [
			"filter"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "update-notifier",
		"expectedNames": [
			"UpdateNotifier"
		],
		"detectedNames": [
			"UpdateNotifier"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-preset-react-app",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jade",
		"expectedNames": [
			"selfClosing",
			"doctypes",
			"filters",
			"utils",
			"Compiler",
			"Parser",
			"Lexer",
			"nodes",
			"runtime",
			"cache",
			"compile",
			"compileClientWithDependenciesTracked",
			"compileClient",
			"compileFile",
			"render",
			"renderFile",
			"compileFileClient",
			"__express"
		],
		"detectedNames": [
			"selfClosing",
			"doctypes",
			"filters",
			"utils",
			"Compiler",
			"Parser",
			"Lexer",
			"nodes",
			"runtime",
			"cache",
			"compile",
			"compileClientWithDependenciesTracked",
			"compileClient",
			"compileFile",
			"render",
			"renderFile",
			"compileFileClient",
			"__express"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "prompt",
		"expectedNames": [
			"logger",
			"started",
			"paused",
			"stopped",
			"allowEmpty",
			"message",
			"delimiter",
			"colors",
			"properties",
			"start",
			"pause",
			"stop",
			"resume",
			"history",
			"get",
			"confirm",
			"getInput",
			"_performValidation",
			"addProperties",
			"_remember",
			"_events",
			"_eventsCount",
			"_maxListeners",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"detectedNames": [],
		"missingNames": [
			"logger",
			"started",
			"paused",
			"stopped",
			"allowEmpty",
			"message",
			"delimiter",
			"colors",
			"properties",
			"start",
			"pause",
			"stop",
			"resume",
			"history",
			"get",
			"confirm",
			"getInput",
			"_performValidation",
			"addProperties",
			"_remember",
			"_events",
			"_eventsCount",
			"_maxListeners",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-rename",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "underscore.string",
		"expectedNames": [
			"VERSION",
			"isBlank",
			"stripTags",
			"capitalize",
			"decapitalize",
			"chop",
			"trim",
			"clean",
			"cleanDiacritics",
			"count",
			"chars",
			"swapCase",
			"escapeHTML",
			"unescapeHTML",
			"splice",
			"insert",
			"replaceAll",
			"include",
			"join",
			"lines",
			"dedent",
			"reverse",
			"startsWith",
			"endsWith",
			"pred",
			"succ",
			"titleize",
			"camelize",
			"underscored",
			"dasherize",
			"classify",
			"humanize",
			"ltrim",
			"rtrim",
			"truncate",
			"prune",
			"words",
			"pad",
			"lpad",
			"rpad",
			"lrpad",
			"sprintf",
			"vsprintf",
			"toNumber",
			"numberFormat",
			"strRight",
			"strRightBack",
			"strLeft",
			"strLeftBack",
			"toSentence",
			"toSentenceSerial",
			"slugify",
			"surround",
			"quote",
			"unquote",
			"repeat",
			"naturalCmp",
			"levenshtein",
			"toBoolean",
			"exports",
			"escapeRegExp",
			"wrap",
			"map",
			"strip",
			"lstrip",
			"rstrip",
			"center",
			"rjust",
			"ljust",
			"contains",
			"q",
			"toBool",
			"camelcase",
			"mapChars"
		],
		"detectedNames": [],
		"missingNames": [
			"VERSION",
			"isBlank",
			"stripTags",
			"capitalize",
			"decapitalize",
			"chop",
			"trim",
			"clean",
			"cleanDiacritics",
			"count",
			"chars",
			"swapCase",
			"escapeHTML",
			"unescapeHTML",
			"splice",
			"insert",
			"replaceAll",
			"include",
			"join",
			"lines",
			"dedent",
			"reverse",
			"startsWith",
			"endsWith",
			"pred",
			"succ",
			"titleize",
			"camelize",
			"underscored",
			"dasherize",
			"classify",
			"humanize",
			"ltrim",
			"rtrim",
			"truncate",
			"prune",
			"words",
			"pad",
			"lpad",
			"rpad",
			"lrpad",
			"sprintf",
			"vsprintf",
			"toNumber",
			"numberFormat",
			"strRight",
			"strRightBack",
			"strLeft",
			"strLeftBack",
			"toSentence",
			"toSentenceSerial",
			"slugify",
			"surround",
			"quote",
			"unquote",
			"repeat",
			"naturalCmp",
			"levenshtein",
			"toBoolean",
			"exports",
			"escapeRegExp",
			"wrap",
			"map",
			"strip",
			"lstrip",
			"rstrip",
			"center",
			"rjust",
			"ljust",
			"contains",
			"q",
			"toBool",
			"camelcase",
			"mapChars"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "graphql",
		"transpiled": true,
		"expectedNames": [
			"version",
			"versionInfo",
			"graphql",
			"graphqlSync",
			"GraphQLSchema",
			"GraphQLDirective",
			"GraphQLScalarType",
			"GraphQLObjectType",
			"GraphQLInterfaceType",
			"GraphQLUnionType",
			"GraphQLEnumType",
			"GraphQLInputObjectType",
			"GraphQLList",
			"GraphQLNonNull",
			"specifiedScalarTypes",
			"GraphQLInt",
			"GraphQLFloat",
			"GraphQLString",
			"GraphQLBoolean",
			"GraphQLID",
			"specifiedDirectives",
			"GraphQLIncludeDirective",
			"GraphQLSkipDirective",
			"GraphQLDeprecatedDirective",
			"GraphQLSpecifiedByDirective",
			"TypeKind",
			"DEFAULT_DEPRECATION_REASON",
			"introspectionTypes",
			"__Schema",
			"__Directive",
			"__DirectiveLocation",
			"__Type",
			"__Field",
			"__InputValue",
			"__EnumValue",
			"__TypeKind",
			"SchemaMetaFieldDef",
			"TypeMetaFieldDef",
			"TypeNameMetaFieldDef",
			"isSchema",
			"isDirective",
			"isType",
			"isScalarType",
			"isObjectType",
			"isInterfaceType",
			"isUnionType",
			"isEnumType",
			"isInputObjectType",
			"isListType",
			"isNonNullType",
			"isInputType",
			"isOutputType",
			"isLeafType",
			"isCompositeType",
			"isAbstractType",
			"isWrappingType",
			"isNullableType",
			"isNamedType",
			"isRequiredArgument",
			"isRequiredInputField",
			"isSpecifiedScalarType",
			"isIntrospectionType",
			"isSpecifiedDirective",
			"assertSchema",
			"assertDirective",
			"assertType",
			"assertScalarType",
			"assertObjectType",
			"assertInterfaceType",
			"assertUnionType",
			"assertEnumType",
			"assertInputObjectType",
			"assertListType",
			"assertNonNullType",
			"assertInputType",
			"assertOutputType",
			"assertLeafType",
			"assertCompositeType",
			"assertAbstractType",
			"assertWrappingType",
			"assertNullableType",
			"assertNamedType",
			"getNullableType",
			"getNamedType",
			"validateSchema",
			"assertValidSchema",
			"Token",
			"Source",
			"Location",
			"getLocation",
			"printLocation",
			"printSourceLocation",
			"Lexer",
			"TokenKind",
			"parse",
			"parseValue",
			"parseType",
			"print",
			"visit",
			"visitInParallel",
			"getVisitFn",
			"BREAK",
			"Kind",
			"DirectiveLocation",
			"isDefinitionNode",
			"isExecutableDefinitionNode",
			"isSelectionNode",
			"isValueNode",
			"isTypeNode",
			"isTypeSystemDefinitionNode",
			"isTypeDefinitionNode",
			"isTypeSystemExtensionNode",
			"isTypeExtensionNode",
			"execute",
			"executeSync",
			"defaultFieldResolver",
			"defaultTypeResolver",
			"responsePathAsArray",
			"getDirectiveValues",
			"subscribe",
			"createSourceEventStream",
			"validate",
			"ValidationContext",
			"specifiedRules",
			"ExecutableDefinitionsRule",
			"FieldsOnCorrectTypeRule",
			"FragmentsOnCompositeTypesRule",
			"KnownArgumentNamesRule",
			"KnownDirectivesRule",
			"KnownFragmentNamesRule",
			"KnownTypeNamesRule",
			"LoneAnonymousOperationRule",
			"NoFragmentCyclesRule",
			"NoUndefinedVariablesRule",
			"NoUnusedFragmentsRule",
			"NoUnusedVariablesRule",
			"OverlappingFieldsCanBeMergedRule",
			"PossibleFragmentSpreadsRule",
			"ProvidedRequiredArgumentsRule",
			"ScalarLeafsRule",
			"SingleFieldSubscriptionsRule",
			"UniqueArgumentNamesRule",
			"UniqueDirectivesPerLocationRule",
			"UniqueFragmentNamesRule",
			"UniqueInputFieldNamesRule",
			"UniqueOperationNamesRule",
			"UniqueVariableNamesRule",
			"ValuesOfCorrectTypeRule",
			"VariablesAreInputTypesRule",
			"VariablesInAllowedPositionRule",
			"LoneSchemaDefinitionRule",
			"UniqueOperationTypesRule",
			"UniqueTypeNamesRule",
			"UniqueEnumValueNamesRule",
			"UniqueFieldDefinitionNamesRule",
			"UniqueDirectiveNamesRule",
			"PossibleTypeExtensionsRule",
			"NoDeprecatedCustomRule",
			"NoSchemaIntrospectionCustomRule",
			"GraphQLError",
			"syntaxError",
			"locatedError",
			"printError",
			"formatError",
			"getIntrospectionQuery",
			"getOperationAST",
			"getOperationRootType",
			"introspectionFromSchema",
			"buildClientSchema",
			"buildASTSchema",
			"buildSchema",
			"getDescription",
			"extendSchema",
			"lexicographicSortSchema",
			"printSchema",
			"printType",
			"printIntrospectionSchema",
			"typeFromAST",
			"valueFromAST",
			"valueFromASTUntyped",
			"astFromValue",
			"TypeInfo",
			"visitWithTypeInfo",
			"coerceInputValue",
			"concatAST",
			"separateOperations",
			"stripIgnoredCharacters",
			"isEqualType",
			"isTypeSubTypeOf",
			"doTypesOverlap",
			"assertValidName",
			"isValidNameError",
			"BreakingChangeType",
			"DangerousChangeType",
			"findBreakingChanges",
			"findDangerousChanges",
			"findDeprecatedUsages"
		],
		"detectedNames": [
			"version",
			"versionInfo",
			"graphql",
			"graphqlSync",
			"GraphQLSchema",
			"GraphQLDirective",
			"GraphQLScalarType",
			"GraphQLObjectType",
			"GraphQLInterfaceType",
			"GraphQLUnionType",
			"GraphQLEnumType",
			"GraphQLInputObjectType",
			"GraphQLList",
			"GraphQLNonNull",
			"specifiedScalarTypes",
			"GraphQLInt",
			"GraphQLFloat",
			"GraphQLString",
			"GraphQLBoolean",
			"GraphQLID",
			"specifiedDirectives",
			"GraphQLIncludeDirective",
			"GraphQLSkipDirective",
			"GraphQLDeprecatedDirective",
			"GraphQLSpecifiedByDirective",
			"TypeKind",
			"DEFAULT_DEPRECATION_REASON",
			"introspectionTypes",
			"__Schema",
			"__Directive",
			"__DirectiveLocation",
			"__Type",
			"__Field",
			"__InputValue",
			"__EnumValue",
			"__TypeKind",
			"SchemaMetaFieldDef",
			"TypeMetaFieldDef",
			"TypeNameMetaFieldDef",
			"isSchema",
			"isDirective",
			"isType",
			"isScalarType",
			"isObjectType",
			"isInterfaceType",
			"isUnionType",
			"isEnumType",
			"isInputObjectType",
			"isListType",
			"isNonNullType",
			"isInputType",
			"isOutputType",
			"isLeafType",
			"isCompositeType",
			"isAbstractType",
			"isWrappingType",
			"isNullableType",
			"isNamedType",
			"isRequiredArgument",
			"isRequiredInputField",
			"isSpecifiedScalarType",
			"isIntrospectionType",
			"isSpecifiedDirective",
			"assertSchema",
			"assertDirective",
			"assertType",
			"assertScalarType",
			"assertObjectType",
			"assertInterfaceType",
			"assertUnionType",
			"assertEnumType",
			"assertInputObjectType",
			"assertListType",
			"assertNonNullType",
			"assertInputType",
			"assertOutputType",
			"assertLeafType",
			"assertCompositeType",
			"assertAbstractType",
			"assertWrappingType",
			"assertNullableType",
			"assertNamedType",
			"getNullableType",
			"getNamedType",
			"validateSchema",
			"assertValidSchema",
			"Token",
			"Source",
			"Location",
			"getLocation",
			"printLocation",
			"printSourceLocation",
			"Lexer",
			"TokenKind",
			"parse",
			"parseValue",
			"parseType",
			"print",
			"visit",
			"visitInParallel",
			"getVisitFn",
			"BREAK",
			"Kind",
			"DirectiveLocation",
			"isDefinitionNode",
			"isExecutableDefinitionNode",
			"isSelectionNode",
			"isValueNode",
			"isTypeNode",
			"isTypeSystemDefinitionNode",
			"isTypeDefinitionNode",
			"isTypeSystemExtensionNode",
			"isTypeExtensionNode",
			"execute",
			"executeSync",
			"defaultFieldResolver",
			"defaultTypeResolver",
			"responsePathAsArray",
			"getDirectiveValues",
			"subscribe",
			"createSourceEventStream",
			"validate",
			"ValidationContext",
			"specifiedRules",
			"ExecutableDefinitionsRule",
			"FieldsOnCorrectTypeRule",
			"FragmentsOnCompositeTypesRule",
			"KnownArgumentNamesRule",
			"KnownDirectivesRule",
			"KnownFragmentNamesRule",
			"KnownTypeNamesRule",
			"LoneAnonymousOperationRule",
			"NoFragmentCyclesRule",
			"NoUndefinedVariablesRule",
			"NoUnusedFragmentsRule",
			"NoUnusedVariablesRule",
			"OverlappingFieldsCanBeMergedRule",
			"PossibleFragmentSpreadsRule",
			"ProvidedRequiredArgumentsRule",
			"ScalarLeafsRule",
			"SingleFieldSubscriptionsRule",
			"UniqueArgumentNamesRule",
			"UniqueDirectivesPerLocationRule",
			"UniqueFragmentNamesRule",
			"UniqueInputFieldNamesRule",
			"UniqueOperationNamesRule",
			"UniqueVariableNamesRule",
			"ValuesOfCorrectTypeRule",
			"VariablesAreInputTypesRule",
			"VariablesInAllowedPositionRule",
			"LoneSchemaDefinitionRule",
			"UniqueOperationTypesRule",
			"UniqueTypeNamesRule",
			"UniqueEnumValueNamesRule",
			"UniqueFieldDefinitionNamesRule",
			"UniqueDirectiveNamesRule",
			"PossibleTypeExtensionsRule",
			"NoDeprecatedCustomRule",
			"NoSchemaIntrospectionCustomRule",
			"GraphQLError",
			"syntaxError",
			"locatedError",
			"printError",
			"formatError",
			"getIntrospectionQuery",
			"getOperationAST",
			"getOperationRootType",
			"introspectionFromSchema",
			"buildClientSchema",
			"buildASTSchema",
			"buildSchema",
			"getDescription",
			"extendSchema",
			"lexicographicSortSchema",
			"printSchema",
			"printType",
			"printIntrospectionSchema",
			"typeFromAST",
			"valueFromAST",
			"valueFromASTUntyped",
			"astFromValue",
			"TypeInfo",
			"visitWithTypeInfo",
			"coerceInputValue",
			"concatAST",
			"separateOperations",
			"stripIgnoredCharacters",
			"isEqualType",
			"isTypeSubTypeOf",
			"doTypesOverlap",
			"assertValidName",
			"isValidNameError",
			"BreakingChangeType",
			"DangerousChangeType",
			"findBreakingChanges",
			"findDangerousChanges",
			"findDeprecatedUsages"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "execa",
		"expectedNames": [
			"sync",
			"command",
			"commandSync",
			"node"
		],
		"detectedNames": [
			"sync",
			"command",
			"commandSync",
			"node"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "browserify",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "opn",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "validator",
		"expectedNames": [
			"version",
			"toDate",
			"toFloat",
			"toInt",
			"toBoolean",
			"equals",
			"contains",
			"matches",
			"isEmail",
			"isURL",
			"isMACAddress",
			"isIP",
			"isIPRange",
			"isFQDN",
			"isBoolean",
			"isIBAN",
			"isBIC",
			"isAlpha",
			"isAlphaLocales",
			"isAlphanumeric",
			"isAlphanumericLocales",
			"isNumeric",
			"isPassportNumber",
			"isPort",
			"isLowercase",
			"isUppercase",
			"isAscii",
			"isFullWidth",
			"isHalfWidth",
			"isVariableWidth",
			"isMultibyte",
			"isSemVer",
			"isSurrogatePair",
			"isInt",
			"isIMEI",
			"isFloat",
			"isFloatLocales",
			"isDecimal",
			"isHexadecimal",
			"isOctal",
			"isDivisibleBy",
			"isHexColor",
			"isRgbColor",
			"isHSL",
			"isISRC",
			"isMD5",
			"isHash",
			"isJWT",
			"isJSON",
			"isEmpty",
			"isLength",
			"isLocale",
			"isByteLength",
			"isUUID",
			"isMongoId",
			"isAfter",
			"isBefore",
			"isIn",
			"isCreditCard",
			"isIdentityCard",
			"isEAN",
			"isISIN",
			"isISBN",
			"isISSN",
			"isMobilePhone",
			"isMobilePhoneLocales",
			"isPostalCode",
			"isPostalCodeLocales",
			"isEthereumAddress",
			"isCurrency",
			"isBtcAddress",
			"isISO8601",
			"isRFC3339",
			"isISO31661Alpha2",
			"isISO31661Alpha3",
			"isBase32",
			"isBase64",
			"isDataURI",
			"isMagnetURI",
			"isMimeType",
			"isLatLong",
			"ltrim",
			"rtrim",
			"trim",
			"escape",
			"unescape",
			"stripLow",
			"whitelist",
			"blacklist",
			"isWhitelisted",
			"normalizeEmail",
			"toString",
			"isSlug",
			"isTaxID",
			"isDate"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"toDate",
			"toFloat",
			"toInt",
			"toBoolean",
			"equals",
			"contains",
			"matches",
			"isEmail",
			"isURL",
			"isMACAddress",
			"isIP",
			"isIPRange",
			"isFQDN",
			"isBoolean",
			"isIBAN",
			"isBIC",
			"isAlpha",
			"isAlphaLocales",
			"isAlphanumeric",
			"isAlphanumericLocales",
			"isNumeric",
			"isPassportNumber",
			"isPort",
			"isLowercase",
			"isUppercase",
			"isAscii",
			"isFullWidth",
			"isHalfWidth",
			"isVariableWidth",
			"isMultibyte",
			"isSemVer",
			"isSurrogatePair",
			"isInt",
			"isIMEI",
			"isFloat",
			"isFloatLocales",
			"isDecimal",
			"isHexadecimal",
			"isOctal",
			"isDivisibleBy",
			"isHexColor",
			"isRgbColor",
			"isHSL",
			"isISRC",
			"isMD5",
			"isHash",
			"isJWT",
			"isJSON",
			"isEmpty",
			"isLength",
			"isLocale",
			"isByteLength",
			"isUUID",
			"isMongoId",
			"isAfter",
			"isBefore",
			"isIn",
			"isCreditCard",
			"isIdentityCard",
			"isEAN",
			"isISIN",
			"isISBN",
			"isISSN",
			"isMobilePhone",
			"isMobilePhoneLocales",
			"isPostalCode",
			"isPostalCodeLocales",
			"isEthereumAddress",
			"isCurrency",
			"isBtcAddress",
			"isISO8601",
			"isRFC3339",
			"isISO31661Alpha2",
			"isISO31661Alpha3",
			"isBase32",
			"isBase64",
			"isDataURI",
			"isMagnetURI",
			"isMimeType",
			"isLatLong",
			"ltrim",
			"rtrim",
			"trim",
			"escape",
			"unescape",
			"stripLow",
			"whitelist",
			"blacklist",
			"isWhitelisted",
			"normalizeEmail",
			"toString",
			"isSlug",
			"isTaxID",
			"isDate"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-config-react-app",
		"expectedNames": [
			"root",
			"parser",
			"plugins",
			"env",
			"parserOptions",
			"settings",
			"overrides",
			"rules"
		],
		"detectedNames": [
			"root"
		],
		"missingNames": [
			"parser",
			"plugins",
			"env",
			"parserOptions",
			"settings",
			"overrides",
			"rules"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vuex",
		"expectedNames": [
			"Store",
			"install",
			"version",
			"mapState",
			"mapMutations",
			"mapGetters",
			"mapActions",
			"createNamespacedHelpers",
			"createLogger"
		],
		"detectedNames": [],
		"missingNames": [
			"Store",
			"install",
			"version",
			"mapState",
			"mapMutations",
			"mapGetters",
			"mapActions",
			"createNamespacedHelpers",
			"createLogger"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "prettier",
		"expectedNames": [
			"formatWithCursor",
			"format",
			"check",
			"doc",
			"resolveConfig",
			"resolveConfigFile",
			"clearConfigCache",
			"getFileInfo",
			"getSupportInfo",
			"version",
			"util",
			"__internal",
			"__debug"
		],
		"detectedNames": [],
		"missingNames": [
			"formatWithCursor",
			"format",
			"check",
			"doc",
			"resolveConfig",
			"resolveConfigFile",
			"clearConfigCache",
			"getFileInfo",
			"getSupportInfo",
			"version",
			"util",
			"__internal",
			"__debug"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "invariant",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jsdom",
		"expectedNames": [
			"JSDOM",
			"VirtualConsole",
			"CookieJar",
			"ResourceLoader",
			"toughCookie"
		],
		"detectedNames": [
			"JSDOM",
			"VirtualConsole",
			"CookieJar",
			"ResourceLoader",
			"toughCookie"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "redux-thunk",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mini-css-extract-plugin",
		"expectedNames": [
			"loader"
		],
		"detectedNames": [],
		"missingNames": [
			"loader"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "globby",
		"expectedNames": [
			"sync",
			"stream",
			"generateGlobTasks",
			"hasMagic",
			"gitignore"
		],
		"detectedNames": [
			"sync",
			"stream",
			"generateGlobTasks",
			"hasMagic",
			"gitignore"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "pg",
		"expectedNames": [
			"defaults",
			"Client",
			"Query",
			"Pool",
			"_pools",
			"Connection",
			"types"
		],
		"detectedNames": [],
		"missingNames": [
			"defaults",
			"Client",
			"Query",
			"Pool",
			"_pools",
			"Connection",
			"types"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "got",
		"transpiled": true,
		"expectedNames": [
			"extend",
			"paginate",
			"stream",
			"get",
			"post",
			"put",
			"patch",
			"head",
			"delete",
			"RequestError",
			"CacheError",
			"ReadError",
			"HTTPError",
			"MaxRedirectsError",
			"TimeoutError",
			"ParseError",
			"CancelError",
			"UnsupportedProtocolError",
			"UploadError",
			"defaults",
			"mergeOptions"
		],
		"detectedNames": [
			"RequestError",
			"CacheError",
			"ReadError",
			"HTTPError",
			"MaxRedirectsError",
			"TimeoutError",
			"ParseError",
			"CancelError",
			"UnsupportedProtocolError",
			"UploadError"
		],
		"missingNames": [
			"extend",
			"paginate",
			"stream",
			"get",
			"post",
			"put",
			"patch",
			"head",
			"delete",
			"defaults",
			"mergeOptions"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "ajv",
		"expectedNames": [
			"ValidationError",
			"MissingRefError",
			"$dataMetaSchema"
		],
		"detectedNames": [],
		"missingNames": [
			"ValidationError",
			"MissingRefError",
			"$dataMetaSchema"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "xtend",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ember-cli-htmlbars",
		"expectedNames": [
			"TemplateCompilerPlugin"
		],
		"detectedNames": [
			"TemplateCompilerPlugin"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "babel-plugin-transform-runtime",
		"transpiled": true,
		"expectedNames": [
			"definitions"
		],
		"detectedNames": [
			"definitions"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nodemailer",
		"expectedNames": [
			"createTransport",
			"createTestAccount",
			"getTestMessageUrl"
		],
		"detectedNames": [
			"createTransport",
			"createTestAccount",
			"getTestMessageUrl"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "source-map-support",
		"expectedNames": [
			"wrapCallSite",
			"getErrorSource",
			"mapSourcePosition",
			"retrieveSourceMap",
			"install",
			"resetRetrieveHandlers"
		],
		"detectedNames": [
			"wrapCallSite",
			"getErrorSource",
			"mapSourcePosition",
			"retrieveSourceMap",
			"install",
			"resetRetrieveHandlers"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "express-session",
		"expectedNames": [
			"Store",
			"Cookie",
			"Session",
			"MemoryStore"
		],
		"detectedNames": [
			"Store",
			"Cookie",
			"Session",
			"MemoryStore"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "d3",
		"transpiled": true,
		"expectedNames": [
			"Adder",
			"ascending",
			"bin",
			"bisect",
			"bisectCenter",
			"bisectLeft",
			"bisectRight",
			"bisector",
			"count",
			"cross",
			"cumsum",
			"descending",
			"deviation",
			"extent",
			"fsum",
			"greatest",
			"greatestIndex",
			"group",
			"groups",
			"histogram",
			"index",
			"indexes",
			"least",
			"leastIndex",
			"max",
			"maxIndex",
			"mean",
			"median",
			"merge",
			"min",
			"minIndex",
			"pairs",
			"permute",
			"quantile",
			"quantileSorted",
			"quickselect",
			"range",
			"rollup",
			"rollups",
			"scan",
			"shuffle",
			"shuffler",
			"sum",
			"thresholdFreedmanDiaconis",
			"thresholdScott",
			"thresholdSturges",
			"tickIncrement",
			"tickStep",
			"ticks",
			"transpose",
			"variance",
			"zip",
			"axisBottom",
			"axisLeft",
			"axisRight",
			"axisTop",
			"brush",
			"brushSelection",
			"brushX",
			"brushY",
			"chord",
			"chordDirected",
			"chordTranspose",
			"ribbon",
			"ribbonArrow",
			"color",
			"cubehelix",
			"gray",
			"hcl",
			"hsl",
			"lab",
			"lch",
			"rgb",
			"contourDensity",
			"contours",
			"Delaunay",
			"Voronoi",
			"dispatch",
			"drag",
			"dragDisable",
			"dragEnable",
			"autoType",
			"csvFormat",
			"csvFormatBody",
			"csvFormatRow",
			"csvFormatRows",
			"csvFormatValue",
			"csvParse",
			"csvParseRows",
			"dsvFormat",
			"tsvFormat",
			"tsvFormatBody",
			"tsvFormatRow",
			"tsvFormatRows",
			"tsvFormatValue",
			"tsvParse",
			"tsvParseRows",
			"easeBack",
			"easeBackIn",
			"easeBackInOut",
			"easeBackOut",
			"easeBounce",
			"easeBounceIn",
			"easeBounceInOut",
			"easeBounceOut",
			"easeCircle",
			"easeCircleIn",
			"easeCircleInOut",
			"easeCircleOut",
			"easeCubic",
			"easeCubicIn",
			"easeCubicInOut",
			"easeCubicOut",
			"easeElastic",
			"easeElasticIn",
			"easeElasticInOut",
			"easeElasticOut",
			"easeExp",
			"easeExpIn",
			"easeExpInOut",
			"easeExpOut",
			"easeLinear",
			"easePoly",
			"easePolyIn",
			"easePolyInOut",
			"easePolyOut",
			"easeQuad",
			"easeQuadIn",
			"easeQuadInOut",
			"easeQuadOut",
			"easeSin",
			"easeSinIn",
			"easeSinInOut",
			"easeSinOut",
			"blob",
			"buffer",
			"csv",
			"dsv",
			"html",
			"image",
			"json",
			"svg",
			"text",
			"tsv",
			"xml",
			"forceCenter",
			"forceCollide",
			"forceLink",
			"forceManyBody",
			"forceRadial",
			"forceSimulation",
			"forceX",
			"forceY",
			"format",
			"formatPrefix",
			"FormatSpecifier",
			"formatDefaultLocale",
			"formatLocale",
			"formatSpecifier",
			"precisionFixed",
			"precisionPrefix",
			"precisionRound",
			"geoAlbers",
			"geoAlbersUsa",
			"geoArea",
			"geoAzimuthalEqualArea",
			"geoAzimuthalEqualAreaRaw",
			"geoAzimuthalEquidistant",
			"geoAzimuthalEquidistantRaw",
			"geoBounds",
			"geoCentroid",
			"geoCircle",
			"geoClipAntimeridian",
			"geoClipCircle",
			"geoClipExtent",
			"geoClipRectangle",
			"geoConicConformal",
			"geoConicConformalRaw",
			"geoConicEqualArea",
			"geoConicEqualAreaRaw",
			"geoConicEquidistant",
			"geoConicEquidistantRaw",
			"geoContains",
			"geoDistance",
			"geoEqualEarth",
			"geoEqualEarthRaw",
			"geoEquirectangular",
			"geoEquirectangularRaw",
			"geoGnomonic",
			"geoGnomonicRaw",
			"geoGraticule",
			"geoGraticule10",
			"geoIdentity",
			"geoInterpolate",
			"geoLength",
			"geoMercator",
			"geoMercatorRaw",
			"geoNaturalEarth1",
			"geoNaturalEarth1Raw",
			"geoOrthographic",
			"geoOrthographicRaw",
			"geoPath",
			"geoProjection",
			"geoProjectionMutator",
			"geoRotation",
			"geoStereographic",
			"geoStereographicRaw",
			"geoStream",
			"geoTransform",
			"geoTransverseMercator",
			"geoTransverseMercatorRaw",
			"cluster",
			"hierarchy",
			"pack",
			"packEnclose",
			"packSiblings",
			"partition",
			"stratify",
			"tree",
			"treemap",
			"treemapBinary",
			"treemapDice",
			"treemapResquarify",
			"treemapSlice",
			"treemapSliceDice",
			"treemapSquarify",
			"interpolate",
			"interpolateArray",
			"interpolateBasis",
			"interpolateBasisClosed",
			"interpolateCubehelix",
			"interpolateCubehelixLong",
			"interpolateDate",
			"interpolateDiscrete",
			"interpolateHcl",
			"interpolateHclLong",
			"interpolateHsl",
			"interpolateHslLong",
			"interpolateHue",
			"interpolateLab",
			"interpolateNumber",
			"interpolateNumberArray",
			"interpolateObject",
			"interpolateRgb",
			"interpolateRgbBasis",
			"interpolateRgbBasisClosed",
			"interpolateRound",
			"interpolateString",
			"interpolateTransformCss",
			"interpolateTransformSvg",
			"interpolateZoom",
			"piecewise",
			"quantize",
			"path",
			"polygonArea",
			"polygonCentroid",
			"polygonContains",
			"polygonHull",
			"polygonLength",
			"quadtree",
			"randomBates",
			"randomBernoulli",
			"randomBeta",
			"randomBinomial",
			"randomCauchy",
			"randomExponential",
			"randomGamma",
			"randomGeometric",
			"randomInt",
			"randomIrwinHall",
			"randomLcg",
			"randomLogNormal",
			"randomLogistic",
			"randomNormal",
			"randomPareto",
			"randomPoisson",
			"randomUniform",
			"randomWeibull",
			"scaleBand",
			"scaleDiverging",
			"scaleDivergingLog",
			"scaleDivergingPow",
			"scaleDivergingSqrt",
			"scaleDivergingSymlog",
			"scaleIdentity",
			"scaleImplicit",
			"scaleLinear",
			"scaleLog",
			"scaleOrdinal",
			"scalePoint",
			"scalePow",
			"scaleQuantile",
			"scaleQuantize",
			"scaleRadial",
			"scaleSequential",
			"scaleSequentialLog",
			"scaleSequentialPow",
			"scaleSequentialQuantile",
			"scaleSequentialSqrt",
			"scaleSequentialSymlog",
			"scaleSqrt",
			"scaleSymlog",
			"scaleThreshold",
			"scaleTime",
			"scaleUtc",
			"tickFormat",
			"interpolateBlues",
			"interpolateBrBG",
			"interpolateBuGn",
			"interpolateBuPu",
			"interpolateCividis",
			"interpolateCool",
			"interpolateCubehelixDefault",
			"interpolateGnBu",
			"interpolateGreens",
			"interpolateGreys",
			"interpolateInferno",
			"interpolateMagma",
			"interpolateOrRd",
			"interpolateOranges",
			"interpolatePRGn",
			"interpolatePiYG",
			"interpolatePlasma",
			"interpolatePuBu",
			"interpolatePuBuGn",
			"interpolatePuOr",
			"interpolatePuRd",
			"interpolatePurples",
			"interpolateRainbow",
			"interpolateRdBu",
			"interpolateRdGy",
			"interpolateRdPu",
			"interpolateRdYlBu",
			"interpolateRdYlGn",
			"interpolateReds",
			"interpolateSinebow",
			"interpolateSpectral",
			"interpolateTurbo",
			"interpolateViridis",
			"interpolateWarm",
			"interpolateYlGn",
			"interpolateYlGnBu",
			"interpolateYlOrBr",
			"interpolateYlOrRd",
			"schemeAccent",
			"schemeBlues",
			"schemeBrBG",
			"schemeBuGn",
			"schemeBuPu",
			"schemeCategory10",
			"schemeDark2",
			"schemeGnBu",
			"schemeGreens",
			"schemeGreys",
			"schemeOrRd",
			"schemeOranges",
			"schemePRGn",
			"schemePaired",
			"schemePastel1",
			"schemePastel2",
			"schemePiYG",
			"schemePuBu",
			"schemePuBuGn",
			"schemePuOr",
			"schemePuRd",
			"schemePurples",
			"schemeRdBu",
			"schemeRdGy",
			"schemeRdPu",
			"schemeRdYlBu",
			"schemeRdYlGn",
			"schemeReds",
			"schemeSet1",
			"schemeSet2",
			"schemeSet3",
			"schemeSpectral",
			"schemeTableau10",
			"schemeYlGn",
			"schemeYlGnBu",
			"schemeYlOrBr",
			"schemeYlOrRd",
			"create",
			"creator",
			"local",
			"matcher",
			"namespace",
			"namespaces",
			"pointer",
			"pointers",
			"select",
			"selectAll",
			"selection",
			"selector",
			"selectorAll",
			"style",
			"window",
			"arc",
			"area",
			"areaRadial",
			"curveBasis",
			"curveBasisClosed",
			"curveBasisOpen",
			"curveBundle",
			"curveCardinal",
			"curveCardinalClosed",
			"curveCardinalOpen",
			"curveCatmullRom",
			"curveCatmullRomClosed",
			"curveCatmullRomOpen",
			"curveLinear",
			"curveLinearClosed",
			"curveMonotoneX",
			"curveMonotoneY",
			"curveNatural",
			"curveStep",
			"curveStepAfter",
			"curveStepBefore",
			"line",
			"lineRadial",
			"linkHorizontal",
			"linkRadial",
			"linkVertical",
			"pie",
			"pointRadial",
			"radialArea",
			"radialLine",
			"stack",
			"stackOffsetDiverging",
			"stackOffsetExpand",
			"stackOffsetNone",
			"stackOffsetSilhouette",
			"stackOffsetWiggle",
			"stackOrderAppearance",
			"stackOrderAscending",
			"stackOrderDescending",
			"stackOrderInsideOut",
			"stackOrderNone",
			"stackOrderReverse",
			"symbol",
			"symbolCircle",
			"symbolCross",
			"symbolDiamond",
			"symbolSquare",
			"symbolStar",
			"symbolTriangle",
			"symbolWye",
			"symbols",
			"timeDay",
			"timeDays",
			"timeFriday",
			"timeFridays",
			"timeHour",
			"timeHours",
			"timeInterval",
			"timeMillisecond",
			"timeMilliseconds",
			"timeMinute",
			"timeMinutes",
			"timeMonday",
			"timeMondays",
			"timeMonth",
			"timeMonths",
			"timeSaturday",
			"timeSaturdays",
			"timeSecond",
			"timeSeconds",
			"timeSunday",
			"timeSundays",
			"timeThursday",
			"timeThursdays",
			"timeTuesday",
			"timeTuesdays",
			"timeWednesday",
			"timeWednesdays",
			"timeWeek",
			"timeWeeks",
			"timeYear",
			"timeYears",
			"utcDay",
			"utcDays",
			"utcFriday",
			"utcFridays",
			"utcHour",
			"utcHours",
			"utcMillisecond",
			"utcMilliseconds",
			"utcMinute",
			"utcMinutes",
			"utcMonday",
			"utcMondays",
			"utcMonth",
			"utcMonths",
			"utcSaturday",
			"utcSaturdays",
			"utcSecond",
			"utcSeconds",
			"utcSunday",
			"utcSundays",
			"utcThursday",
			"utcThursdays",
			"utcTuesday",
			"utcTuesdays",
			"utcWednesday",
			"utcWednesdays",
			"utcWeek",
			"utcWeeks",
			"utcYear",
			"utcYears",
			"timeFormat",
			"timeParse",
			"utcFormat",
			"utcParse",
			"isoFormat",
			"isoParse",
			"timeFormatDefaultLocale",
			"timeFormatLocale",
			"interval",
			"now",
			"timeout",
			"timer",
			"timerFlush",
			"active",
			"interrupt",
			"transition",
			"zoom",
			"zoomIdentity",
			"zoomTransform",
			"version"
		],
		"detectedNames": [
			"Adder",
			"ascending",
			"bin",
			"bisect",
			"bisectCenter",
			"bisectLeft",
			"bisectRight",
			"bisector",
			"count",
			"cross",
			"cumsum",
			"descending",
			"deviation",
			"extent",
			"fsum",
			"greatest",
			"greatestIndex",
			"group",
			"groups",
			"histogram",
			"index",
			"indexes",
			"least",
			"leastIndex",
			"max",
			"maxIndex",
			"mean",
			"median",
			"merge",
			"min",
			"minIndex",
			"pairs",
			"permute",
			"quantile",
			"quantileSorted",
			"quickselect",
			"range",
			"rollup",
			"rollups",
			"scan",
			"shuffle",
			"shuffler",
			"sum",
			"thresholdFreedmanDiaconis",
			"thresholdScott",
			"thresholdSturges",
			"tickIncrement",
			"tickStep",
			"ticks",
			"transpose",
			"variance",
			"zip",
			"axisBottom",
			"axisLeft",
			"axisRight",
			"axisTop",
			"brush",
			"brushSelection",
			"brushX",
			"brushY",
			"chord",
			"chordDirected",
			"chordTranspose",
			"ribbon",
			"ribbonArrow",
			"color",
			"cubehelix",
			"gray",
			"hcl",
			"hsl",
			"lab",
			"lch",
			"rgb",
			"contourDensity",
			"contours",
			"Delaunay",
			"Voronoi",
			"dispatch",
			"drag",
			"dragDisable",
			"dragEnable",
			"autoType",
			"csvFormat",
			"csvFormatBody",
			"csvFormatRow",
			"csvFormatRows",
			"csvFormatValue",
			"csvParse",
			"csvParseRows",
			"dsvFormat",
			"tsvFormat",
			"tsvFormatBody",
			"tsvFormatRow",
			"tsvFormatRows",
			"tsvFormatValue",
			"tsvParse",
			"tsvParseRows",
			"easeBack",
			"easeBackIn",
			"easeBackInOut",
			"easeBackOut",
			"easeBounce",
			"easeBounceIn",
			"easeBounceInOut",
			"easeBounceOut",
			"easeCircle",
			"easeCircleIn",
			"easeCircleInOut",
			"easeCircleOut",
			"easeCubic",
			"easeCubicIn",
			"easeCubicInOut",
			"easeCubicOut",
			"easeElastic",
			"easeElasticIn",
			"easeElasticInOut",
			"easeElasticOut",
			"easeExp",
			"easeExpIn",
			"easeExpInOut",
			"easeExpOut",
			"easeLinear",
			"easePoly",
			"easePolyIn",
			"easePolyInOut",
			"easePolyOut",
			"easeQuad",
			"easeQuadIn",
			"easeQuadInOut",
			"easeQuadOut",
			"easeSin",
			"easeSinIn",
			"easeSinInOut",
			"easeSinOut",
			"blob",
			"buffer",
			"csv",
			"dsv",
			"html",
			"image",
			"json",
			"svg",
			"text",
			"tsv",
			"xml",
			"forceCenter",
			"forceCollide",
			"forceLink",
			"forceManyBody",
			"forceRadial",
			"forceSimulation",
			"forceX",
			"forceY",
			"format",
			"formatPrefix",
			"FormatSpecifier",
			"formatDefaultLocale",
			"formatLocale",
			"formatSpecifier",
			"precisionFixed",
			"precisionPrefix",
			"precisionRound",
			"geoAlbers",
			"geoAlbersUsa",
			"geoArea",
			"geoAzimuthalEqualArea",
			"geoAzimuthalEqualAreaRaw",
			"geoAzimuthalEquidistant",
			"geoAzimuthalEquidistantRaw",
			"geoBounds",
			"geoCentroid",
			"geoCircle",
			"geoClipAntimeridian",
			"geoClipCircle",
			"geoClipExtent",
			"geoClipRectangle",
			"geoConicConformal",
			"geoConicConformalRaw",
			"geoConicEqualArea",
			"geoConicEqualAreaRaw",
			"geoConicEquidistant",
			"geoConicEquidistantRaw",
			"geoContains",
			"geoDistance",
			"geoEqualEarth",
			"geoEqualEarthRaw",
			"geoEquirectangular",
			"geoEquirectangularRaw",
			"geoGnomonic",
			"geoGnomonicRaw",
			"geoGraticule",
			"geoGraticule10",
			"geoIdentity",
			"geoInterpolate",
			"geoLength",
			"geoMercator",
			"geoMercatorRaw",
			"geoNaturalEarth1",
			"geoNaturalEarth1Raw",
			"geoOrthographic",
			"geoOrthographicRaw",
			"geoPath",
			"geoProjection",
			"geoProjectionMutator",
			"geoRotation",
			"geoStereographic",
			"geoStereographicRaw",
			"geoStream",
			"geoTransform",
			"geoTransverseMercator",
			"geoTransverseMercatorRaw",
			"cluster",
			"hierarchy",
			"pack",
			"packEnclose",
			"packSiblings",
			"partition",
			"stratify",
			"tree",
			"treemap",
			"treemapBinary",
			"treemapDice",
			"treemapResquarify",
			"treemapSlice",
			"treemapSliceDice",
			"treemapSquarify",
			"interpolate",
			"interpolateArray",
			"interpolateBasis",
			"interpolateBasisClosed",
			"interpolateCubehelix",
			"interpolateCubehelixLong",
			"interpolateDate",
			"interpolateDiscrete",
			"interpolateHcl",
			"interpolateHclLong",
			"interpolateHsl",
			"interpolateHslLong",
			"interpolateHue",
			"interpolateLab",
			"interpolateNumber",
			"interpolateNumberArray",
			"interpolateObject",
			"interpolateRgb",
			"interpolateRgbBasis",
			"interpolateRgbBasisClosed",
			"interpolateRound",
			"interpolateString",
			"interpolateTransformCss",
			"interpolateTransformSvg",
			"interpolateZoom",
			"piecewise",
			"quantize",
			"path",
			"polygonArea",
			"polygonCentroid",
			"polygonContains",
			"polygonHull",
			"polygonLength",
			"quadtree",
			"randomBates",
			"randomBernoulli",
			"randomBeta",
			"randomBinomial",
			"randomCauchy",
			"randomExponential",
			"randomGamma",
			"randomGeometric",
			"randomInt",
			"randomIrwinHall",
			"randomLcg",
			"randomLogNormal",
			"randomLogistic",
			"randomNormal",
			"randomPareto",
			"randomPoisson",
			"randomUniform",
			"randomWeibull",
			"scaleBand",
			"scaleDiverging",
			"scaleDivergingLog",
			"scaleDivergingPow",
			"scaleDivergingSqrt",
			"scaleDivergingSymlog",
			"scaleIdentity",
			"scaleImplicit",
			"scaleLinear",
			"scaleLog",
			"scaleOrdinal",
			"scalePoint",
			"scalePow",
			"scaleQuantile",
			"scaleQuantize",
			"scaleRadial",
			"scaleSequential",
			"scaleSequentialLog",
			"scaleSequentialPow",
			"scaleSequentialQuantile",
			"scaleSequentialSqrt",
			"scaleSequentialSymlog",
			"scaleSqrt",
			"scaleSymlog",
			"scaleThreshold",
			"scaleTime",
			"scaleUtc",
			"tickFormat",
			"interpolateBlues",
			"interpolateBrBG",
			"interpolateBuGn",
			"interpolateBuPu",
			"interpolateCividis",
			"interpolateCool",
			"interpolateCubehelixDefault",
			"interpolateGnBu",
			"interpolateGreens",
			"interpolateGreys",
			"interpolateInferno",
			"interpolateMagma",
			"interpolateOrRd",
			"interpolateOranges",
			"interpolatePRGn",
			"interpolatePiYG",
			"interpolatePlasma",
			"interpolatePuBu",
			"interpolatePuBuGn",
			"interpolatePuOr",
			"interpolatePuRd",
			"interpolatePurples",
			"interpolateRainbow",
			"interpolateRdBu",
			"interpolateRdGy",
			"interpolateRdPu",
			"interpolateRdYlBu",
			"interpolateRdYlGn",
			"interpolateReds",
			"interpolateSinebow",
			"interpolateSpectral",
			"interpolateTurbo",
			"interpolateViridis",
			"interpolateWarm",
			"interpolateYlGn",
			"interpolateYlGnBu",
			"interpolateYlOrBr",
			"interpolateYlOrRd",
			"schemeAccent",
			"schemeBlues",
			"schemeBrBG",
			"schemeBuGn",
			"schemeBuPu",
			"schemeCategory10",
			"schemeDark2",
			"schemeGnBu",
			"schemeGreens",
			"schemeGreys",
			"schemeOrRd",
			"schemeOranges",
			"schemePRGn",
			"schemePaired",
			"schemePastel1",
			"schemePastel2",
			"schemePiYG",
			"schemePuBu",
			"schemePuBuGn",
			"schemePuOr",
			"schemePuRd",
			"schemePurples",
			"schemeRdBu",
			"schemeRdGy",
			"schemeRdPu",
			"schemeRdYlBu",
			"schemeRdYlGn",
			"schemeReds",
			"schemeSet1",
			"schemeSet2",
			"schemeSet3",
			"schemeSpectral",
			"schemeTableau10",
			"schemeYlGn",
			"schemeYlGnBu",
			"schemeYlOrBr",
			"schemeYlOrRd",
			"create",
			"creator",
			"local",
			"matcher",
			"namespace",
			"namespaces",
			"pointer",
			"pointers",
			"select",
			"selectAll",
			"selection",
			"selector",
			"selectorAll",
			"style",
			"window",
			"arc",
			"area",
			"areaRadial",
			"curveBasis",
			"curveBasisClosed",
			"curveBasisOpen",
			"curveBundle",
			"curveCardinal",
			"curveCardinalClosed",
			"curveCardinalOpen",
			"curveCatmullRom",
			"curveCatmullRomClosed",
			"curveCatmullRomOpen",
			"curveLinear",
			"curveLinearClosed",
			"curveMonotoneX",
			"curveMonotoneY",
			"curveNatural",
			"curveStep",
			"curveStepAfter",
			"curveStepBefore",
			"line",
			"lineRadial",
			"linkHorizontal",
			"linkRadial",
			"linkVertical",
			"pie",
			"pointRadial",
			"radialArea",
			"radialLine",
			"stack",
			"stackOffsetDiverging",
			"stackOffsetExpand",
			"stackOffsetNone",
			"stackOffsetSilhouette",
			"stackOffsetWiggle",
			"stackOrderAppearance",
			"stackOrderAscending",
			"stackOrderDescending",
			"stackOrderInsideOut",
			"stackOrderNone",
			"stackOrderReverse",
			"symbol",
			"symbolCircle",
			"symbolCross",
			"symbolDiamond",
			"symbolSquare",
			"symbolStar",
			"symbolTriangle",
			"symbolWye",
			"symbols",
			"timeDay",
			"timeDays",
			"timeFriday",
			"timeFridays",
			"timeHour",
			"timeHours",
			"timeInterval",
			"timeMillisecond",
			"timeMilliseconds",
			"timeMinute",
			"timeMinutes",
			"timeMonday",
			"timeMondays",
			"timeMonth",
			"timeMonths",
			"timeSaturday",
			"timeSaturdays",
			"timeSecond",
			"timeSeconds",
			"timeSunday",
			"timeSundays",
			"timeThursday",
			"timeThursdays",
			"timeTuesday",
			"timeTuesdays",
			"timeWednesday",
			"timeWednesdays",
			"timeWeek",
			"timeWeeks",
			"timeYear",
			"timeYears",
			"utcDay",
			"utcDays",
			"utcFriday",
			"utcFridays",
			"utcHour",
			"utcHours",
			"utcMillisecond",
			"utcMilliseconds",
			"utcMinute",
			"utcMinutes",
			"utcMonday",
			"utcMondays",
			"utcMonth",
			"utcMonths",
			"utcSaturday",
			"utcSaturdays",
			"utcSecond",
			"utcSeconds",
			"utcSunday",
			"utcSundays",
			"utcThursday",
			"utcThursdays",
			"utcTuesday",
			"utcTuesdays",
			"utcWednesday",
			"utcWednesdays",
			"utcWeek",
			"utcWeeks",
			"utcYear",
			"utcYears",
			"timeFormat",
			"timeParse",
			"utcFormat",
			"utcParse",
			"isoFormat",
			"isoParse",
			"timeFormatDefaultLocale",
			"timeFormatLocale",
			"interval",
			"now",
			"timeout",
			"timer",
			"timerFlush",
			"active",
			"interrupt",
			"transition",
			"zoom",
			"zoomIdentity",
			"zoomTransform",
			"version"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "less-loader",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "fsevents",
		"expectedNames": [
			"watch",
			"getInfo",
			"constants"
		],
		"detectedNames": [
			"watch",
			"getInfo",
			"constants"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-preset-stage-0",
		"expectedNames": [
			"presets",
			"plugins"
		],
		"detectedNames": [],
		"missingNames": [
			"presets",
			"plugins"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "download-git-repo",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "query-string",
		"expectedNames": [
			"extract",
			"parse",
			"stringify",
			"parseUrl",
			"stringifyUrl"
		],
		"detectedNames": [
			"extract",
			"parse",
			"stringify",
			"parseUrl",
			"stringifyUrl"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "open",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "passport",
		"expectedNames": [
			"_key",
			"_strategies",
			"_serializers",
			"_deserializers",
			"_infoTransformers",
			"_framework",
			"_userProperty",
			"_sm",
			"Authenticator",
			"Passport",
			"Strategy",
			"strategies",
			"init",
			"use",
			"unuse",
			"framework",
			"initialize",
			"authenticate",
			"authorize",
			"session",
			"serializeUser",
			"deserializeUser",
			"transformAuthInfo",
			"_strategy"
		],
		"detectedNames": [
			"Authenticator",
			"Passport",
			"Strategy",
			"strategies"
		],
		"missingNames": [
			"_key",
			"_strategies",
			"_serializers",
			"_deserializers",
			"_infoTransformers",
			"_framework",
			"_userProperty",
			"_sm",
			"init",
			"use",
			"unuse",
			"framework",
			"initialize",
			"authenticate",
			"authorize",
			"session",
			"serializeUser",
			"deserializeUser",
			"transformAuthInfo",
			"_strategy"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "grunt",
		"expectedNames": [
			"util",
			"log",
			"template",
			"event",
			"fail",
			"file",
			"option",
			"config",
			"task",
			"help",
			"cli",
			"verbose",
			"package",
			"version",
			"registerTask",
			"registerMultiTask",
			"registerInitTask",
			"renameTask",
			"loadTasks",
			"loadNpmTasks",
			"initConfig",
			"warn",
			"fatal",
			"tasks"
		],
		"detectedNames": [],
		"missingNames": [
			"util",
			"log",
			"template",
			"event",
			"fail",
			"file",
			"option",
			"config",
			"task",
			"help",
			"cli",
			"verbose",
			"package",
			"version",
			"registerTask",
			"registerMultiTask",
			"registerInitTask",
			"renameTask",
			"loadTasks",
			"loadNpmTasks",
			"initConfig",
			"warn",
			"fatal",
			"tasks"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "path-to-regexp",
		"transpiled": true,
		"expectedNames": [
			"parse",
			"compile",
			"tokensToFunction",
			"match",
			"regexpToFunction",
			"tokensToRegexp",
			"pathToRegexp"
		],
		"detectedNames": [
			"parse",
			"compile",
			"tokensToFunction",
			"match",
			"regexpToFunction",
			"tokensToRegexp",
			"pathToRegexp"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "mustache",
		"expectedNames": [
			"name",
			"version",
			"tags",
			"clearCache",
			"escape",
			"parse",
			"render",
			"Scanner",
			"Context",
			"Writer",
			"templateCache"
		],
		"detectedNames": [],
		"missingNames": [
			"name",
			"version",
			"tags",
			"clearCache",
			"escape",
			"parse",
			"render",
			"Scanner",
			"Context",
			"Writer",
			"templateCache"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "inherits",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "tmp",
		"expectedNames": [
			"tmpdir",
			"dir",
			"dirSync",
			"file",
			"fileSync",
			"tmpName",
			"tmpNameSync",
			"setGracefulCleanup"
		],
		"detectedNames": [
			"tmpdir",
			"dir",
			"dirSync",
			"file",
			"fileSync",
			"tmpName",
			"tmpNameSync",
			"setGracefulCleanup"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "md5",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "dotenv-expand",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "crypto-js",
		"expectedNames": [
			"lib",
			"enc",
			"algo",
			"x64",
			"MD5",
			"HmacMD5",
			"SHA1",
			"HmacSHA1",
			"SHA256",
			"HmacSHA256",
			"SHA224",
			"HmacSHA224",
			"SHA512",
			"HmacSHA512",
			"SHA384",
			"HmacSHA384",
			"SHA3",
			"HmacSHA3",
			"RIPEMD160",
			"HmacRIPEMD160",
			"PBKDF2",
			"EvpKDF",
			"mode",
			"pad",
			"format",
			"kdf",
			"AES",
			"DES",
			"TripleDES",
			"RC4",
			"RC4Drop",
			"Rabbit",
			"RabbitLegacy"
		],
		"detectedNames": [],
		"missingNames": [
			"lib",
			"enc",
			"algo",
			"x64",
			"MD5",
			"HmacMD5",
			"SHA1",
			"HmacSHA1",
			"SHA256",
			"HmacSHA256",
			"SHA224",
			"HmacSHA224",
			"SHA512",
			"HmacSHA512",
			"SHA384",
			"HmacSHA384",
			"SHA3",
			"HmacSHA3",
			"RIPEMD160",
			"HmacRIPEMD160",
			"PBKDF2",
			"EvpKDF",
			"mode",
			"pad",
			"format",
			"kdf",
			"AES",
			"DES",
			"TripleDES",
			"RC4",
			"RC4Drop",
			"Rabbit",
			"RabbitLegacy"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "request-promise-native",
		"expectedNames": [
			"get",
			"head",
			"options",
			"post",
			"put",
			"patch",
			"del",
			"delete",
			"jar",
			"cookie",
			"defaults",
			"forever",
			"Request",
			"initParams",
			"debug"
		],
		"detectedNames": [],
		"missingNames": [
			"get",
			"head",
			"options",
			"post",
			"put",
			"patch",
			"del",
			"delete",
			"jar",
			"cookie",
			"defaults",
			"forever",
			"Request",
			"initParams",
			"debug"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "through",
		"expectedNames": [
			"through"
		],
		"detectedNames": [],
		"missingNames": [
			"through"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "connect",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "raf",
		"expectedNames": [
			"cancel",
			"polyfill"
		],
		"detectedNames": [
			"cancel",
			"polyfill"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "readable-stream",
		"expectedNames": [
			"ReadableState",
			"_fromList",
			"from",
			"Stream",
			"Readable",
			"Writable",
			"Duplex",
			"Transform",
			"PassThrough",
			"finished",
			"pipeline"
		],
		"detectedNames": [
			"Stream",
			"Readable",
			"Writable",
			"Duplex",
			"Transform",
			"PassThrough",
			"finished",
			"pipeline"
		],
		"missingNames": [
			"ReadableState",
			"_fromList",
			"from"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "highlight.js",
		"expectedNames": [
			"highlight",
			"highlightAuto",
			"fixMarkup",
			"highlightBlock",
			"configure",
			"initHighlighting",
			"initHighlightingOnLoad",
			"registerLanguage",
			"listLanguages",
			"getLanguage",
			"registerAliases",
			"requireLanguage",
			"autoDetection",
			"inherit",
			"addPlugin",
			"vuePlugin",
			"debugMode",
			"safeMode",
			"versionString",
			"IDENT_RE",
			"UNDERSCORE_IDENT_RE",
			"NUMBER_RE",
			"C_NUMBER_RE",
			"BINARY_NUMBER_RE",
			"RE_STARTERS_RE",
			"SHEBANG",
			"BACKSLASH_ESCAPE",
			"APOS_STRING_MODE",
			"QUOTE_STRING_MODE",
			"PHRASAL_WORDS_MODE",
			"COMMENT",
			"C_LINE_COMMENT_MODE",
			"C_BLOCK_COMMENT_MODE",
			"HASH_COMMENT_MODE",
			"NUMBER_MODE",
			"C_NUMBER_MODE",
			"BINARY_NUMBER_MODE",
			"CSS_NUMBER_MODE",
			"REGEXP_MODE",
			"TITLE_MODE",
			"UNDERSCORE_TITLE_MODE",
			"METHOD_GUARD",
			"END_SAME_AS_BEGIN"
		],
		"detectedNames": [],
		"missingNames": [
			"highlight",
			"highlightAuto",
			"fixMarkup",
			"highlightBlock",
			"configure",
			"initHighlighting",
			"initHighlightingOnLoad",
			"registerLanguage",
			"listLanguages",
			"getLanguage",
			"registerAliases",
			"requireLanguage",
			"autoDetection",
			"inherit",
			"addPlugin",
			"vuePlugin",
			"debugMode",
			"safeMode",
			"versionString",
			"IDENT_RE",
			"UNDERSCORE_IDENT_RE",
			"NUMBER_RE",
			"C_NUMBER_RE",
			"BINARY_NUMBER_RE",
			"RE_STARTERS_RE",
			"SHEBANG",
			"BACKSLASH_ESCAPE",
			"APOS_STRING_MODE",
			"QUOTE_STRING_MODE",
			"PHRASAL_WORDS_MODE",
			"COMMENT",
			"C_LINE_COMMENT_MODE",
			"C_BLOCK_COMMENT_MODE",
			"HASH_COMMENT_MODE",
			"NUMBER_MODE",
			"C_NUMBER_MODE",
			"BINARY_NUMBER_MODE",
			"CSS_NUMBER_MODE",
			"REGEXP_MODE",
			"TITLE_MODE",
			"UNDERSCORE_TITLE_MODE",
			"METHOD_GUARD",
			"END_SAME_AS_BEGIN"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/polyfill",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "progress",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "optimize-css-assets-webpack-plugin",
		"expectedNames": [
			"PHASES"
		],
		"detectedNames": [],
		"missingNames": [
			"PHASES"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "iconv-lite",
		"expectedNames": [
			"encodings",
			"defaultCharUnicode",
			"defaultCharSingleByte",
			"encode",
			"decode",
			"encodingExists",
			"toEncoding",
			"fromEncoding",
			"_codecDataCache",
			"getCodec",
			"_canonicalizeEncoding",
			"getEncoder",
			"getDecoder",
			"enableStreamingAPI",
			"IconvLiteEncoderStream",
			"IconvLiteDecoderStream",
			"encodeStream",
			"decodeStream",
			"supportsStreams"
		],
		"detectedNames": [],
		"missingNames": [
			"encodings",
			"defaultCharUnicode",
			"defaultCharSingleByte",
			"encode",
			"decode",
			"encodingExists",
			"toEncoding",
			"fromEncoding",
			"_codecDataCache",
			"getCodec",
			"_canonicalizeEncoding",
			"getEncoder",
			"getDecoder",
			"enableStreamingAPI",
			"IconvLiteEncoderStream",
			"IconvLiteDecoderStream",
			"encodeStream",
			"decodeStream",
			"supportsStreams"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bunyan",
		"expectedNames": [
			"stdSerializers",
			"TRACE",
			"DEBUG",
			"INFO",
			"WARN",
			"ERROR",
			"FATAL",
			"resolveLevel",
			"levelFromName",
			"nameFromLevel",
			"VERSION",
			"LOG_VERSION",
			"createLogger",
			"RingBuffer",
			"RotatingFileStream",
			"safeCycles"
		],
		"detectedNames": [
			"TRACE",
			"DEBUG",
			"INFO",
			"WARN",
			"ERROR",
			"FATAL",
			"resolveLevel",
			"levelFromName",
			"nameFromLevel",
			"VERSION",
			"LOG_VERSION",
			"createLogger",
			"RingBuffer",
			"RotatingFileStream",
			"safeCycles"
		],
		"missingNames": [
			"stdSerializers"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-uglify",
		"expectedNames": [
			"GulpUglifyError"
		],
		"detectedNames": [
			"GulpUglifyError"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "koa-router",
		"expectedNames": [
			"url"
		],
		"detectedNames": [],
		"missingNames": [
			"url"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ncp",
		"expectedNames": [
			"ncp"
		],
		"detectedNames": [],
		"missingNames": [
			"ncp"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.merge",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lru-cache",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "moment-timezone",
		"expectedNames": [
			"momentProperties",
			"suppressDeprecationWarnings",
			"deprecationHandler",
			"parseTwoDigitYear",
			"createFromInputFallback",
			"ISO_8601",
			"RFC_2822",
			"updateOffset",
			"defaultFormat",
			"defaultFormatUtc",
			"lang",
			"langData",
			"version",
			"fn",
			"min",
			"max",
			"now",
			"utc",
			"unix",
			"months",
			"isDate",
			"locale",
			"invalid",
			"duration",
			"isMoment",
			"weekdays",
			"parseZone",
			"localeData",
			"isDuration",
			"monthsShort",
			"weekdaysMin",
			"defineLocale",
			"updateLocale",
			"locales",
			"weekdaysShort",
			"normalizeUnits",
			"relativeTimeRounding",
			"relativeTimeThreshold",
			"calendarFormat",
			"HTML5_FMT",
			"tz",
			"defaultZone"
		],
		"detectedNames": [],
		"missingNames": [
			"momentProperties",
			"suppressDeprecationWarnings",
			"deprecationHandler",
			"parseTwoDigitYear",
			"createFromInputFallback",
			"ISO_8601",
			"RFC_2822",
			"updateOffset",
			"defaultFormat",
			"defaultFormatUtc",
			"lang",
			"langData",
			"version",
			"fn",
			"min",
			"max",
			"now",
			"utc",
			"unix",
			"months",
			"isDate",
			"locale",
			"invalid",
			"duration",
			"isMoment",
			"weekdays",
			"parseZone",
			"localeData",
			"isDuration",
			"monthsShort",
			"weekdaysMin",
			"defineLocale",
			"updateLocale",
			"locales",
			"weekdaysShort",
			"normalizeUnits",
			"relativeTimeRounding",
			"relativeTimeThreshold",
			"calendarFormat",
			"HTML5_FMT",
			"tz",
			"defaultZone"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "figlet",
		"expectedNames": [
			"text",
			"textSync",
			"metadata",
			"defaults",
			"parseFont",
			"loadFont",
			"loadFontSync",
			"preloadFonts",
			"figFonts",
			"fonts",
			"fontsSync"
		],
		"detectedNames": [],
		"missingNames": [
			"text",
			"textSync",
			"metadata",
			"defaults",
			"parseFont",
			"loadFont",
			"loadFontSync",
			"preloadFonts",
			"figFonts",
			"fonts",
			"fontsSync"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "history",
		"transpiled": true,
		"expectedNames": [
			"Action",
			"createBrowserHistory",
			"createHashHistory",
			"createMemoryHistory",
			"createPath",
			"parsePath"
		],
		"detectedNames": [],
		"missingNames": [
			"Action",
			"createBrowserHistory",
			"createHashHistory",
			"createMemoryHistory",
			"createPath",
			"parsePath"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "readline-sync",
		"expectedNames": [
			"_DBG_set_useExt",
			"_DBG_set_checkOptions",
			"_DBG_set_checkMethod",
			"_DBG_clearHistory",
			"setDefaultOptions",
			"question",
			"prompt",
			"keyIn",
			"questionEMail",
			"questionNewPassword",
			"questionInt",
			"questionFloat",
			"questionPath",
			"promptCL",
			"promptLoop",
			"promptCLLoop",
			"promptSimShell",
			"keyInYN",
			"keyInYNStrict",
			"keyInPause",
			"keyInSelect",
			"getRawInput",
			"setPrint",
			"setPrompt",
			"setEncoding",
			"setMask",
			"setBufferSize"
		],
		"detectedNames": [
			"_DBG_set_useExt",
			"_DBG_set_checkOptions",
			"_DBG_set_checkMethod",
			"_DBG_clearHistory",
			"setDefaultOptions",
			"question",
			"prompt",
			"keyIn",
			"questionEMail",
			"questionNewPassword",
			"questionInt",
			"questionFloat",
			"questionPath",
			"promptCL",
			"promptLoop",
			"promptCLLoop",
			"promptSimShell",
			"keyInYN",
			"keyInYNStrict",
			"keyInPause",
			"keyInSelect",
			"getRawInput",
			"setPrint",
			"setPrompt",
			"setEncoding",
			"setMask",
			"setBufferSize"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pluralize",
		"expectedNames": [
			"plural",
			"isPlural",
			"singular",
			"isSingular",
			"addPluralRule",
			"addSingularRule",
			"addUncountableRule",
			"addIrregularRule"
		],
		"detectedNames": [],
		"missingNames": [
			"plural",
			"isPlural",
			"singular",
			"isSingular",
			"addPluralRule",
			"addSingularRule",
			"addUncountableRule",
			"addIrregularRule"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "url",
		"expectedNames": [
			"Url",
			"parse",
			"resolve",
			"resolveObject",
			"format",
			"URL",
			"URLSearchParams",
			"domainToASCII",
			"domainToUnicode",
			"pathToFileURL",
			"fileURLToPath"
		],
		"detectedNames": [
			"Url",
			"parse",
			"resolve",
			"resolveObject",
			"format",
			"URL",
			"URLSearchParams",
			"domainToASCII",
			"domainToUnicode",
			"pathToFileURL",
			"fileURLToPath"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "log4js",
		"expectedNames": [
			"getLogger",
			"configure",
			"shutdown",
			"connectLogger",
			"levels",
			"addLayout"
		],
		"detectedNames": [],
		"missingNames": [
			"getLogger",
			"configure",
			"shutdown",
			"connectLogger",
			"levels",
			"addLayout"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "cli-table",
		"expectedNames": [
			"version"
		],
		"detectedNames": [
			"version"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "webpack-merge",
		"transpiled": true,
		"expectedNames": [
			"merge",
			"mergeWithCustomize",
			"unique",
			"customizeArray",
			"customizeObject",
			"CustomizeRule"
		],
		"detectedNames": [
			"merge",
			"mergeWithCustomize",
			"unique",
			"customizeArray",
			"customizeObject",
			"CustomizeRule"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "archiver",
		"expectedNames": [
			"create",
			"registerFormat"
		],
		"detectedNames": [],
		"missingNames": [
			"create",
			"registerFormat"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-register",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-config-airbnb",
		"expectedNames": [
			"extends",
			"rules"
		],
		"detectedNames": [],
		"missingNames": [
			"extends",
			"rules"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "clone",
		"expectedNames": [
			"clonePrototype",
			"__objToStr",
			"__isDate",
			"__isArray",
			"__isRegExp",
			"__getRegExpFlags"
		],
		"detectedNames": [],
		"missingNames": [
			"clonePrototype",
			"__objToStr",
			"__isDate",
			"__isArray",
			"__isRegExp",
			"__getRegExpFlags"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jsonfile",
		"expectedNames": [
			"readFile",
			"readFileSync",
			"writeFile",
			"writeFileSync"
		],
		"detectedNames": [],
		"missingNames": [
			"readFile",
			"readFileSync",
			"writeFile",
			"writeFileSync"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "puppeteer",
		"expectedNames": [
			"_changedProduct",
			"_projectRoot",
			"_preferredRevision",
			"_isPuppeteerCore",
			"__productName"
		],
		"detectedNames": [],
		"missingNames": [
			"_changedProduct",
			"_projectRoot",
			"_preferredRevision",
			"_isPuppeteerCore",
			"__productName"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "shortid",
		"expectedNames": [
			"generate",
			"seed",
			"worker",
			"characters",
			"isValid"
		],
		"detectedNames": [
			"generate",
			"seed",
			"worker",
			"characters",
			"isValid"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/plugin-proposal-class-properties",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "querystring",
		"expectedNames": [
			"unescapeBuffer",
			"unescape",
			"escape",
			"stringify",
			"encode",
			"parse",
			"decode"
		],
		"detectedNames": [
			"unescapeBuffer",
			"unescape",
			"escape",
			"stringify",
			"encode",
			"parse",
			"decode"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "serve-static",
		"expectedNames": [
			"mime"
		],
		"detectedNames": [
			"mime"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "tslint",
		"transpiled": true,
		"expectedNames": [
			"Configuration",
			"Formatters",
			"Rules",
			"Test",
			"Utils",
			"Linter",
			"isTypedRule",
			"Replacement",
			"RuleFailurePosition",
			"RuleFailure",
			"ENABLE_DISABLE_REGEX",
			"removeDisabledFailures",
			"findFormatter",
			"loadRules",
			"findRule",
			"getSourceFile",
			"doesIntersect",
			"hasModifier",
			"isBlockScopedVariable",
			"isBlockScopedBindingElement",
			"getBindingElementVariableDeclaration",
			"childOfKind",
			"someAncestor",
			"ancestorWhere",
			"isAssignment",
			"isNodeFlagSet",
			"isCombinedNodeFlagSet",
			"isCombinedModifierFlagSet",
			"isTypeFlagSet",
			"isSymbolFlagSet",
			"isObjectFlagSet",
			"isNestedModuleDeclaration",
			"unwrapParentheses",
			"isScopeBoundary",
			"isBlockScopeBoundary",
			"isLoop",
			"isNumeric",
			"forEachToken",
			"forEachComment",
			"hasCommentAfterPosition",
			"getEqualsKind",
			"isStrictNullChecksEnabled",
			"isNegativeNumberLiteral",
			"isWhiteSpace",
			"BlockScopeAwareRuleWalker",
			"ProgramAwareRuleWalker",
			"RuleWalker",
			"ScopeAwareRuleWalker",
			"SyntaxWalker",
			"WalkContext",
			"AbstractWalker"
		],
		"detectedNames": [
			"Configuration",
			"Formatters",
			"Rules",
			"Test",
			"Utils",
			"Linter",
			"isTypedRule",
			"Replacement",
			"RuleFailurePosition",
			"RuleFailure",
			"ENABLE_DISABLE_REGEX",
			"removeDisabledFailures",
			"findFormatter",
			"loadRules",
			"findRule",
			"getSourceFile",
			"doesIntersect",
			"hasModifier",
			"isBlockScopedVariable",
			"isBlockScopedBindingElement",
			"getBindingElementVariableDeclaration",
			"childOfKind",
			"someAncestor",
			"ancestorWhere",
			"isAssignment",
			"isNodeFlagSet",
			"isCombinedNodeFlagSet",
			"isCombinedModifierFlagSet",
			"isTypeFlagSet",
			"isSymbolFlagSet",
			"isObjectFlagSet",
			"isNestedModuleDeclaration",
			"unwrapParentheses",
			"isScopeBoundary",
			"isBlockScopeBoundary",
			"isLoop",
			"isNumeric",
			"forEachToken",
			"forEachComment",
			"hasCommentAfterPosition",
			"getEqualsKind",
			"isStrictNullChecksEnabled",
			"isNegativeNumberLiteral",
			"isWhiteSpace",
			"BlockScopeAwareRuleWalker",
			"ProgramAwareRuleWalker",
			"RuleWalker",
			"ScopeAwareRuleWalker",
			"SyntaxWalker",
			"WalkContext",
			"AbstractWalker"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pug",
		"expectedNames": [
			"name",
			"runtime",
			"cache",
			"filters",
			"compile",
			"compileClientWithDependenciesTracked",
			"compileClient",
			"compileFile",
			"render",
			"renderFile",
			"compileFileClient",
			"__express"
		],
		"detectedNames": [
			"name",
			"runtime",
			"cache",
			"filters",
			"compile",
			"compileClientWithDependenciesTracked",
			"compileClient",
			"compileFile",
			"render",
			"renderFile",
			"compileFileClient",
			"__express"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "config",
		"expectedNames": [
			"util",
			"get",
			"has"
		],
		"detectedNames": [],
		"missingNames": [
			"util",
			"get",
			"has"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "source-map",
		"expectedNames": [
			"SourceMapGenerator",
			"SourceMapConsumer",
			"SourceNode"
		],
		"detectedNames": [
			"SourceMapGenerator",
			"SourceMapConsumer",
			"SourceNode"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "concat-stream",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.get",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/preset-react",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "serve-favicon",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "stylus",
		"expectedNames": [
			"version",
			"nodes",
			"functions",
			"utils",
			"middleware",
			"Visitor",
			"Parser",
			"Evaluator",
			"Normalizer",
			"Compiler",
			"convertCSS",
			"render",
			"url",
			"resolver"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"nodes",
			"functions",
			"utils",
			"middleware",
			"Visitor",
			"Parser",
			"Evaluator",
			"Normalizer",
			"Compiler",
			"convertCSS",
			"render",
			"url",
			"resolver"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "date-fns",
		"transpiled": true,
		"expectedNames": [
			"add",
			"addBusinessDays",
			"addDays",
			"addHours",
			"addISOWeekYears",
			"addMilliseconds",
			"addMinutes",
			"addMonths",
			"addQuarters",
			"addSeconds",
			"addWeeks",
			"addYears",
			"areIntervalsOverlapping",
			"closestIndexTo",
			"closestTo",
			"compareAsc",
			"compareDesc",
			"differenceInBusinessDays",
			"differenceInCalendarDays",
			"differenceInCalendarISOWeekYears",
			"differenceInCalendarISOWeeks",
			"differenceInCalendarMonths",
			"differenceInCalendarQuarters",
			"differenceInCalendarWeeks",
			"differenceInCalendarYears",
			"differenceInDays",
			"differenceInHours",
			"differenceInISOWeekYears",
			"differenceInMilliseconds",
			"differenceInMinutes",
			"differenceInMonths",
			"differenceInQuarters",
			"differenceInSeconds",
			"differenceInWeeks",
			"differenceInYears",
			"eachDayOfInterval",
			"eachHourOfInterval",
			"eachMonthOfInterval",
			"eachQuarterOfInterval",
			"eachWeekOfInterval",
			"eachWeekendOfInterval",
			"eachWeekendOfMonth",
			"eachWeekendOfYear",
			"eachYearOfInterval",
			"endOfDay",
			"endOfDecade",
			"endOfHour",
			"endOfISOWeek",
			"endOfISOWeekYear",
			"endOfMinute",
			"endOfMonth",
			"endOfQuarter",
			"endOfSecond",
			"endOfToday",
			"endOfTomorrow",
			"endOfWeek",
			"endOfYear",
			"endOfYesterday",
			"format",
			"formatDistance",
			"formatDistanceStrict",
			"formatDistanceToNow",
			"formatDistanceToNowStrict",
			"formatDuration",
			"formatISO",
			"formatISO9075",
			"formatISODuration",
			"formatRFC3339",
			"formatRFC7231",
			"formatRelative",
			"fromUnixTime",
			"getDate",
			"getDay",
			"getDayOfYear",
			"getDaysInMonth",
			"getDaysInYear",
			"getDecade",
			"getHours",
			"getISODay",
			"getISOWeek",
			"getISOWeekYear",
			"getISOWeeksInYear",
			"getMilliseconds",
			"getMinutes",
			"getMonth",
			"getOverlappingDaysInIntervals",
			"getQuarter",
			"getSeconds",
			"getTime",
			"getUnixTime",
			"getWeek",
			"getWeekOfMonth",
			"getWeekYear",
			"getWeeksInMonth",
			"getYear",
			"intervalToDuration",
			"isAfter",
			"isBefore",
			"isDate",
			"isEqual",
			"isExists",
			"isFirstDayOfMonth",
			"isFriday",
			"isFuture",
			"isLastDayOfMonth",
			"isLeapYear",
			"isMatch",
			"isMonday",
			"isPast",
			"isSameDay",
			"isSameHour",
			"isSameISOWeek",
			"isSameISOWeekYear",
			"isSameMinute",
			"isSameMonth",
			"isSameQuarter",
			"isSameSecond",
			"isSameWeek",
			"isSameYear",
			"isSaturday",
			"isSunday",
			"isThisHour",
			"isThisISOWeek",
			"isThisMinute",
			"isThisMonth",
			"isThisQuarter",
			"isThisSecond",
			"isThisWeek",
			"isThisYear",
			"isThursday",
			"isToday",
			"isTomorrow",
			"isTuesday",
			"isValid",
			"isWednesday",
			"isWeekend",
			"isWithinInterval",
			"isYesterday",
			"lastDayOfDecade",
			"lastDayOfISOWeek",
			"lastDayOfISOWeekYear",
			"lastDayOfMonth",
			"lastDayOfQuarter",
			"lastDayOfWeek",
			"lastDayOfYear",
			"lightFormat",
			"max",
			"min",
			"parse",
			"parseISO",
			"parseJSON",
			"roundToNearestMinutes",
			"set",
			"setDate",
			"setDay",
			"setDayOfYear",
			"setHours",
			"setISODay",
			"setISOWeek",
			"setISOWeekYear",
			"setMilliseconds",
			"setMinutes",
			"setMonth",
			"setQuarter",
			"setSeconds",
			"setWeek",
			"setWeekYear",
			"setYear",
			"startOfDay",
			"startOfDecade",
			"startOfHour",
			"startOfISOWeek",
			"startOfISOWeekYear",
			"startOfMinute",
			"startOfMonth",
			"startOfQuarter",
			"startOfSecond",
			"startOfToday",
			"startOfTomorrow",
			"startOfWeek",
			"startOfWeekYear",
			"startOfYear",
			"startOfYesterday",
			"sub",
			"subBusinessDays",
			"subDays",
			"subHours",
			"subISOWeekYears",
			"subMilliseconds",
			"subMinutes",
			"subMonths",
			"subQuarters",
			"subSeconds",
			"subWeeks",
			"subYears",
			"toDate",
			"maxTime",
			"minTime"
		],
		"detectedNames": [
			"add",
			"addBusinessDays",
			"addDays",
			"addHours",
			"addISOWeekYears",
			"addMilliseconds",
			"addMinutes",
			"addMonths",
			"addQuarters",
			"addSeconds",
			"addWeeks",
			"addYears",
			"areIntervalsOverlapping",
			"closestIndexTo",
			"closestTo",
			"compareAsc",
			"compareDesc",
			"differenceInBusinessDays",
			"differenceInCalendarDays",
			"differenceInCalendarISOWeekYears",
			"differenceInCalendarISOWeeks",
			"differenceInCalendarMonths",
			"differenceInCalendarQuarters",
			"differenceInCalendarWeeks",
			"differenceInCalendarYears",
			"differenceInDays",
			"differenceInHours",
			"differenceInISOWeekYears",
			"differenceInMilliseconds",
			"differenceInMinutes",
			"differenceInMonths",
			"differenceInQuarters",
			"differenceInSeconds",
			"differenceInWeeks",
			"differenceInYears",
			"eachDayOfInterval",
			"eachHourOfInterval",
			"eachMonthOfInterval",
			"eachQuarterOfInterval",
			"eachWeekOfInterval",
			"eachWeekendOfInterval",
			"eachWeekendOfMonth",
			"eachWeekendOfYear",
			"eachYearOfInterval",
			"endOfDay",
			"endOfDecade",
			"endOfHour",
			"endOfISOWeek",
			"endOfISOWeekYear",
			"endOfMinute",
			"endOfMonth",
			"endOfQuarter",
			"endOfSecond",
			"endOfToday",
			"endOfTomorrow",
			"endOfWeek",
			"endOfYear",
			"endOfYesterday",
			"format",
			"formatDistance",
			"formatDistanceStrict",
			"formatDistanceToNow",
			"formatDistanceToNowStrict",
			"formatDuration",
			"formatISO",
			"formatISO9075",
			"formatISODuration",
			"formatRFC3339",
			"formatRFC7231",
			"formatRelative",
			"fromUnixTime",
			"getDate",
			"getDay",
			"getDayOfYear",
			"getDaysInMonth",
			"getDaysInYear",
			"getDecade",
			"getHours",
			"getISODay",
			"getISOWeek",
			"getISOWeekYear",
			"getISOWeeksInYear",
			"getMilliseconds",
			"getMinutes",
			"getMonth",
			"getOverlappingDaysInIntervals",
			"getQuarter",
			"getSeconds",
			"getTime",
			"getUnixTime",
			"getWeek",
			"getWeekOfMonth",
			"getWeekYear",
			"getWeeksInMonth",
			"getYear",
			"intervalToDuration",
			"isAfter",
			"isBefore",
			"isDate",
			"isEqual",
			"isExists",
			"isFirstDayOfMonth",
			"isFriday",
			"isFuture",
			"isLastDayOfMonth",
			"isLeapYear",
			"isMatch",
			"isMonday",
			"isPast",
			"isSameDay",
			"isSameHour",
			"isSameISOWeek",
			"isSameISOWeekYear",
			"isSameMinute",
			"isSameMonth",
			"isSameQuarter",
			"isSameSecond",
			"isSameWeek",
			"isSameYear",
			"isSaturday",
			"isSunday",
			"isThisHour",
			"isThisISOWeek",
			"isThisMinute",
			"isThisMonth",
			"isThisQuarter",
			"isThisSecond",
			"isThisWeek",
			"isThisYear",
			"isThursday",
			"isToday",
			"isTomorrow",
			"isTuesday",
			"isValid",
			"isWednesday",
			"isWeekend",
			"isWithinInterval",
			"isYesterday",
			"lastDayOfDecade",
			"lastDayOfISOWeek",
			"lastDayOfISOWeekYear",
			"lastDayOfMonth",
			"lastDayOfQuarter",
			"lastDayOfWeek",
			"lastDayOfYear",
			"lightFormat",
			"max",
			"min",
			"parse",
			"parseISO",
			"parseJSON",
			"roundToNearestMinutes",
			"set",
			"setDate",
			"setDay",
			"setDayOfYear",
			"setHours",
			"setISODay",
			"setISOWeek",
			"setISOWeekYear",
			"setMilliseconds",
			"setMinutes",
			"setMonth",
			"setQuarter",
			"setSeconds",
			"setWeek",
			"setWeekYear",
			"setYear",
			"startOfDay",
			"startOfDecade",
			"startOfHour",
			"startOfISOWeek",
			"startOfISOWeekYear",
			"startOfMinute",
			"startOfMonth",
			"startOfQuarter",
			"startOfSecond",
			"startOfToday",
			"startOfTomorrow",
			"startOfWeek",
			"startOfWeekYear",
			"startOfYear",
			"startOfYesterday",
			"sub",
			"subBusinessDays",
			"subDays",
			"subHours",
			"subISOWeekYears",
			"subMilliseconds",
			"subMinutes",
			"subMonths",
			"subQuarters",
			"subSeconds",
			"subWeeks",
			"subYears",
			"toDate"
		],
		"missingNames": [
			"maxTime",
			"minTime"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "esprima",
		"transpiled": true,
		"expectedNames": [
			"parse",
			"parseModule",
			"parseScript",
			"tokenize",
			"Syntax",
			"version"
		],
		"detectedNames": [
			"parse",
			"parseModule",
			"parseScript",
			"tokenize",
			"Syntax",
			"version"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "sequelize",
		"expectedNames": [
			"version",
			"options",
			"Utils",
			"Op",
			"TableHints",
			"IndexHints",
			"Transaction",
			"QueryTypes",
			"Validator",
			"Model",
			"DataTypes",
			"ABSTRACT",
			"STRING",
			"CHAR",
			"TEXT",
			"NUMBER",
			"TINYINT",
			"SMALLINT",
			"MEDIUMINT",
			"INTEGER",
			"BIGINT",
			"FLOAT",
			"TIME",
			"DATE",
			"DATEONLY",
			"BOOLEAN",
			"NOW",
			"BLOB",
			"DECIMAL",
			"NUMERIC",
			"UUID",
			"UUIDV1",
			"UUIDV4",
			"HSTORE",
			"JSON",
			"JSONB",
			"VIRTUAL",
			"ARRAY",
			"ENUM",
			"RANGE",
			"REAL",
			"DOUBLE PRECISION",
			"DOUBLE",
			"GEOMETRY",
			"GEOGRAPHY",
			"CIDR",
			"INET",
			"MACADDR",
			"CITEXT",
			"postgres",
			"mysql",
			"mariadb",
			"sqlite",
			"mssql",
			"Deferrable",
			"Association",
			"useInflection",
			"_setupHooks",
			"runHooks",
			"addHook",
			"removeHook",
			"hasHook",
			"hasHooks",
			"beforeValidate",
			"afterValidate",
			"validationFailed",
			"beforeCreate",
			"afterCreate",
			"beforeDestroy",
			"afterDestroy",
			"beforeRestore",
			"afterRestore",
			"beforeUpdate",
			"afterUpdate",
			"beforeSave",
			"afterSave",
			"beforeUpsert",
			"afterUpsert",
			"beforeBulkCreate",
			"afterBulkCreate",
			"beforeBulkDestroy",
			"afterBulkDestroy",
			"beforeBulkRestore",
			"afterBulkRestore",
			"beforeBulkUpdate",
			"afterBulkUpdate",
			"beforeFind",
			"beforeFindAfterExpandIncludeAll",
			"beforeFindAfterOptions",
			"afterFind",
			"beforeCount",
			"beforeDefine",
			"afterDefine",
			"beforeInit",
			"afterInit",
			"beforeAssociate",
			"afterAssociate",
			"beforeConnect",
			"afterConnect",
			"beforeDisconnect",
			"afterDisconnect",
			"beforeSync",
			"afterSync",
			"beforeBulkSync",
			"afterBulkSync",
			"beforeQuery",
			"afterQuery",
			"Error",
			"BaseError",
			"AggregateError",
			"AsyncQueueError",
			"AssociationError",
			"BulkRecordError",
			"ConnectionError",
			"DatabaseError",
			"EagerLoadingError",
			"EmptyResultError",
			"InstanceError",
			"OptimisticLockError",
			"QueryError",
			"SequelizeScopeError",
			"ValidationError",
			"ValidationErrorItem",
			"AccessDeniedError",
			"ConnectionAcquireTimeoutError",
			"ConnectionRefusedError",
			"ConnectionTimedOutError",
			"HostNotFoundError",
			"HostNotReachableError",
			"InvalidConnectionError",
			"ExclusionConstraintError",
			"ForeignKeyConstraintError",
			"TimeoutError",
			"UnknownConstraintError",
			"UniqueConstraintError",
			"Sequelize"
		],
		"detectedNames": [
			"Sequelize"
		],
		"missingNames": [
			"version",
			"options",
			"Utils",
			"Op",
			"TableHints",
			"IndexHints",
			"Transaction",
			"QueryTypes",
			"Validator",
			"Model",
			"DataTypes",
			"ABSTRACT",
			"STRING",
			"CHAR",
			"TEXT",
			"NUMBER",
			"TINYINT",
			"SMALLINT",
			"MEDIUMINT",
			"INTEGER",
			"BIGINT",
			"FLOAT",
			"TIME",
			"DATE",
			"DATEONLY",
			"BOOLEAN",
			"NOW",
			"BLOB",
			"DECIMAL",
			"NUMERIC",
			"UUID",
			"UUIDV1",
			"UUIDV4",
			"HSTORE",
			"JSON",
			"JSONB",
			"VIRTUAL",
			"ARRAY",
			"ENUM",
			"RANGE",
			"REAL",
			"DOUBLE PRECISION",
			"DOUBLE",
			"GEOMETRY",
			"GEOGRAPHY",
			"CIDR",
			"INET",
			"MACADDR",
			"CITEXT",
			"postgres",
			"mysql",
			"mariadb",
			"sqlite",
			"mssql",
			"Deferrable",
			"Association",
			"useInflection",
			"_setupHooks",
			"runHooks",
			"addHook",
			"removeHook",
			"hasHook",
			"hasHooks",
			"beforeValidate",
			"afterValidate",
			"validationFailed",
			"beforeCreate",
			"afterCreate",
			"beforeDestroy",
			"afterDestroy",
			"beforeRestore",
			"afterRestore",
			"beforeUpdate",
			"afterUpdate",
			"beforeSave",
			"afterSave",
			"beforeUpsert",
			"afterUpsert",
			"beforeBulkCreate",
			"afterBulkCreate",
			"beforeBulkDestroy",
			"afterBulkDestroy",
			"beforeBulkRestore",
			"afterBulkRestore",
			"beforeBulkUpdate",
			"afterBulkUpdate",
			"beforeFind",
			"beforeFindAfterExpandIncludeAll",
			"beforeFindAfterOptions",
			"afterFind",
			"beforeCount",
			"beforeDefine",
			"afterDefine",
			"beforeInit",
			"afterInit",
			"beforeAssociate",
			"afterAssociate",
			"beforeConnect",
			"afterConnect",
			"beforeDisconnect",
			"afterDisconnect",
			"beforeSync",
			"afterSync",
			"beforeBulkSync",
			"afterBulkSync",
			"beforeQuery",
			"afterQuery",
			"Error",
			"BaseError",
			"AggregateError",
			"AsyncQueueError",
			"AssociationError",
			"BulkRecordError",
			"ConnectionError",
			"DatabaseError",
			"EagerLoadingError",
			"EmptyResultError",
			"InstanceError",
			"OptimisticLockError",
			"QueryError",
			"SequelizeScopeError",
			"ValidationError",
			"ValidationErrorItem",
			"AccessDeniedError",
			"ConnectionAcquireTimeoutError",
			"ConnectionRefusedError",
			"ConnectionTimedOutError",
			"HostNotFoundError",
			"HostNotReachableError",
			"InvalidConnectionError",
			"ExclusionConstraintError",
			"ForeignKeyConstraintError",
			"TimeoutError",
			"UnknownConstraintError",
			"UniqueConstraintError"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-transform-object-rest-spread",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bindings",
		"expectedNames": [
			"getFileName",
			"getRoot"
		],
		"detectedNames": [
			"getFileName",
			"getRoot"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "events",
		"expectedNames": [
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"detectedNames": [
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "graceful-fs",
		"expectedNames": [
			"appendFile",
			"appendFileSync",
			"access",
			"accessSync",
			"chown",
			"chownSync",
			"chmod",
			"chmodSync",
			"close",
			"closeSync",
			"copyFile",
			"copyFileSync",
			"createReadStream",
			"createWriteStream",
			"exists",
			"existsSync",
			"fchown",
			"fchownSync",
			"fchmod",
			"fchmodSync",
			"fdatasync",
			"fdatasyncSync",
			"fstat",
			"fstatSync",
			"fsync",
			"fsyncSync",
			"ftruncate",
			"ftruncateSync",
			"futimes",
			"futimesSync",
			"lchown",
			"lchownSync",
			"lchmod",
			"lchmodSync",
			"link",
			"linkSync",
			"lstat",
			"lstatSync",
			"lutimes",
			"lutimesSync",
			"mkdir",
			"mkdirSync",
			"mkdtemp",
			"mkdtempSync",
			"open",
			"openSync",
			"opendir",
			"opendirSync",
			"readdir",
			"readdirSync",
			"read",
			"readSync",
			"readv",
			"readvSync",
			"readFile",
			"readFileSync",
			"readlink",
			"readlinkSync",
			"realpath",
			"realpathSync",
			"rename",
			"renameSync",
			"rmdir",
			"rmdirSync",
			"stat",
			"statSync",
			"symlink",
			"symlinkSync",
			"truncate",
			"truncateSync",
			"unwatchFile",
			"unlink",
			"unlinkSync",
			"utimes",
			"utimesSync",
			"watch",
			"watchFile",
			"writeFile",
			"writeFileSync",
			"write",
			"writeSync",
			"writev",
			"writevSync",
			"Dir",
			"Dirent",
			"Stats",
			"ReadStream",
			"WriteStream",
			"FileReadStream",
			"FileWriteStream",
			"_toUnixTimestamp",
			"F_OK",
			"R_OK",
			"W_OK",
			"X_OK",
			"constants",
			"promises",
			"gracefulify"
		],
		"detectedNames": [],
		"missingNames": [
			"appendFile",
			"appendFileSync",
			"access",
			"accessSync",
			"chown",
			"chownSync",
			"chmod",
			"chmodSync",
			"close",
			"closeSync",
			"copyFile",
			"copyFileSync",
			"createReadStream",
			"createWriteStream",
			"exists",
			"existsSync",
			"fchown",
			"fchownSync",
			"fchmod",
			"fchmodSync",
			"fdatasync",
			"fdatasyncSync",
			"fstat",
			"fstatSync",
			"fsync",
			"fsyncSync",
			"ftruncate",
			"ftruncateSync",
			"futimes",
			"futimesSync",
			"lchown",
			"lchownSync",
			"lchmod",
			"lchmodSync",
			"link",
			"linkSync",
			"lstat",
			"lstatSync",
			"lutimes",
			"lutimesSync",
			"mkdir",
			"mkdirSync",
			"mkdtemp",
			"mkdtempSync",
			"open",
			"openSync",
			"opendir",
			"opendirSync",
			"readdir",
			"readdirSync",
			"read",
			"readSync",
			"readv",
			"readvSync",
			"readFile",
			"readFileSync",
			"readlink",
			"readlinkSync",
			"realpath",
			"realpathSync",
			"rename",
			"renameSync",
			"rmdir",
			"rmdirSync",
			"stat",
			"statSync",
			"symlink",
			"symlinkSync",
			"truncate",
			"truncateSync",
			"unwatchFile",
			"unlink",
			"unlinkSync",
			"utimes",
			"utimesSync",
			"watch",
			"watchFile",
			"writeFile",
			"writeFileSync",
			"write",
			"writeSync",
			"writev",
			"writevSync",
			"Dir",
			"Dirent",
			"Stats",
			"ReadStream",
			"WriteStream",
			"FileReadStream",
			"FileWriteStream",
			"_toUnixTimestamp",
			"F_OK",
			"R_OK",
			"W_OK",
			"X_OK",
			"constants",
			"promises",
			"gracefulify"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "crypto",
		"expectedNames": [
			"createCipheriv",
			"createDecipheriv",
			"createDiffieHellman",
			"createDiffieHellmanGroup",
			"createECDH",
			"createHash",
			"createHmac",
			"createPrivateKey",
			"createPublicKey",
			"createSecretKey",
			"createSign",
			"createVerify",
			"diffieHellman",
			"getCiphers",
			"getCurves",
			"getDiffieHellman",
			"getHashes",
			"pbkdf2",
			"pbkdf2Sync",
			"generateKeyPair",
			"generateKeyPairSync",
			"privateDecrypt",
			"privateEncrypt",
			"publicDecrypt",
			"publicEncrypt",
			"randomBytes",
			"randomFill",
			"randomFillSync",
			"randomInt",
			"scrypt",
			"scryptSync",
			"sign",
			"setEngine",
			"timingSafeEqual",
			"getFips",
			"setFips",
			"verify",
			"Certificate",
			"Cipher",
			"Cipheriv",
			"Decipher",
			"Decipheriv",
			"DiffieHellman",
			"DiffieHellmanGroup",
			"ECDH",
			"Hash",
			"Hmac",
			"KeyObject",
			"Sign",
			"Verify",
			"constants"
		],
		"detectedNames": [
			"createCipheriv",
			"createDecipheriv",
			"createDiffieHellman",
			"createDiffieHellmanGroup",
			"createECDH",
			"createHash",
			"createHmac",
			"createPrivateKey",
			"createPublicKey",
			"createSecretKey",
			"createSign",
			"createVerify",
			"diffieHellman",
			"getCiphers",
			"getCurves",
			"getDiffieHellman",
			"getHashes",
			"pbkdf2",
			"pbkdf2Sync",
			"generateKeyPair",
			"generateKeyPairSync",
			"privateDecrypt",
			"privateEncrypt",
			"publicDecrypt",
			"publicEncrypt",
			"randomBytes",
			"randomFill",
			"randomFillSync",
			"randomInt",
			"scrypt",
			"scryptSync",
			"sign",
			"setEngine",
			"timingSafeEqual",
			"getFips",
			"setFips",
			"verify",
			"Certificate",
			"Cipher",
			"Cipheriv",
			"Decipher",
			"Decipheriv",
			"DiffieHellman",
			"DiffieHellmanGroup",
			"ECDH",
			"Hash",
			"Hmac",
			"KeyObject",
			"Sign",
			"Verify",
			"constants"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cross-env",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mime-types",
		"expectedNames": [
			"charset",
			"charsets",
			"contentType",
			"extension",
			"extensions",
			"lookup",
			"types"
		],
		"detectedNames": [
			"charset",
			"charsets",
			"contentType",
			"extension",
			"extensions",
			"lookup",
			"types"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "event-stream",
		"expectedNames": [
			"Stream",
			"through",
			"from",
			"duplex",
			"map",
			"pause",
			"split",
			"pipe",
			"connect",
			"pipeline",
			"merge",
			"concat",
			"writeArray",
			"collect",
			"readArray",
			"readable",
			"mapSync",
			"filterSync",
			"flatmapSync",
			"log",
			"child",
			"parse",
			"stringify",
			"replace",
			"join",
			"wait",
			"pipeable"
		],
		"detectedNames": [],
		"missingNames": [
			"Stream",
			"through",
			"from",
			"duplex",
			"map",
			"pause",
			"split",
			"pipe",
			"connect",
			"pipeline",
			"merge",
			"concat",
			"writeArray",
			"collect",
			"readArray",
			"readable",
			"mapSync",
			"filterSync",
			"flatmapSync",
			"log",
			"child",
			"parse",
			"stringify",
			"replace",
			"join",
			"wait",
			"pipeable"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "hoist-non-react-statics",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-concat",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "terser-webpack-plugin",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "json-loader",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "warning",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bignumber.js",
		"expectedNames": [
			"clone",
			"ROUND_UP",
			"ROUND_DOWN",
			"ROUND_CEIL",
			"ROUND_FLOOR",
			"ROUND_HALF_UP",
			"ROUND_HALF_DOWN",
			"ROUND_HALF_EVEN",
			"ROUND_HALF_CEIL",
			"ROUND_HALF_FLOOR",
			"EUCLID",
			"set",
			"config",
			"isBigNumber",
			"max",
			"maximum",
			"min",
			"minimum",
			"random",
			"sum",
			"BigNumber"
		],
		"detectedNames": [],
		"missingNames": [
			"clone",
			"ROUND_UP",
			"ROUND_DOWN",
			"ROUND_CEIL",
			"ROUND_FLOOR",
			"ROUND_HALF_UP",
			"ROUND_HALF_DOWN",
			"ROUND_HALF_EVEN",
			"ROUND_HALF_CEIL",
			"ROUND_HALF_FLOOR",
			"EUCLID",
			"set",
			"config",
			"isBigNumber",
			"max",
			"maximum",
			"min",
			"minimum",
			"random",
			"sum",
			"BigNumber"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eventemitter3",
		"expectedNames": [
			"prefixed",
			"EventEmitter"
		],
		"detectedNames": [],
		"missingNames": [
			"prefixed",
			"EventEmitter"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "strip-ansi",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cli-color",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "form-data",
		"expectedNames": [
			"LINE_BREAK",
			"DEFAULT_CONTENT_TYPE"
		],
		"detectedNames": [],
		"missingNames": [
			"LINE_BREAK",
			"DEFAULT_CONTENT_TYPE"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "web3",
		"expectedNames": [
			"version",
			"utils",
			"modules",
			"givenProvider",
			"providers"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"utils",
			"modules",
			"givenProvider",
			"providers"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-sourcemaps",
		"expectedNames": [
			"init",
			"write",
			"mapSources",
			"identityMap"
		],
		"detectedNames": [
			"init"
		],
		"missingNames": [
			"write",
			"mapSources",
			"identityMap"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "webpack-dev-middleware",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ip",
		"expectedNames": [
			"toBuffer",
			"toString",
			"isV4Format",
			"isV6Format",
			"fromPrefixLen",
			"mask",
			"cidr",
			"subnet",
			"cidrSubnet",
			"not",
			"or",
			"isEqual",
			"isPrivate",
			"isPublic",
			"isLoopback",
			"loopback",
			"address",
			"toLong",
			"fromLong"
		],
		"detectedNames": [],
		"missingNames": [
			"toBuffer",
			"toString",
			"isV4Format",
			"isV6Format",
			"fromPrefixLen",
			"mask",
			"cidr",
			"subnet",
			"cidrSubnet",
			"not",
			"or",
			"isEqual",
			"isPrivate",
			"isPublic",
			"isLoopback",
			"loopback",
			"address",
			"toLong",
			"fromLong"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "camelcase",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "sw-precache-webpack-plugin",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "merge",
		"expectedNames": [
			"recursive",
			"clone"
		],
		"detectedNames": [],
		"missingNames": [
			"recursive",
			"clone"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "http-proxy",
		"expectedNames": [
			"createProxyServer",
			"createServer",
			"createProxy"
		],
		"detectedNames": [],
		"missingNames": [
			"createProxyServer",
			"createServer",
			"createProxy"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "multer",
		"expectedNames": [
			"diskStorage",
			"memoryStorage",
			"MulterError"
		],
		"detectedNames": [
			"diskStorage",
			"memoryStorage",
			"MulterError"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "deep-equal",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "browser-sync",
		"expectedNames": [
			"get",
			"has",
			"init",
			"use",
			"reload",
			"stream",
			"notify",
			"exit",
			"watch",
			"pause",
			"resume",
			"reset",
			"instances",
			"create"
		],
		"detectedNames": [
			"get",
			"has",
			"init",
			"use",
			"reload",
			"stream",
			"notify",
			"exit",
			"watch",
			"pause",
			"resume",
			"reset",
			"instances",
			"create"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "dateformat",
		"expectedNames": [
			"masks",
			"i18n"
		],
		"detectedNames": [],
		"missingNames": [
			"masks",
			"i18n"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "postcss-preset-env",
		"expectedNames": [
			"process"
		],
		"detectedNames": [],
		"missingNames": [
			"process"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "uglifyjs-webpack-plugin",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "sinon",
		"expectedNames": [
			"serverPrototype",
			"getFakes",
			"getRestorers",
			"createStubInstance",
			"inject",
			"mock",
			"reset",
			"resetBehavior",
			"resetHistory",
			"restore",
			"restoreContext",
			"replace",
			"replaceGetter",
			"replaceSetter",
			"spy",
			"stub",
			"fake",
			"useFakeTimers",
			"verify",
			"verifyAndRestore",
			"useFakeServer",
			"useFakeXMLHttpRequest",
			"usingPromise",
			"createSandbox",
			"assert",
			"match",
			"restoreObject",
			"expectation",
			"defaultConfig",
			"setFormatter",
			"timers",
			"xhr",
			"FakeXMLHttpRequest",
			"fakeServer",
			"fakeServerWithClock",
			"createFakeServer",
			"createFakeServerWithClock",
			"addBehavior"
		],
		"detectedNames": [],
		"missingNames": [
			"serverPrototype",
			"getFakes",
			"getRestorers",
			"createStubInstance",
			"inject",
			"mock",
			"reset",
			"resetBehavior",
			"resetHistory",
			"restore",
			"restoreContext",
			"replace",
			"replaceGetter",
			"replaceSetter",
			"spy",
			"stub",
			"fake",
			"useFakeTimers",
			"verify",
			"verifyAndRestore",
			"useFakeServer",
			"useFakeXMLHttpRequest",
			"usingPromise",
			"createSandbox",
			"assert",
			"match",
			"restoreObject",
			"expectation",
			"defaultConfig",
			"setFormatter",
			"timers",
			"xhr",
			"FakeXMLHttpRequest",
			"fakeServer",
			"fakeServerWithClock",
			"createFakeServer",
			"createFakeServerWithClock",
			"addBehavior"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-config-prettier",
		"expectedNames": [
			"rules"
		],
		"detectedNames": [
			"rules"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "identity-obj-proxy",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ts-loader",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "popper.js",
		"expectedNames": [
			"Utils",
			"placements",
			"Defaults"
		],
		"detectedNames": [],
		"missingNames": [
			"Utils",
			"placements",
			"Defaults"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "which",
		"expectedNames": [
			"sync"
		],
		"detectedNames": [],
		"missingNames": [
			"sync"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "markdown-it",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "tar",
		"expectedNames": [
			"create",
			"c",
			"replace",
			"r",
			"list",
			"t",
			"update",
			"u",
			"extract",
			"x",
			"Pack",
			"Unpack",
			"Parse",
			"ReadEntry",
			"WriteEntry",
			"Header",
			"Pax",
			"types"
		],
		"detectedNames": [
			"create",
			"c",
			"replace",
			"r",
			"list",
			"t",
			"update",
			"u",
			"extract",
			"x",
			"Pack",
			"Unpack",
			"Parse",
			"ReadEntry",
			"WriteEntry",
			"Header",
			"Pax",
			"types"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vue-template-compiler",
		"transpiled": true,
		"expectedNames": [
			"parseComponent",
			"compile",
			"compileToFunctions",
			"ssrCompile",
			"ssrCompileToFunctions",
			"generateCodeFrame"
		],
		"detectedNames": [
			"parseComponent",
			"compile",
			"compileToFunctions",
			"ssrCompile",
			"ssrCompileToFunctions",
			"generateCodeFrame"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-transform-class-properties",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "js-beautify",
		"expectedNames": [
			"js",
			"css",
			"html",
			"js_beautify",
			"css_beautify",
			"html_beautify"
		],
		"detectedNames": [],
		"missingNames": [
			"js",
			"css",
			"html",
			"js_beautify",
			"css_beautify",
			"html_beautify"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "log-symbols",
		"expectedNames": [
			"info",
			"success",
			"warning",
			"error"
		],
		"detectedNames": [],
		"missingNames": [
			"info",
			"success",
			"warning",
			"error"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "webpack-hot-middleware",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rollup",
		"transpiled": true,
		"expectedNames": [
			"VERSION",
			"rollup",
			"watch"
		],
		"detectedNames": [
			"VERSION",
			"rollup",
			"watch"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "copy-webpack-plugin",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nodemon",
		"expectedNames": [
			"restart",
			"on",
			"addListener",
			"once",
			"emit",
			"removeAllListeners",
			"reset",
			"config"
		],
		"detectedNames": [],
		"missingNames": [
			"restart",
			"on",
			"addListener",
			"once",
			"emit",
			"removeAllListeners",
			"reset",
			"config"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "boom",
		"expectedNames": [
			"stackTraceLimit"
		],
		"detectedNames": [],
		"missingNames": [
			"stackTraceLimit"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "xmldom",
		"expectedNames": [
			"DOMImplementation",
			"XMLSerializer",
			"DOMParser"
		],
		"detectedNames": [
			"DOMImplementation",
			"XMLSerializer",
			"DOMParser"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "util",
		"expectedNames": [
			"_errnoException",
			"_exceptionWithHostPort",
			"_extend",
			"callbackify",
			"debug",
			"debuglog",
			"deprecate",
			"format",
			"formatWithOptions",
			"getSystemErrorName",
			"inherits",
			"inspect",
			"isArray",
			"isBoolean",
			"isBuffer",
			"isDeepStrictEqual",
			"isNull",
			"isNullOrUndefined",
			"isNumber",
			"isString",
			"isSymbol",
			"isUndefined",
			"isRegExp",
			"isObject",
			"isDate",
			"isError",
			"isFunction",
			"isPrimitive",
			"log",
			"promisify",
			"TextDecoder",
			"TextEncoder",
			"types"
		],
		"detectedNames": [
			"_errnoException",
			"_exceptionWithHostPort",
			"_extend",
			"callbackify",
			"debug",
			"debuglog",
			"deprecate",
			"format",
			"formatWithOptions",
			"getSystemErrorName",
			"inherits",
			"inspect",
			"isArray",
			"isBoolean",
			"isBuffer",
			"isDeepStrictEqual",
			"isNull",
			"isNullOrUndefined",
			"isNumber",
			"isString",
			"isSymbol",
			"isUndefined",
			"isRegExp",
			"isObject",
			"isDate",
			"isError",
			"isFunction",
			"isPrimitive",
			"log",
			"promisify",
			"TextDecoder",
			"TextEncoder",
			"types"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ini",
		"expectedNames": [
			"decode",
			"parse",
			"encode",
			"stringify",
			"safe",
			"unsafe"
		],
		"detectedNames": [
			"decode",
			"parse",
			"encode",
			"stringify",
			"safe",
			"unsafe"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pify",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "command-line-args",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vinyl",
		"expectedNames": [
			"isCustomProp",
			"isVinyl"
		],
		"detectedNames": [],
		"missingNames": [
			"isCustomProp",
			"isVinyl"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mz",
		"expectedNames": [
			"fs",
			"dns",
			"zlib",
			"crypto",
			"readline",
			"child_process"
		],
		"detectedNames": [
			"fs"
		],
		"missingNames": [
			"dns",
			"zlib",
			"crypto",
			"readline",
			"child_process"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.debounce",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "html-minifier",
		"expectedNames": [
			"minify"
		],
		"detectedNames": [
			"minify"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ts-node",
		"transpiled": true,
		"expectedNames": [
			"REGISTER_INSTANCE",
			"INSPECT_CUSTOM",
			"debug",
			"VERSION",
			"DEFAULTS",
			"split",
			"parse",
			"normalizeSlashes",
			"TSError",
			"getExtensions",
			"register",
			"create"
		],
		"detectedNames": [
			"REGISTER_INSTANCE",
			"INSPECT_CUSTOM",
			"debug",
			"VERSION",
			"DEFAULTS",
			"split",
			"parse",
			"normalizeSlashes",
			"TSError",
			"getExtensions",
			"register",
			"create"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nconf",
		"expectedNames": [
			"stores",
			"sources",
			"version",
			"Argv",
			"Env",
			"File",
			"Literal",
			"Memory",
			"key",
			"path",
			"loadFiles",
			"loadFilesSync",
			"formats",
			"Provider",
			"argv",
			"env",
			"file",
			"defaults",
			"overrides",
			"use",
			"add",
			"remove",
			"create",
			"init",
			"get",
			"any",
			"set",
			"required",
			"reset",
			"clear",
			"merge",
			"load",
			"save",
			"_execute"
		],
		"detectedNames": [],
		"missingNames": [
			"stores",
			"sources",
			"version",
			"Argv",
			"Env",
			"File",
			"Literal",
			"Memory",
			"key",
			"path",
			"loadFiles",
			"loadFilesSync",
			"formats",
			"Provider",
			"argv",
			"env",
			"file",
			"defaults",
			"overrides",
			"use",
			"add",
			"remove",
			"create",
			"init",
			"get",
			"any",
			"set",
			"required",
			"reset",
			"clear",
			"merge",
			"load",
			"save",
			"_execute"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "recursive-readdir",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vue-loader",
		"expectedNames": [
			"VueLoaderPlugin"
		],
		"detectedNames": [
			"VueLoaderPlugin"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "datafire",
		"expectedNames": [
			"Action",
			"Response",
			"Integration",
			"Project",
			"ProjectServer",
			"Task",
			"Context",
			"Monitor",
			"Event",
			"flow",
			"commands",
			"util"
		],
		"detectedNames": [
			"Action",
			"commands",
			"util"
		],
		"missingNames": [
			"Response",
			"Integration",
			"Project",
			"ProjectServer",
			"Task",
			"Context",
			"Monitor",
			"Event",
			"flow"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-transform-decorators-legacy",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "clean-css",
		"expectedNames": [
			"process"
		],
		"detectedNames": [],
		"missingNames": [
			"process"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "hoek",
		"expectedNames": [
			"deepEqual",
			"clone",
			"merge",
			"applyToDefaults",
			"cloneWithShallow",
			"applyToDefaultsWithShallow",
			"intersect",
			"contain",
			"flatten",
			"reach",
			"reachTemplate",
			"assert",
			"Bench",
			"escapeRegex",
			"escapeHeaderAttribute",
			"escapeHtml",
			"escapeJson",
			"once",
			"ignore",
			"uniqueFilename",
			"stringify",
			"wait",
			"block"
		],
		"detectedNames": [
			"deepEqual",
			"clone",
			"merge",
			"applyToDefaults",
			"cloneWithShallow",
			"applyToDefaultsWithShallow",
			"intersect",
			"contain",
			"flatten",
			"reach",
			"reachTemplate",
			"assert",
			"Bench",
			"escapeRegex",
			"escapeHeaderAttribute",
			"escapeHtml",
			"escapeJson",
			"once",
			"ignore",
			"uniqueFilename",
			"stringify",
			"wait",
			"block"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cookie",
		"expectedNames": [
			"parse",
			"serialize"
		],
		"detectedNames": [
			"parse",
			"serialize"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/plugin-transform-runtime",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "when",
		"expectedNames": [
			"promise",
			"resolve",
			"reject",
			"lift",
			"try",
			"attempt",
			"iterate",
			"unfold",
			"join",
			"all",
			"settle",
			"any",
			"some",
			"race",
			"map",
			"filter",
			"reduce",
			"reduceRight",
			"isPromiseLike",
			"Promise",
			"defer",
			"TimeoutError"
		],
		"detectedNames": [],
		"missingNames": [
			"promise",
			"resolve",
			"reject",
			"lift",
			"try",
			"attempt",
			"iterate",
			"unfold",
			"join",
			"all",
			"settle",
			"any",
			"some",
			"race",
			"map",
			"filter",
			"reduce",
			"reduceRight",
			"isPromiseLike",
			"Promise",
			"defer",
			"TimeoutError"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "postcss-safe-parser",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/plugin-syntax-dynamic-import",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nunjucks",
		"expectedNames": [
			"Environment",
			"Template",
			"Loader",
			"FileSystemLoader",
			"NodeResolveLoader",
			"PrecompiledLoader",
			"WebLoader",
			"compiler",
			"parser",
			"lexer",
			"runtime",
			"lib",
			"nodes",
			"installJinjaCompat",
			"configure",
			"reset",
			"compile",
			"render",
			"renderString",
			"precompile",
			"precompileString"
		],
		"detectedNames": [
			"Environment",
			"Template",
			"Loader",
			"FileSystemLoader"
		],
		"missingNames": [
			"NodeResolveLoader",
			"PrecompiledLoader",
			"WebLoader",
			"compiler",
			"parser",
			"lexer",
			"runtime",
			"lib",
			"nodes",
			"installJinjaCompat",
			"configure",
			"reset",
			"compile",
			"render",
			"renderString",
			"precompile",
			"precompileString"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-promise",
		"expectedNames": [
			"rules",
			"rulesConfig",
			"configs"
		],
		"detectedNames": [],
		"missingNames": [
			"rules",
			"rulesConfig",
			"configs"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.isequal",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "workbox-webpack-plugin",
		"expectedNames": [
			"GenerateSW",
			"InjectManifest"
		],
		"detectedNames": [
			"GenerateSW",
			"InjectManifest"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "acorn",
		"transpiled": true,
		"expectedNames": [
			"Node",
			"Parser",
			"Position",
			"SourceLocation",
			"TokContext",
			"Token",
			"TokenType",
			"defaultOptions",
			"getLineInfo",
			"isIdentifierChar",
			"isIdentifierStart",
			"isNewLine",
			"keywordTypes",
			"lineBreak",
			"lineBreakG",
			"nonASCIIwhitespace",
			"parse",
			"parseExpressionAt",
			"tokContexts",
			"tokTypes",
			"tokenizer",
			"version"
		],
		"detectedNames": [
			"Node",
			"Parser",
			"Position",
			"SourceLocation",
			"TokContext",
			"Token",
			"TokenType",
			"defaultOptions",
			"getLineInfo",
			"isIdentifierChar",
			"isIdentifierStart",
			"isNewLine",
			"keywordTypes",
			"lineBreak",
			"lineBreakG",
			"nonASCIIwhitespace",
			"parse",
			"parseExpressionAt",
			"tokContexts",
			"tokTypes",
			"tokenizer",
			"version"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "amqplib",
		"expectedNames": [
			"connect",
			"credentials",
			"IllegalOperationError"
		],
		"detectedNames": [
			"connect",
			"credentials",
			"IllegalOperationError"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@svgr/webpack",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "color",
		"expectedNames": [
			"rgb",
			"hsl",
			"hsv",
			"hwb",
			"cmyk",
			"xyz",
			"lab",
			"lch",
			"ansi16",
			"ansi256",
			"hcg",
			"apple"
		],
		"detectedNames": [],
		"missingNames": [
			"rgb",
			"hsl",
			"hsv",
			"hwb",
			"cmyk",
			"xyz",
			"lab",
			"lch",
			"ansi16",
			"ansi256",
			"hcg",
			"apple"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ms",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "js-cookie",
		"expectedNames": [
			"set",
			"get",
			"getJSON",
			"remove",
			"defaults",
			"withConverter"
		],
		"detectedNames": [],
		"missingNames": [
			"set",
			"get",
			"getJSON",
			"remove",
			"defaults",
			"withConverter"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "temp",
		"expectedNames": [
			"dir",
			"track",
			"mkdir",
			"mkdirSync",
			"open",
			"openSync",
			"path",
			"cleanup",
			"cleanupSync",
			"createWriteStream"
		],
		"detectedNames": [
			"dir",
			"track",
			"mkdir",
			"mkdirSync",
			"open",
			"openSync",
			"path",
			"cleanup",
			"cleanupSync",
			"createWriteStream"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "simple-git",
		"transpiled": true,
		"expectedNames": [
			"CleanOptions",
			"CheckRepoActions",
			"ResetMode",
			"GitConstructError",
			"GitError",
			"GitResponseError",
			"TaskConfigurationError",
			"gitP"
		],
		"detectedNames": [],
		"missingNames": [
			"CleanOptions",
			"CheckRepoActions",
			"ResetMode",
			"GitConstructError",
			"GitError",
			"GitResponseError",
			"TaskConfigurationError",
			"gitP"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cssnano",
		"expectedNames": [
			"process"
		],
		"detectedNames": [],
		"missingNames": [
			"process"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "reselect",
		"transpiled": true,
		"expectedNames": [
			"defaultMemoize",
			"createSelectorCreator",
			"createStructuredSelector",
			"createSelector"
		],
		"detectedNames": [
			"defaultMemoize",
			"createSelectorCreator",
			"createStructuredSelector",
			"createSelector"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "yamljs",
		"expectedNames": [
			"parse",
			"parseFile",
			"dump",
			"stringify",
			"load"
		],
		"detectedNames": [],
		"missingNames": [
			"parse",
			"parseFile",
			"dump",
			"stringify",
			"load"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ioredis",
		"expectedNames": [
			"createClient",
			"defaultOptions",
			"Cluster",
			"Command",
			"ScanStream",
			"Pipeline",
			"AbstractConnector",
			"SentinelConnector",
			"SentinelIterator",
			"ReplyError",
			"print"
		],
		"detectedNames": [
			"Cluster",
			"Command",
			"ScanStream",
			"Pipeline",
			"AbstractConnector",
			"SentinelConnector",
			"SentinelIterator",
			"ReplyError",
			"print"
		],
		"missingNames": [
			"createClient",
			"defaultOptions"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "koa-static",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "escape-string-regexp",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bn.js",
		"expectedNames": [
			"BN",
			"wordSize",
			"isBN",
			"max",
			"min",
			"red",
			"_prime",
			"mont"
		],
		"detectedNames": [
			"BN"
		],
		"missingNames": [
			"wordSize",
			"isBN",
			"max",
			"min",
			"red",
			"_prime",
			"mont"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "escodegen",
		"expectedNames": [
			"version",
			"generate",
			"attachComments",
			"Precedence",
			"browser",
			"FORMAT_MINIFY",
			"FORMAT_DEFAULTS"
		],
		"detectedNames": [
			"version",
			"generate",
			"attachComments",
			"Precedence",
			"browser",
			"FORMAT_MINIFY",
			"FORMAT_DEFAULTS"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babelify",
		"expectedNames": [
			"configure"
		],
		"detectedNames": [
			"configure"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "helmet",
		"expectedNames": [
			"contentSecurityPolicy",
			"dnsPrefetchControl",
			"expectCt",
			"frameguard",
			"hidePoweredBy",
			"hsts",
			"ieNoOpen",
			"noSniff",
			"permittedCrossDomainPolicies",
			"referrerPolicy",
			"xssFilter",
			"featurePolicy",
			"hpkp",
			"noCache"
		],
		"detectedNames": [],
		"missingNames": [
			"contentSecurityPolicy",
			"dnsPrefetchControl",
			"expectCt",
			"frameguard",
			"hidePoweredBy",
			"hsts",
			"ieNoOpen",
			"noSniff",
			"permittedCrossDomainPolicies",
			"referrerPolicy",
			"xssFilter",
			"featurePolicy",
			"hpkp",
			"noCache"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nopt",
		"expectedNames": [
			"clean",
			"typeDefs"
		],
		"detectedNames": [
			"clean",
			"typeDefs"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-prettier",
		"expectedNames": [
			"configs",
			"rules"
		],
		"detectedNames": [],
		"missingNames": [
			"configs",
			"rules"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "knex",
		"expectedNames": [
			"Client",
			"KnexTimeoutError",
			"QueryBuilder",
			"raw"
		],
		"detectedNames": [],
		"missingNames": [
			"Client",
			"KnexTimeoutError",
			"QueryBuilder",
			"raw"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pnp-webpack-plugin",
		"expectedNames": [
			"apply",
			"makePlugin",
			"moduleLoader",
			"topLevelLoader",
			"bind",
			"tsLoaderOptions",
			"forkTsCheckerOptions"
		],
		"detectedNames": [
			"makePlugin",
			"moduleLoader",
			"topLevelLoader",
			"bind",
			"tsLoaderOptions",
			"forkTsCheckerOptions"
		],
		"missingNames": [
			"apply"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-if",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "assert",
		"expectedNames": [
			"fail",
			"AssertionError",
			"ok",
			"equal",
			"notEqual",
			"deepEqual",
			"notDeepEqual",
			"deepStrictEqual",
			"notDeepStrictEqual",
			"strictEqual",
			"notStrictEqual",
			"throws",
			"rejects",
			"doesNotThrow",
			"doesNotReject",
			"ifError",
			"match",
			"doesNotMatch",
			"CallTracker",
			"strict"
		],
		"detectedNames": [
			"fail",
			"AssertionError",
			"ok",
			"equal",
			"notEqual",
			"deepEqual",
			"notDeepEqual",
			"deepStrictEqual",
			"notDeepStrictEqual",
			"strictEqual",
			"notStrictEqual",
			"throws",
			"rejects",
			"doesNotThrow",
			"doesNotReject",
			"ifError",
			"match",
			"doesNotMatch",
			"CallTracker",
			"strict"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "global",
		"expectedNames": [
			"global",
			"clearInterval",
			"clearTimeout",
			"setInterval",
			"setTimeout",
			"queueMicrotask",
			"clearImmediate",
			"setImmediate"
		],
		"detectedNames": [],
		"missingNames": [
			"global",
			"clearInterval",
			"clearTimeout",
			"setInterval",
			"setTimeout",
			"queueMicrotask",
			"clearImmediate",
			"setImmediate"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "npmlog",
		"expectedNames": [
			"_events",
			"_eventsCount",
			"_maxListeners",
			"useColor",
			"enableColor",
			"disableColor",
			"level",
			"gauge",
			"tracker",
			"progressEnabled",
			"enableUnicode",
			"disableUnicode",
			"setGaugeThemeset",
			"setGaugeTemplate",
			"enableProgress",
			"disableProgress",
			"newGroup",
			"newItem",
			"newStream",
			"clearProgress",
			"showProgress",
			"pause",
			"resume",
			"_buffer",
			"record",
			"maxRecordSize",
			"log",
			"emitLog",
			"_format",
			"write",
			"addLevel",
			"prefixStyle",
			"headingStyle",
			"style",
			"levels",
			"disp",
			"silly",
			"verbose",
			"info",
			"timing",
			"http",
			"notice",
			"warn",
			"error",
			"silent",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"detectedNames": [],
		"missingNames": [
			"_events",
			"_eventsCount",
			"_maxListeners",
			"useColor",
			"enableColor",
			"disableColor",
			"level",
			"gauge",
			"tracker",
			"progressEnabled",
			"enableUnicode",
			"disableUnicode",
			"setGaugeThemeset",
			"setGaugeTemplate",
			"enableProgress",
			"disableProgress",
			"newGroup",
			"newItem",
			"newStream",
			"clearProgress",
			"showProgress",
			"pause",
			"resume",
			"_buffer",
			"record",
			"maxRecordSize",
			"log",
			"emitLog",
			"_format",
			"write",
			"addLevel",
			"prefixStyle",
			"headingStyle",
			"style",
			"levels",
			"disp",
			"silly",
			"verbose",
			"info",
			"timing",
			"http",
			"notice",
			"warn",
			"error",
			"silent",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "backbone",
		"expectedNames": [
			"VERSION",
			"$",
			"noConflict",
			"emulateHTTP",
			"emulateJSON",
			"Events",
			"on",
			"listenTo",
			"off",
			"stopListening",
			"once",
			"listenToOnce",
			"trigger",
			"bind",
			"unbind",
			"Model",
			"Collection",
			"View",
			"sync",
			"ajax",
			"Router",
			"History",
			"history"
		],
		"detectedNames": [],
		"missingNames": [
			"VERSION",
			"$",
			"noConflict",
			"emulateHTTP",
			"emulateJSON",
			"Events",
			"on",
			"listenTo",
			"off",
			"stopListening",
			"once",
			"listenToOnce",
			"trigger",
			"bind",
			"unbind",
			"Model",
			"Collection",
			"View",
			"sync",
			"ajax",
			"Router",
			"History",
			"history"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "raw-loader",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "run-sequence",
		"expectedNames": [
			"use",
			"options"
		],
		"detectedNames": [
			"use",
			"options"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.clonedeep",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@oclif/command",
		"transpiled": true,
		"expectedNames": [
			"Command",
			"flags",
			"run",
			"Main"
		],
		"detectedNames": [
			"Command",
			"flags",
			"run",
			"Main"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "http-proxy-middleware",
		"transpiled": true,
		"expectedNames": [
			"createProxyMiddleware"
		],
		"detectedNames": [
			"createProxyMiddleware"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "gulp-babel",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@oclif/config",
		"transpiled": true,
		"expectedNames": [
			"Config",
			"load",
			"Command",
			"Plugin"
		],
		"detectedNames": [
			"Config",
			"load",
			"Command",
			"Plugin"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vinyl-fs",
		"expectedNames": [
			"src",
			"dest",
			"symlink"
		],
		"detectedNames": [
			"src"
		],
		"missingNames": [
			"dest",
			"symlink"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.throttle",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "passport-local",
		"expectedNames": [
			"Strategy"
		],
		"detectedNames": [
			"Strategy"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eventemitter2",
		"expectedNames": [
			"EventEmitter2",
			"defaultMaxListeners"
		],
		"detectedNames": [],
		"missingNames": [
			"EventEmitter2",
			"defaultMaxListeners"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mqtt",
		"expectedNames": [
			"connect",
			"MqttClient",
			"Client",
			"Store"
		],
		"detectedNames": [
			"connect",
			"MqttClient",
			"Client",
			"Store"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "unique-random-array",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "buffer",
		"expectedNames": [
			"Buffer",
			"SlowBuffer",
			"transcode",
			"kMaxLength",
			"kStringMaxLength",
			"constants",
			"INSPECT_MAX_BYTES"
		],
		"detectedNames": [
			"Buffer",
			"SlowBuffer",
			"transcode",
			"kMaxLength",
			"kStringMaxLength",
			"constants",
			"INSPECT_MAX_BYTES"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "redux-saga",
		"transpiled": true,
		"expectedNames": [
			"CANCEL",
			"SAGA_LOCATION",
			"buffers",
			"detach",
			"END",
			"channel",
			"eventChannel",
			"isEnd",
			"multicastChannel",
			"runSaga",
			"stdChannel"
		],
		"detectedNames": [
			"CANCEL",
			"SAGA_LOCATION",
			"buffers",
			"detach",
			"END",
			"channel",
			"eventChannel",
			"isEnd",
			"multicastChannel",
			"runSaga",
			"stdChannel"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-router-redux",
		"transpiled": true,
		"expectedNames": [
			"syncHistoryWithStore",
			"LOCATION_CHANGE",
			"routerReducer",
			"CALL_HISTORY_METHOD",
			"push",
			"replace",
			"go",
			"goBack",
			"goForward",
			"routerActions",
			"routerMiddleware"
		],
		"detectedNames": [
			"syncHistoryWithStore",
			"LOCATION_CHANGE",
			"routerReducer",
			"CALL_HISTORY_METHOD",
			"push",
			"replace",
			"go",
			"goBack",
			"goForward",
			"routerActions",
			"routerMiddleware"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "jszip",
		"expectedNames": [
			"support",
			"defaults",
			"version",
			"loadAsync",
			"external"
		],
		"detectedNames": [],
		"missingNames": [
			"support",
			"defaults",
			"version",
			"loadAsync",
			"external"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "koa-bodyparser",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "async-validator",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-preset-stage-2",
		"expectedNames": [
			"presets",
			"plugins"
		],
		"detectedNames": [],
		"missingNames": [
			"presets",
			"plugins"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-notifier",
		"expectedNames": [
			"options",
			"_events",
			"_eventsCount",
			"_maxListeners",
			"Notification",
			"NotifySend",
			"NotificationCenter",
			"WindowsToaster",
			"WindowsBalloon",
			"Growl",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"detectedNames": [
			"Notification",
			"NotifySend",
			"NotificationCenter",
			"WindowsToaster",
			"WindowsBalloon",
			"Growl"
		],
		"missingNames": [
			"options",
			"_events",
			"_eventsCount",
			"_maxListeners",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-config-airbnb-base",
		"expectedNames": [
			"extends",
			"parserOptions",
			"rules"
		],
		"detectedNames": [],
		"missingNames": [
			"extends",
			"parserOptions",
			"rules"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "validate-npm-package-name",
		"expectedNames": [
			"scopedPackagePattern"
		],
		"detectedNames": [],
		"missingNames": [
			"scopedPackagePattern"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "clean-webpack-plugin",
		"transpiled": true,
		"expectedNames": [
			"CleanWebpackPlugin"
		],
		"detectedNames": [
			"CleanWebpackPlugin"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "redux-logger",
		"transpiled": true,
		"expectedNames": [
			"defaults",
			"createLogger",
			"logger"
		],
		"detectedNames": [],
		"missingNames": [
			"defaults",
			"createLogger",
			"logger"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "htmlparser2",
		"transpiled": true,
		"expectedNames": [
			"Parser",
			"DomHandler",
			"DefaultHandler",
			"parseDOM",
			"createDomStream",
			"Tokenizer",
			"ElementType",
			"EVENTS",
			"FeedHandler",
			"parseFeed",
			"WritableStream",
			"CollectingHandler",
			"DomUtils",
			"RssHandler"
		],
		"detectedNames": [
			"Parser",
			"DomHandler",
			"DefaultHandler",
			"parseDOM",
			"createDomStream",
			"Tokenizer",
			"ElementType",
			"EVENTS",
			"FeedHandler",
			"parseFeed",
			"WritableStream",
			"CollectingHandler",
			"DomUtils",
			"RssHandler"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "html-loader",
		"expectedNames": [
			"raw"
		],
		"detectedNames": [
			"raw"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "filesize",
		"expectedNames": [
			"partial"
		],
		"detectedNames": [],
		"missingNames": [
			"partial"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-plumber",
		"expectedNames": [
			"stop"
		],
		"detectedNames": [
			"stop"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "consolidate",
		"expectedNames": [
			"clearCache",
			"velocityjs",
			"liquid",
			"jade",
			"dust",
			"swig",
			"razor",
			"atpl",
			"liquor",
			"twig",
			"ejs",
			"eco",
			"jazz",
			"jqtpl",
			"haml",
			"hamlet",
			"whiskers",
			"haml-coffee",
			"hogan",
			"templayed",
			"handlebars",
			"underscore",
			"lodash",
			"pug",
			"qejs",
			"walrus",
			"mustache",
			"just",
			"ect",
			"mote",
			"toffee",
			"dot",
			"bracket",
			"ractive",
			"nunjucks",
			"htmling",
			"requireReact",
			"plates",
			"react",
			"arc-templates",
			"vash",
			"slm",
			"marko",
			"teacup",
			"squirrelly",
			"twing",
			"requires"
		],
		"detectedNames": [
			"clearCache",
			"velocityjs",
			"liquid",
			"jade",
			"dust",
			"swig",
			"razor",
			"atpl",
			"liquor",
			"twig",
			"ejs",
			"eco",
			"jazz",
			"jqtpl",
			"haml",
			"hamlet",
			"whiskers",
			"hogan",
			"templayed",
			"handlebars",
			"underscore",
			"lodash",
			"pug",
			"qejs",
			"walrus",
			"mustache",
			"just",
			"ect",
			"mote",
			"toffee",
			"dot",
			"bracket",
			"ractive",
			"nunjucks",
			"htmling",
			"requireReact",
			"plates",
			"react",
			"vash",
			"slm",
			"marko",
			"teacup",
			"squirrelly",
			"twing",
			"requires"
		],
		"missingNames": [
			"haml-coffee",
			"arc-templates"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pkginfo",
		"expectedNames": [
			"find",
			"read",
			"version"
		],
		"detectedNames": [],
		"missingNames": [
			"find",
			"read",
			"version"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "clear",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "should",
		"expectedNames": [
			"AssertionError",
			"Assertion",
			"modules",
			"format",
			"config",
			"extend",
			"noConflict",
			"use",
			"fail",
			"ok",
			"equal",
			"notEqual",
			"deepEqual",
			"notDeepEqual",
			"strictEqual",
			"notStrictEqual",
			"throws",
			"doesNotThrow",
			"ifError",
			"exists",
			"exist",
			"not",
			"_prevShould"
		],
		"detectedNames": [],
		"missingNames": [
			"AssertionError",
			"Assertion",
			"modules",
			"format",
			"config",
			"extend",
			"noConflict",
			"use",
			"fail",
			"ok",
			"equal",
			"notEqual",
			"deepEqual",
			"notDeepEqual",
			"strictEqual",
			"notStrictEqual",
			"throws",
			"doesNotThrow",
			"ifError",
			"exists",
			"exist",
			"not",
			"_prevShould"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "json5",
		"expectedNames": [
			"parse",
			"stringify"
		],
		"detectedNames": [],
		"missingNames": [
			"parse",
			"stringify"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "change-case",
		"transpiled": true,
		"expectedNames": [
			"camelCaseTransform",
			"camelCaseTransformMerge",
			"camelCase",
			"capitalCaseTransform",
			"capitalCase",
			"constantCase",
			"dotCase",
			"headerCase",
			"noCase",
			"paramCase",
			"pascalCaseTransform",
			"pascalCaseTransformMerge",
			"pascalCase",
			"pathCase",
			"sentenceCaseTransform",
			"sentenceCase",
			"snakeCase"
		],
		"detectedNames": [
			"camelCaseTransform",
			"camelCaseTransformMerge",
			"camelCase",
			"capitalCaseTransform",
			"capitalCase",
			"constantCase",
			"dotCase",
			"headerCase",
			"noCase",
			"paramCase",
			"pascalCaseTransform",
			"pascalCaseTransformMerge",
			"pascalCase",
			"pathCase",
			"sentenceCaseTransform",
			"sentenceCase",
			"snakeCase"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/plugin-proposal-object-rest-spread",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-node",
		"expectedNames": [
			"configs",
			"rules"
		],
		"detectedNames": [],
		"missingNames": [
			"configs",
			"rules"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "app-root-path",
		"expectedNames": [
			"resolve",
			"require",
			"toString",
			"setPath",
			"path"
		],
		"detectedNames": [],
		"missingNames": [
			"resolve",
			"require",
			"toString",
			"setPath",
			"path"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "postcss-import",
		"expectedNames": [
			"process"
		],
		"detectedNames": [],
		"missingNames": [
			"process"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "webpack-bundle-analyzer",
		"expectedNames": [
			"start",
			"BundleAnalyzerPlugin"
		],
		"detectedNames": [
			"start",
			"BundleAnalyzerPlugin"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "JSONStream",
		"expectedNames": [
			"parse",
			"stringify",
			"stringifyObject"
		],
		"detectedNames": [
			"parse",
			"stringify",
			"stringifyObject"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pump",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babylon",
		"transpiled": true,
		"expectedNames": [
			"parse",
			"parseExpression",
			"tokTypes"
		],
		"detectedNames": [
			"parse",
			"parseExpression",
			"tokTypes"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mobx",
		"transpiled": true,
		"expectedNames": [
			"IDerivationState",
			"$mobx",
			"FlowCancellationError",
			"ObservableMap",
			"ObservableSet",
			"Reaction",
			"_allowStateChanges",
			"_allowStateChangesInsideComputed",
			"_allowStateReadsEnd",
			"_allowStateReadsStart",
			"_endAction",
			"_getAdministration",
			"_getGlobalState",
			"_interceptReads",
			"_isComputingDerivation",
			"_resetGlobalState",
			"_startAction",
			"action",
			"autorun",
			"comparer",
			"computed",
			"configure",
			"createAtom",
			"decorate",
			"entries",
			"extendObservable",
			"flow",
			"get",
			"getAtom",
			"getDebugName",
			"getDependencyTree",
			"getObserverTree",
			"has",
			"intercept",
			"isAction",
			"isArrayLike",
			"isBoxedObservable",
			"isComputed",
			"isComputedProp",
			"isFlowCancellationError",
			"isObservable",
			"isObservableArray",
			"isObservableMap",
			"isObservableObject",
			"isObservableProp",
			"isObservableSet",
			"keys",
			"observable",
			"observe",
			"onBecomeObserved",
			"onBecomeUnobserved",
			"onReactionError",
			"reaction",
			"remove",
			"runInAction",
			"set",
			"spy",
			"toJS",
			"trace",
			"transaction",
			"untracked",
			"values",
			"when"
		],
		"detectedNames": [
			"IDerivationState",
			"$mobx",
			"FlowCancellationError",
			"ObservableMap",
			"ObservableSet",
			"Reaction",
			"_allowStateChanges",
			"_allowStateChangesInsideComputed",
			"_allowStateReadsEnd",
			"_allowStateReadsStart",
			"_endAction",
			"_getAdministration",
			"_getGlobalState",
			"_interceptReads",
			"_isComputingDerivation",
			"_resetGlobalState",
			"_startAction",
			"action",
			"autorun",
			"comparer",
			"computed",
			"configure",
			"createAtom",
			"decorate",
			"entries",
			"extendObservable",
			"flow",
			"get",
			"getAtom",
			"getDebugName",
			"getDependencyTree",
			"getObserverTree",
			"has",
			"intercept",
			"isAction",
			"isArrayLike",
			"isBoxedObservable",
			"isComputed",
			"isComputedProp",
			"isFlowCancellationError",
			"isObservable",
			"isObservableArray",
			"isObservableMap",
			"isObservableObject",
			"isObservableProp",
			"isObservableSet",
			"keys",
			"observable",
			"observe",
			"onBecomeObserved",
			"onBecomeUnobserved",
			"onReactionError",
			"reaction",
			"remove",
			"runInAction",
			"set",
			"spy",
			"toJS",
			"trace",
			"transaction",
			"untracked",
			"values",
			"when"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "adm-zip",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "deep-extend",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rc",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@angular/material",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-config-standard",
		"expectedNames": [
			"parserOptions",
			"env",
			"plugins",
			"globals",
			"rules"
		],
		"detectedNames": [],
		"missingNames": [
			"parserOptions",
			"env",
			"plugins",
			"globals",
			"rules"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-standard",
		"expectedNames": [
			"rules",
			"rulesConfig"
		],
		"detectedNames": [],
		"missingNames": [
			"rules",
			"rulesConfig"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "once",
		"expectedNames": [
			"strict"
		],
		"detectedNames": [
			"strict"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "numeral",
		"expectedNames": [
			"version",
			"isNumeral",
			"_",
			"options",
			"formats",
			"locales",
			"locale",
			"localeData",
			"reset",
			"zeroFormat",
			"nullFormat",
			"defaultFormat",
			"register",
			"validate",
			"fn"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"isNumeral",
			"_",
			"options",
			"formats",
			"locales",
			"locale",
			"localeData",
			"reset",
			"zeroFormat",
			"nullFormat",
			"defaultFormat",
			"register",
			"validate",
			"fn"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@typescript-eslint/parser",
		"transpiled": true,
		"expectedNames": [
			"parse",
			"parseForESLint",
			"clearCaches",
			"version"
		],
		"detectedNames": [
			"parse",
			"parseForESLint",
			"clearCaches",
			"version"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "prismjs",
		"expectedNames": [
			"manual",
			"disableWorkerMessageHandler",
			"util",
			"languages",
			"plugins",
			"highlightAll",
			"highlightAllUnder",
			"highlightElement",
			"highlight",
			"tokenize",
			"hooks",
			"Token"
		],
		"detectedNames": [],
		"missingNames": [
			"manual",
			"disableWorkerMessageHandler",
			"util",
			"languages",
			"plugins",
			"highlightAll",
			"highlightAllUnder",
			"highlightElement",
			"highlight",
			"tokenize",
			"hooks",
			"Token"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "hapi",
		"expectedNames": [
			"Server",
			"server"
		],
		"detectedNames": [
			"Server",
			"server"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "url-parse",
		"expectedNames": [
			"extractProtocol",
			"location",
			"trimLeft",
			"qs"
		],
		"detectedNames": [],
		"missingNames": [
			"extractProtocol",
			"location",
			"trimLeft",
			"qs"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-react-hooks",
		"expectedNames": [
			"configs",
			"rules"
		],
		"detectedNames": [
			"configs",
			"rules"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "plugin-error",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@typescript-eslint/eslint-plugin",
		"expectedNames": [
			"rules",
			"configs"
		],
		"detectedNames": [
			"rules"
		],
		"missingNames": [
			"configs"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-autoprefixer",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "url-join",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "istanbul",
		"expectedNames": [
			"Instrumenter",
			"Store",
			"Collector",
			"hook",
			"Report",
			"config",
			"Reporter",
			"utils",
			"matcherFor",
			"VERSION",
			"Writer",
			"ContentWriter",
			"FileWriter",
			"_yuiLoadHook",
			"TreeSummarizer",
			"assetsDir"
		],
		"detectedNames": [
			"Instrumenter"
		],
		"missingNames": [
			"Store",
			"Collector",
			"hook",
			"Report",
			"config",
			"Reporter",
			"utils",
			"matcherFor",
			"VERSION",
			"Writer",
			"ContentWriter",
			"FileWriter",
			"_yuiLoadHook",
			"TreeSummarizer",
			"assetsDir"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "echarts",
		"expectedNames": [
			"version",
			"dependencies",
			"PRIORITY",
			"init",
			"connect",
			"disConnect",
			"disconnect",
			"dispose",
			"getInstanceByDom",
			"getInstanceById",
			"registerTheme",
			"registerPreprocessor",
			"registerProcessor",
			"registerPostUpdate",
			"registerAction",
			"registerCoordinateSystem",
			"getCoordinateSystemDimensions",
			"registerLayout",
			"registerVisual",
			"registerLoading",
			"extendComponentModel",
			"extendComponentView",
			"extendSeriesModel",
			"extendChartView",
			"setCanvasCreator",
			"registerMap",
			"getMap",
			"dataTool",
			"zrender",
			"matrix",
			"vector",
			"color",
			"number",
			"format",
			"throttle",
			"helper",
			"parseGeoJSON",
			"List",
			"Model",
			"Axis",
			"env",
			"parseGeoJson",
			"util",
			"graphic"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"dependencies",
			"PRIORITY",
			"init",
			"connect",
			"disConnect",
			"disconnect",
			"dispose",
			"getInstanceByDom",
			"getInstanceById",
			"registerTheme",
			"registerPreprocessor",
			"registerProcessor",
			"registerPostUpdate",
			"registerAction",
			"registerCoordinateSystem",
			"getCoordinateSystemDimensions",
			"registerLayout",
			"registerVisual",
			"registerLoading",
			"extendComponentModel",
			"extendComponentView",
			"extendSeriesModel",
			"extendChartView",
			"setCanvasCreator",
			"registerMap",
			"getMap",
			"dataTool",
			"zrender",
			"matrix",
			"vector",
			"color",
			"number",
			"format",
			"throttle",
			"helper",
			"parseGeoJSON",
			"List",
			"Model",
			"Axis",
			"env",
			"parseGeoJson",
			"util",
			"graphic"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bower",
		"expectedNames": [
			"version",
			"commands",
			"config",
			"abbreviations",
			"reset"
		],
		"detectedNames": [
			"version",
			"commands",
			"config"
		],
		"missingNames": [
			"abbreviations",
			"reset"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "resize-observer-polyfill",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bcryptjs",
		"expectedNames": [
			"setRandomFallback",
			"genSaltSync",
			"genSalt",
			"hashSync",
			"hash",
			"compareSync",
			"compare",
			"getRounds",
			"getSalt",
			"encodeBase64",
			"decodeBase64"
		],
		"detectedNames": [],
		"missingNames": [
			"setRandomFallback",
			"genSaltSync",
			"genSalt",
			"hashSync",
			"hash",
			"compareSync",
			"compare",
			"getRounds",
			"getSalt",
			"encodeBase64",
			"decodeBase64"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.assign",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gm",
		"expectedNames": [
			"subClass",
			"identifyHelpers",
			"utils",
			"compare",
			"version"
		],
		"detectedNames": [
			"utils",
			"compare",
			"version"
		],
		"missingNames": [
			"subClass",
			"identifyHelpers"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-add-module-exports",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "diff",
		"transpiled": true,
		"expectedNames": [
			"Diff",
			"diffChars",
			"diffWords",
			"diffWordsWithSpace",
			"diffLines",
			"diffTrimmedLines",
			"diffSentences",
			"diffCss",
			"diffJson",
			"canonicalize",
			"diffArrays",
			"applyPatch",
			"applyPatches",
			"parsePatch",
			"merge",
			"structuredPatch",
			"createTwoFilesPatch",
			"createPatch",
			"convertChangesToDMP",
			"convertChangesToXML"
		],
		"detectedNames": [
			"Diff",
			"diffChars",
			"diffWords",
			"diffWordsWithSpace",
			"diffLines",
			"diffTrimmedLines",
			"diffSentences",
			"diffCss",
			"diffJson",
			"canonicalize",
			"diffArrays",
			"applyPatch",
			"applyPatches",
			"parsePatch",
			"merge",
			"structuredPatch",
			"createTwoFilesPatch",
			"createPatch",
			"convertChangesToDMP",
			"convertChangesToXML"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "argparse",
		"expectedNames": [
			"ArgumentParser",
			"ArgumentError",
			"ArgumentTypeError",
			"BooleanOptionalAction",
			"FileType",
			"HelpFormatter",
			"ArgumentDefaultsHelpFormatter",
			"RawDescriptionHelpFormatter",
			"RawTextHelpFormatter",
			"MetavarTypeHelpFormatter",
			"Namespace",
			"Action",
			"ONE_OR_MORE",
			"OPTIONAL",
			"PARSER",
			"REMAINDER",
			"SUPPRESS",
			"ZERO_OR_MORE"
		],
		"detectedNames": [
			"ArgumentParser",
			"ArgumentError",
			"ArgumentTypeError",
			"BooleanOptionalAction",
			"FileType",
			"HelpFormatter",
			"ArgumentDefaultsHelpFormatter",
			"RawDescriptionHelpFormatter",
			"RawTextHelpFormatter",
			"MetavarTypeHelpFormatter",
			"Namespace",
			"Action",
			"ONE_OR_MORE",
			"OPTIONAL",
			"PARSER",
			"REMAINDER",
			"SUPPRESS",
			"ZERO_OR_MORE"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "stylelint",
		"expectedNames": [
			"process",
			"utils",
			"lint",
			"rules",
			"formatters",
			"createPlugin",
			"createLinter"
		],
		"detectedNames": [],
		"missingNames": [
			"process",
			"utils",
			"lint",
			"rules",
			"formatters",
			"createPlugin",
			"createLinter"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "string",
		"expectedNames": [
			"extendPrototype",
			"restorePrototype",
			"VERSION",
			"TMPL_OPEN",
			"TMPL_CLOSE",
			"ENTITIES"
		],
		"detectedNames": [],
		"missingNames": [
			"extendPrototype",
			"restorePrototype",
			"VERSION",
			"TMPL_OPEN",
			"TMPL_CLOSE",
			"ENTITIES"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "protobufjs",
		"expectedNames": [
			"build",
			"Writer",
			"BufferWriter",
			"Reader",
			"BufferReader",
			"util",
			"rpc",
			"roots",
			"configure",
			"load",
			"loadSync",
			"encoder",
			"decoder",
			"verifier",
			"converter",
			"ReflectionObject",
			"Namespace",
			"Root",
			"Enum",
			"Type",
			"Field",
			"OneOf",
			"MapField",
			"Service",
			"Method",
			"Message",
			"wrappers",
			"types",
			"tokenize",
			"parse",
			"common"
		],
		"detectedNames": [],
		"missingNames": [
			"build",
			"Writer",
			"BufferWriter",
			"Reader",
			"BufferReader",
			"util",
			"rpc",
			"roots",
			"configure",
			"load",
			"loadSync",
			"encoder",
			"decoder",
			"verifier",
			"converter",
			"ReflectionObject",
			"Namespace",
			"Root",
			"Enum",
			"Type",
			"Field",
			"OneOf",
			"MapField",
			"Service",
			"Method",
			"Message",
			"wrappers",
			"types",
			"tokenize",
			"parse",
			"common"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "find-up",
		"expectedNames": [
			"sync",
			"exists",
			"stop"
		],
		"detectedNames": [
			"sync",
			"exists",
			"stop"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "esm",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "sprintf-js",
		"expectedNames": [
			"sprintf",
			"vsprintf"
		],
		"detectedNames": [
			"sprintf",
			"vsprintf"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rollup-plugin-node-resolve",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "configstore",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "download",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "traverse",
		"expectedNames": [
			"get",
			"has",
			"set",
			"map",
			"forEach",
			"reduce",
			"paths",
			"nodes",
			"clone"
		],
		"detectedNames": [],
		"missingNames": [
			"get",
			"has",
			"set",
			"map",
			"forEach",
			"reduce",
			"paths",
			"nodes",
			"clone"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "websocket",
		"expectedNames": [
			"server",
			"client",
			"router",
			"frame",
			"request",
			"connection",
			"w3cwebsocket",
			"deprecation",
			"version"
		],
		"detectedNames": [
			"server"
		],
		"missingNames": [
			"client",
			"router",
			"frame",
			"request",
			"connection",
			"w3cwebsocket",
			"deprecation",
			"version"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bs58",
		"expectedNames": [
			"encode",
			"decodeUnsafe",
			"decode"
		],
		"detectedNames": [],
		"missingNames": [
			"encode",
			"decodeUnsafe",
			"decode"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "googleapis",
		"transpiled": true,
		"expectedNames": [
			"google",
			"GoogleApis",
			"Common",
			"Auth",
			"abusiveexperiencereport_v1",
			"acceleratedmobilepageurl_v1",
			"accessapproval_v1",
			"accessapproval_v1beta1",
			"accesscontextmanager_v1",
			"accesscontextmanager_v1beta",
			"adexchangebuyer_v1_2",
			"adexchangebuyer_v1_3",
			"adexchangebuyer_v1_4",
			"adexchangebuyer2_v2beta1",
			"adexperiencereport_v1",
			"admin_datatransfer_v1",
			"admin_directory_v1",
			"admin_reports_v1",
			"admob_v1",
			"adsense_v1_4",
			"adsensehost_v4_1",
			"alertcenter_v1beta1",
			"analytics_v3",
			"analyticsreporting_v4",
			"androiddeviceprovisioning_v1",
			"androidenterprise_v1",
			"androidmanagement_v1",
			"androidpublisher_v1_1",
			"androidpublisher_v1",
			"androidpublisher_v2",
			"androidpublisher_v3",
			"appengine_v1",
			"appengine_v1alpha",
			"appengine_v1beta",
			"appsactivity_v1",
			"artifactregistry_v1beta1",
			"bigquery_v2",
			"bigqueryconnection_v1beta1",
			"bigquerydatatransfer_v1",
			"bigqueryreservation_v1",
			"bigqueryreservation_v1alpha2",
			"bigqueryreservation_v1beta1",
			"bigtableadmin_v1",
			"bigtableadmin_v2",
			"billingbudgets_v1beta1",
			"binaryauthorization_v1",
			"binaryauthorization_v1beta1",
			"blogger_v2",
			"blogger_v3",
			"books_v1",
			"calendar_v3",
			"chat_v1",
			"chromeuxreport_v1",
			"civicinfo_v2",
			"classroom_v1",
			"cloudasset_v1",
			"cloudasset_v1beta1",
			"cloudasset_v1p1beta1",
			"cloudasset_v1p4beta1",
			"cloudasset_v1p5beta1",
			"cloudbilling_v1",
			"cloudbuild_v1",
			"cloudbuild_v1alpha1",
			"cloudbuild_v1alpha2",
			"clouddebugger_v2",
			"clouderrorreporting_v1beta1",
			"cloudfunctions_v1",
			"cloudfunctions_v1beta2",
			"cloudidentity_v1",
			"cloudidentity_v1beta1",
			"cloudiot_v1",
			"cloudkms_v1",
			"cloudprofiler_v2",
			"cloudresourcemanager_v1",
			"cloudresourcemanager_v1beta1",
			"cloudresourcemanager_v2",
			"cloudresourcemanager_v2beta1",
			"cloudscheduler_v1",
			"cloudscheduler_v1beta1",
			"cloudsearch_v1",
			"cloudshell_v1",
			"cloudshell_v1alpha1",
			"cloudtasks_v2",
			"cloudtasks_v2beta2",
			"cloudtasks_v2beta3",
			"cloudtrace_v1",
			"cloudtrace_v2",
			"cloudtrace_v2beta1",
			"composer_v1",
			"composer_v1beta1",
			"compute_alpha",
			"compute_beta",
			"compute_v1",
			"container_v1",
			"container_v1beta1",
			"containeranalysis_v1alpha1",
			"containeranalysis_v1beta1",
			"content_v2_1",
			"content_v2",
			"customsearch_v1",
			"datacatalog_v1beta1",
			"dataflow_v1b3",
			"datafusion_v1",
			"datafusion_v1beta1",
			"dataproc_v1",
			"dataproc_v1beta2",
			"datastore_v1",
			"datastore_v1beta1",
			"datastore_v1beta3",
			"deploymentmanager_alpha",
			"deploymentmanager_v2",
			"deploymentmanager_v2beta",
			"dfareporting_v3_3",
			"dfareporting_v3_4",
			"dialogflow_v2",
			"dialogflow_v2beta1",
			"digitalassetlinks_v1",
			"discovery_v1",
			"displayvideo_v1",
			"dlp_v2",
			"dns_v1",
			"dns_v1beta2",
			"dns_v2beta1",
			"docs_v1",
			"documentai_v1beta2",
			"domainsrdap_v1",
			"doubleclickbidmanager_v1_1",
			"doubleclickbidmanager_v1",
			"doubleclicksearch_v2",
			"drive_v2",
			"drive_v3",
			"driveactivity_v2",
			"factchecktools_v1alpha1",
			"fcm_v1",
			"file_v1",
			"file_v1beta1",
			"firebase_v1beta1",
			"firebasedynamiclinks_v1",
			"firebasehosting_v1",
			"firebasehosting_v1beta1",
			"firebaseml_v1",
			"firebaseml_v1beta2",
			"firebaserules_v1",
			"firestore_v1",
			"firestore_v1beta1",
			"firestore_v1beta2",
			"fitness_v1",
			"games_v1",
			"gamesConfiguration_v1configuration",
			"gamesManagement_v1management",
			"gameservices_v1",
			"gameservices_v1beta",
			"genomics_v1",
			"genomics_v1alpha2",
			"genomics_v2alpha1",
			"gmail_v1",
			"gmailpostmastertools_v1beta1",
			"groupsmigration_v1",
			"groupssettings_v1",
			"healthcare_v1",
			"healthcare_v1beta1",
			"homegraph_v1",
			"iam_v1",
			"iamcredentials_v1",
			"iap_v1",
			"iap_v1beta1",
			"identitytoolkit_v3",
			"indexing_v3",
			"jobs_v2",
			"jobs_v3",
			"jobs_v3p1beta1",
			"kgsearch_v1",
			"language_v1",
			"language_v1beta1",
			"language_v1beta2",
			"libraryagent_v1",
			"licensing_v1",
			"lifesciences_v2beta",
			"logging_v2",
			"managedidentities_v1",
			"managedidentities_v1alpha1",
			"managedidentities_v1beta1",
			"manufacturers_v1",
			"memcache_v1",
			"memcache_v1beta2",
			"ml_v1",
			"monitoring_v1",
			"monitoring_v3",
			"networkmanagement_v1",
			"networkmanagement_v1beta1",
			"oauth2_v2",
			"osconfig_v1",
			"osconfig_v1beta",
			"oslogin_v1",
			"oslogin_v1alpha",
			"oslogin_v1beta",
			"pagespeedonline_v5",
			"people_v1",
			"playablelocations_v3",
			"playcustomapp_v1",
			"plus_v1",
			"policytroubleshooter_v1",
			"policytroubleshooter_v1beta",
			"poly_v1",
			"prod_tt_sasportal_v1alpha1",
			"pubsub_v1",
			"pubsub_v1beta1a",
			"pubsub_v1beta2",
			"pubsublite_v1",
			"realtimebidding_v1",
			"recommendationengine_v1beta1",
			"recommender_v1",
			"recommender_v1beta1",
			"redis_v1",
			"redis_v1beta1",
			"remotebuildexecution_v1",
			"remotebuildexecution_v1alpha",
			"remotebuildexecution_v2",
			"reseller_v1",
			"run_v1",
			"run_v1alpha1",
			"run_v1beta1",
			"runtimeconfig_v1",
			"runtimeconfig_v1beta1",
			"safebrowsing_v4",
			"sasportal_v1alpha1",
			"script_v1",
			"searchconsole_v1",
			"secretmanager_v1",
			"secretmanager_v1beta1",
			"securitycenter_v1",
			"securitycenter_v1beta1",
			"securitycenter_v1p1alpha1",
			"securitycenter_v1p1beta1",
			"serviceconsumermanagement_v1",
			"serviceconsumermanagement_v1beta1",
			"servicecontrol_v1",
			"servicecontrol_v2",
			"servicedirectory_v1beta1",
			"servicemanagement_v1",
			"servicenetworking_v1",
			"servicenetworking_v1beta",
			"serviceusage_v1",
			"serviceusage_v1beta1",
			"sheets_v4",
			"siteVerification_v1",
			"slides_v1",
			"sourcerepo_v1",
			"spanner_v1",
			"speech_v1",
			"speech_v1p1beta1",
			"speech_v2beta1",
			"sql_v1beta4",
			"storage_v1",
			"storage_v1beta2",
			"storagetransfer_v1",
			"streetviewpublish_v1",
			"tagmanager_v1",
			"tagmanager_v2",
			"tasks_v1",
			"testing_v1",
			"texttospeech_v1",
			"texttospeech_v1beta1",
			"toolresults_v1beta3",
			"tpu_v1",
			"tpu_v1alpha1",
			"translate_v2",
			"translate_v3",
			"translate_v3beta1",
			"vault_v1",
			"vectortile_v1",
			"verifiedaccess_v1",
			"videointelligence_v1",
			"videointelligence_v1beta2",
			"videointelligence_v1p1beta1",
			"videointelligence_v1p2beta1",
			"videointelligence_v1p3beta1",
			"vision_v1",
			"vision_v1p1beta1",
			"vision_v1p2beta1",
			"webfonts_v1",
			"webmasters_v3",
			"websecurityscanner_v1",
			"websecurityscanner_v1alpha",
			"websecurityscanner_v1beta",
			"youtube_v3",
			"youtubeAnalytics_v1",
			"youtubeAnalytics_v2",
			"youtubereporting_v1"
		],
		"detectedNames": [
			"google",
			"GoogleApis",
			"Common",
			"Auth",
			"abusiveexperiencereport_v1",
			"acceleratedmobilepageurl_v1",
			"accessapproval_v1",
			"accessapproval_v1beta1",
			"accesscontextmanager_v1",
			"accesscontextmanager_v1beta",
			"adexchangebuyer_v1_2",
			"adexchangebuyer_v1_3",
			"adexchangebuyer_v1_4",
			"adexchangebuyer2_v2beta1",
			"adexperiencereport_v1",
			"admin_datatransfer_v1",
			"admin_directory_v1",
			"admin_reports_v1",
			"admob_v1",
			"adsense_v1_4",
			"adsensehost_v4_1",
			"alertcenter_v1beta1",
			"analytics_v3",
			"analyticsreporting_v4",
			"androiddeviceprovisioning_v1",
			"androidenterprise_v1",
			"androidmanagement_v1",
			"androidpublisher_v1_1",
			"androidpublisher_v1",
			"androidpublisher_v2",
			"androidpublisher_v3",
			"appengine_v1",
			"appengine_v1alpha",
			"appengine_v1beta",
			"appsactivity_v1",
			"artifactregistry_v1beta1",
			"bigquery_v2",
			"bigqueryconnection_v1beta1",
			"bigquerydatatransfer_v1",
			"bigqueryreservation_v1",
			"bigqueryreservation_v1alpha2",
			"bigqueryreservation_v1beta1",
			"bigtableadmin_v1",
			"bigtableadmin_v2",
			"billingbudgets_v1beta1",
			"binaryauthorization_v1",
			"binaryauthorization_v1beta1",
			"blogger_v2",
			"blogger_v3",
			"books_v1",
			"calendar_v3",
			"chat_v1",
			"chromeuxreport_v1",
			"civicinfo_v2",
			"classroom_v1",
			"cloudasset_v1",
			"cloudasset_v1beta1",
			"cloudasset_v1p1beta1",
			"cloudasset_v1p4beta1",
			"cloudasset_v1p5beta1",
			"cloudbilling_v1",
			"cloudbuild_v1",
			"cloudbuild_v1alpha1",
			"cloudbuild_v1alpha2",
			"clouddebugger_v2",
			"clouderrorreporting_v1beta1",
			"cloudfunctions_v1",
			"cloudfunctions_v1beta2",
			"cloudidentity_v1",
			"cloudidentity_v1beta1",
			"cloudiot_v1",
			"cloudkms_v1",
			"cloudprofiler_v2",
			"cloudresourcemanager_v1",
			"cloudresourcemanager_v1beta1",
			"cloudresourcemanager_v2",
			"cloudresourcemanager_v2beta1",
			"cloudscheduler_v1",
			"cloudscheduler_v1beta1",
			"cloudsearch_v1",
			"cloudshell_v1",
			"cloudshell_v1alpha1",
			"cloudtasks_v2",
			"cloudtasks_v2beta2",
			"cloudtasks_v2beta3",
			"cloudtrace_v1",
			"cloudtrace_v2",
			"cloudtrace_v2beta1",
			"composer_v1",
			"composer_v1beta1",
			"compute_alpha",
			"compute_beta",
			"compute_v1",
			"container_v1",
			"container_v1beta1",
			"containeranalysis_v1alpha1",
			"containeranalysis_v1beta1",
			"content_v2_1",
			"content_v2",
			"customsearch_v1",
			"datacatalog_v1beta1",
			"dataflow_v1b3",
			"datafusion_v1",
			"datafusion_v1beta1",
			"dataproc_v1",
			"dataproc_v1beta2",
			"datastore_v1",
			"datastore_v1beta1",
			"datastore_v1beta3",
			"deploymentmanager_alpha",
			"deploymentmanager_v2",
			"deploymentmanager_v2beta",
			"dfareporting_v3_3",
			"dfareporting_v3_4",
			"dialogflow_v2",
			"dialogflow_v2beta1",
			"digitalassetlinks_v1",
			"discovery_v1",
			"displayvideo_v1",
			"dlp_v2",
			"dns_v1",
			"dns_v1beta2",
			"dns_v2beta1",
			"docs_v1",
			"documentai_v1beta2",
			"domainsrdap_v1",
			"doubleclickbidmanager_v1_1",
			"doubleclickbidmanager_v1",
			"doubleclicksearch_v2",
			"drive_v2",
			"drive_v3",
			"driveactivity_v2",
			"factchecktools_v1alpha1",
			"fcm_v1",
			"file_v1",
			"file_v1beta1",
			"firebase_v1beta1",
			"firebasedynamiclinks_v1",
			"firebasehosting_v1",
			"firebasehosting_v1beta1",
			"firebaseml_v1",
			"firebaseml_v1beta2",
			"firebaserules_v1",
			"firestore_v1",
			"firestore_v1beta1",
			"firestore_v1beta2",
			"fitness_v1",
			"games_v1",
			"gamesConfiguration_v1configuration",
			"gamesManagement_v1management",
			"gameservices_v1",
			"gameservices_v1beta",
			"genomics_v1",
			"genomics_v1alpha2",
			"genomics_v2alpha1",
			"gmail_v1",
			"gmailpostmastertools_v1beta1",
			"groupsmigration_v1",
			"groupssettings_v1",
			"healthcare_v1",
			"healthcare_v1beta1",
			"homegraph_v1",
			"iam_v1",
			"iamcredentials_v1",
			"iap_v1",
			"iap_v1beta1",
			"identitytoolkit_v3",
			"indexing_v3",
			"jobs_v2",
			"jobs_v3",
			"jobs_v3p1beta1",
			"kgsearch_v1",
			"language_v1",
			"language_v1beta1",
			"language_v1beta2",
			"libraryagent_v1",
			"licensing_v1",
			"lifesciences_v2beta",
			"logging_v2",
			"managedidentities_v1",
			"managedidentities_v1alpha1",
			"managedidentities_v1beta1",
			"manufacturers_v1",
			"memcache_v1",
			"memcache_v1beta2",
			"ml_v1",
			"monitoring_v1",
			"monitoring_v3",
			"networkmanagement_v1",
			"networkmanagement_v1beta1",
			"oauth2_v2",
			"osconfig_v1",
			"osconfig_v1beta",
			"oslogin_v1",
			"oslogin_v1alpha",
			"oslogin_v1beta",
			"pagespeedonline_v5",
			"people_v1",
			"playablelocations_v3",
			"playcustomapp_v1",
			"plus_v1",
			"policytroubleshooter_v1",
			"policytroubleshooter_v1beta",
			"poly_v1",
			"prod_tt_sasportal_v1alpha1",
			"pubsub_v1",
			"pubsub_v1beta1a",
			"pubsub_v1beta2",
			"pubsublite_v1",
			"realtimebidding_v1",
			"recommendationengine_v1beta1",
			"recommender_v1",
			"recommender_v1beta1",
			"redis_v1",
			"redis_v1beta1",
			"remotebuildexecution_v1",
			"remotebuildexecution_v1alpha",
			"remotebuildexecution_v2",
			"reseller_v1",
			"run_v1",
			"run_v1alpha1",
			"run_v1beta1",
			"runtimeconfig_v1",
			"runtimeconfig_v1beta1",
			"safebrowsing_v4",
			"sasportal_v1alpha1",
			"script_v1",
			"searchconsole_v1",
			"secretmanager_v1",
			"secretmanager_v1beta1",
			"securitycenter_v1",
			"securitycenter_v1beta1",
			"securitycenter_v1p1alpha1",
			"securitycenter_v1p1beta1",
			"serviceconsumermanagement_v1",
			"serviceconsumermanagement_v1beta1",
			"servicecontrol_v1",
			"servicecontrol_v2",
			"servicedirectory_v1beta1",
			"servicemanagement_v1",
			"servicenetworking_v1",
			"servicenetworking_v1beta",
			"serviceusage_v1",
			"serviceusage_v1beta1",
			"sheets_v4",
			"siteVerification_v1",
			"slides_v1",
			"sourcerepo_v1",
			"spanner_v1",
			"speech_v1",
			"speech_v1p1beta1",
			"speech_v2beta1",
			"sql_v1beta4",
			"storage_v1",
			"storage_v1beta2",
			"storagetransfer_v1",
			"streetviewpublish_v1",
			"tagmanager_v1",
			"tagmanager_v2",
			"tasks_v1",
			"testing_v1",
			"texttospeech_v1",
			"texttospeech_v1beta1",
			"toolresults_v1beta3",
			"tpu_v1",
			"tpu_v1alpha1",
			"translate_v2",
			"translate_v3",
			"translate_v3beta1",
			"vault_v1",
			"vectortile_v1",
			"verifiedaccess_v1",
			"videointelligence_v1",
			"videointelligence_v1beta2",
			"videointelligence_v1p1beta1",
			"videointelligence_v1p2beta1",
			"videointelligence_v1p3beta1",
			"vision_v1",
			"vision_v1p1beta1",
			"vision_v1p2beta1",
			"webfonts_v1",
			"webmasters_v3",
			"websecurityscanner_v1",
			"websecurityscanner_v1alpha",
			"websecurityscanner_v1beta",
			"youtube_v3",
			"youtubeAnalytics_v1",
			"youtubeAnalytics_v2",
			"youtubereporting_v1"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "method-override",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "formidable",
		"expectedNames": [
			"IncomingForm"
		],
		"detectedNames": [],
		"missingNames": [
			"IncomingForm"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "tape",
		"expectedNames": [
			"only",
			"createStream",
			"onFinish",
			"onFailure",
			"getHarness",
			"createHarness",
			"Test",
			"test",
			"skip"
		],
		"detectedNames": [
			"createHarness",
			"Test",
			"test"
		],
		"missingNames": [
			"only",
			"createStream",
			"onFinish",
			"onFailure",
			"getHarness",
			"skip"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "karma",
		"expectedNames": [
			"constants",
			"VERSION",
			"Server",
			"runner",
			"stopper",
			"launcher",
			"config",
			"server"
		],
		"detectedNames": [
			"constants",
			"VERSION"
		],
		"missingNames": [
			"Server",
			"runner",
			"stopper",
			"launcher",
			"config",
			"server"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "json-stringify-safe",
		"expectedNames": [
			"getSerialize"
		],
		"detectedNames": [
			"getSerialize"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "elasticsearch",
		"expectedNames": [
			"Client",
			"ConnectionPool",
			"Transport",
			"errors"
		],
		"detectedNames": [],
		"missingNames": [
			"Client",
			"ConnectionPool",
			"Transport",
			"errors"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "split",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "safe-buffer",
		"expectedNames": [
			"Buffer",
			"SlowBuffer",
			"transcode",
			"kMaxLength",
			"kStringMaxLength",
			"constants",
			"INSPECT_MAX_BYTES"
		],
		"detectedNames": [
			"Buffer"
		],
		"missingNames": [
			"SlowBuffer",
			"transcode",
			"kMaxLength",
			"kStringMaxLength",
			"constants",
			"INSPECT_MAX_BYTES"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rsvp",
		"transpiled": true,
		"expectedNames": [
			"asap",
			"cast",
			"Promise",
			"EventTarget",
			"all",
			"allSettled",
			"race",
			"hash",
			"hashSettled",
			"rethrow",
			"defer",
			"denodeify",
			"configure",
			"on",
			"off",
			"resolve",
			"reject",
			"map",
			"async",
			"filter"
		],
		"detectedNames": [
			"asap",
			"cast",
			"Promise",
			"EventTarget",
			"all",
			"allSettled",
			"race",
			"hash",
			"hashSettled",
			"rethrow",
			"defer",
			"denodeify",
			"configure",
			"on",
			"off",
			"resolve",
			"reject",
			"map",
			"async",
			"filter"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@oclif/plugin-help",
		"transpiled": true,
		"expectedNames": [
			"getHelpClass",
			"HelpBase",
			"Help"
		],
		"detectedNames": [
			"getHelpClass",
			"HelpBase",
			"Help"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "xlsx",
		"expectedNames": [
			"version",
			"stream",
			"parse_xlscfb",
			"parse_zip",
			"read",
			"readFile",
			"readFileSync",
			"write",
			"writeFile",
			"writeFileSync",
			"writeFileAsync",
			"utils",
			"SSF",
			"CFB"
		],
		"detectedNames": [
			"version",
			"read",
			"write",
			"writeFile",
			"utils"
		],
		"missingNames": [
			"stream",
			"parse_xlscfb",
			"parse_zip",
			"readFile",
			"readFileSync",
			"writeFileSync",
			"writeFileAsync",
			"SSF",
			"CFB"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "tinycolor2",
		"expectedNames": [
			"fromRatio",
			"equals",
			"random",
			"mix",
			"readability",
			"isReadable",
			"mostReadable",
			"names",
			"hexNames"
		],
		"detectedNames": [],
		"missingNames": [
			"fromRatio",
			"equals",
			"random",
			"mix",
			"readability",
			"isReadable",
			"mostReadable",
			"names",
			"hexNames"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/plugin-proposal-decorators",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "connect-history-api-fallback",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jsonschema",
		"expectedNames": [
			"Validator",
			"ValidatorResult",
			"ValidationError",
			"SchemaError",
			"SchemaScanResult",
			"scan",
			"validate"
		],
		"detectedNames": [
			"Validator",
			"ValidatorResult",
			"ValidationError",
			"SchemaError",
			"SchemaScanResult",
			"scan",
			"validate"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "portfinder",
		"expectedNames": [
			"basePort",
			"highestPort",
			"basePath",
			"getPort",
			"getPortPromise",
			"getPorts",
			"getSocket",
			"nextPort",
			"nextSocket",
			"_defaultHosts"
		],
		"detectedNames": [
			"basePort",
			"highestPort",
			"basePath",
			"getPort",
			"getPortPromise",
			"getPorts",
			"getSocket",
			"nextPort",
			"nextSocket",
			"_defaultHosts"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "boxen",
		"expectedNames": [
			"_borderStyles"
		],
		"detectedNames": [
			"_borderStyles"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "css",
		"expectedNames": [
			"parse",
			"stringify"
		],
		"detectedNames": [
			"parse",
			"stringify"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "elliptic",
		"expectedNames": [
			"version",
			"utils",
			"rand",
			"curve",
			"curves",
			"ec",
			"eddsa"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"utils",
			"rand",
			"curve",
			"curves",
			"ec",
			"eddsa"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "http-errors",
		"expectedNames": [
			"400",
			"401",
			"402",
			"403",
			"404",
			"405",
			"406",
			"407",
			"408",
			"409",
			"410",
			"411",
			"412",
			"413",
			"414",
			"415",
			"416",
			"417",
			"418",
			"421",
			"422",
			"423",
			"424",
			"425",
			"426",
			"428",
			"429",
			"431",
			"451",
			"500",
			"501",
			"502",
			"503",
			"504",
			"505",
			"506",
			"507",
			"508",
			"509",
			"510",
			"511",
			"HttpError",
			"isHttpError",
			"BadRequest",
			"Unauthorized",
			"PaymentRequired",
			"Forbidden",
			"NotFound",
			"MethodNotAllowed",
			"NotAcceptable",
			"ProxyAuthenticationRequired",
			"RequestTimeout",
			"Conflict",
			"Gone",
			"LengthRequired",
			"PreconditionFailed",
			"PayloadTooLarge",
			"URITooLong",
			"UnsupportedMediaType",
			"RangeNotSatisfiable",
			"ExpectationFailed",
			"ImATeapot",
			"MisdirectedRequest",
			"UnprocessableEntity",
			"Locked",
			"FailedDependency",
			"UnorderedCollection",
			"UpgradeRequired",
			"PreconditionRequired",
			"TooManyRequests",
			"RequestHeaderFieldsTooLarge",
			"UnavailableForLegalReasons",
			"InternalServerError",
			"NotImplemented",
			"BadGateway",
			"ServiceUnavailable",
			"GatewayTimeout",
			"HTTPVersionNotSupported",
			"VariantAlsoNegotiates",
			"InsufficientStorage",
			"LoopDetected",
			"BandwidthLimitExceeded",
			"NotExtended",
			"NetworkAuthenticationRequired",
			"I'mateapot"
		],
		"detectedNames": [
			"HttpError",
			"isHttpError"
		],
		"missingNames": [
			"400",
			"401",
			"402",
			"403",
			"404",
			"405",
			"406",
			"407",
			"408",
			"409",
			"410",
			"411",
			"412",
			"413",
			"414",
			"415",
			"416",
			"417",
			"418",
			"421",
			"422",
			"423",
			"424",
			"425",
			"426",
			"428",
			"429",
			"431",
			"451",
			"500",
			"501",
			"502",
			"503",
			"504",
			"505",
			"506",
			"507",
			"508",
			"509",
			"510",
			"511",
			"BadRequest",
			"Unauthorized",
			"PaymentRequired",
			"Forbidden",
			"NotFound",
			"MethodNotAllowed",
			"NotAcceptable",
			"ProxyAuthenticationRequired",
			"RequestTimeout",
			"Conflict",
			"Gone",
			"LengthRequired",
			"PreconditionFailed",
			"PayloadTooLarge",
			"URITooLong",
			"UnsupportedMediaType",
			"RangeNotSatisfiable",
			"ExpectationFailed",
			"ImATeapot",
			"MisdirectedRequest",
			"UnprocessableEntity",
			"Locked",
			"FailedDependency",
			"UnorderedCollection",
			"UpgradeRequired",
			"PreconditionRequired",
			"TooManyRequests",
			"RequestHeaderFieldsTooLarge",
			"UnavailableForLegalReasons",
			"InternalServerError",
			"NotImplemented",
			"BadGateway",
			"ServiceUnavailable",
			"GatewayTimeout",
			"HTTPVersionNotSupported",
			"VariantAlsoNegotiates",
			"InsufficientStorage",
			"LoopDetected",
			"BandwidthLimitExceeded",
			"NotExtended",
			"NetworkAuthenticationRequired",
			"I'mateapot"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "co-prompt",
		"expectedNames": [
			"multiline",
			"confirm",
			"password"
		],
		"detectedNames": [
			"multiline",
			"confirm",
			"password"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "walk",
		"expectedNames": [
			"walk",
			"walkSync"
		],
		"detectedNames": [
			"walk",
			"walkSync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "restify",
		"expectedNames": [
			"bunyan",
			"createServer",
			"formatters",
			"plugins",
			"pre",
			"helpers"
		],
		"detectedNames": [
			"bunyan",
			"createServer",
			"formatters",
			"plugins",
			"pre",
			"helpers"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "three",
		"transpiled": true,
		"expectedNames": [
			"ACESFilmicToneMapping",
			"AddEquation",
			"AddOperation",
			"AdditiveAnimationBlendMode",
			"AdditiveBlending",
			"AlphaFormat",
			"AlwaysDepth",
			"AlwaysStencilFunc",
			"AmbientLight",
			"AmbientLightProbe",
			"AnimationClip",
			"AnimationLoader",
			"AnimationMixer",
			"AnimationObjectGroup",
			"AnimationUtils",
			"ArcCurve",
			"ArrayCamera",
			"ArrowHelper",
			"Audio",
			"AudioAnalyser",
			"AudioContext",
			"AudioListener",
			"AudioLoader",
			"AxesHelper",
			"AxisHelper",
			"BackSide",
			"BasicDepthPacking",
			"BasicShadowMap",
			"BinaryTextureLoader",
			"Bone",
			"BooleanKeyframeTrack",
			"BoundingBoxHelper",
			"Box2",
			"Box3",
			"Box3Helper",
			"BoxBufferGeometry",
			"BoxGeometry",
			"BoxHelper",
			"BufferAttribute",
			"BufferGeometry",
			"BufferGeometryLoader",
			"ByteType",
			"Cache",
			"Camera",
			"CameraHelper",
			"CanvasRenderer",
			"CanvasTexture",
			"CatmullRomCurve3",
			"CineonToneMapping",
			"CircleBufferGeometry",
			"CircleGeometry",
			"ClampToEdgeWrapping",
			"Clock",
			"ClosedSplineCurve3",
			"Color",
			"ColorKeyframeTrack",
			"CompressedTexture",
			"CompressedTextureLoader",
			"ConeBufferGeometry",
			"ConeGeometry",
			"CubeCamera",
			"CubeGeometry",
			"CubeReflectionMapping",
			"CubeRefractionMapping",
			"CubeTexture",
			"CubeTextureLoader",
			"CubeUVReflectionMapping",
			"CubeUVRefractionMapping",
			"CubicBezierCurve",
			"CubicBezierCurve3",
			"CubicInterpolant",
			"CullFaceBack",
			"CullFaceFront",
			"CullFaceFrontBack",
			"CullFaceNone",
			"Curve",
			"CurvePath",
			"CustomBlending",
			"CustomToneMapping",
			"CylinderBufferGeometry",
			"CylinderGeometry",
			"Cylindrical",
			"DataTexture",
			"DataTexture2DArray",
			"DataTexture3D",
			"DataTextureLoader",
			"DecrementStencilOp",
			"DecrementWrapStencilOp",
			"DefaultLoadingManager",
			"DepthFormat",
			"DepthStencilFormat",
			"DepthTexture",
			"DirectionalLight",
			"DirectionalLightHelper",
			"DiscreteInterpolant",
			"DodecahedronBufferGeometry",
			"DodecahedronGeometry",
			"DoubleSide",
			"DstAlphaFactor",
			"DstColorFactor",
			"DynamicBufferAttribute",
			"DynamicCopyUsage",
			"DynamicDrawUsage",
			"DynamicReadUsage",
			"EdgesGeometry",
			"EdgesHelper",
			"EllipseCurve",
			"EqualDepth",
			"EqualStencilFunc",
			"EquirectangularReflectionMapping",
			"EquirectangularRefractionMapping",
			"Euler",
			"EventDispatcher",
			"ExtrudeBufferGeometry",
			"ExtrudeGeometry",
			"Face3",
			"Face4",
			"FaceColors",
			"FileLoader",
			"FlatShading",
			"Float32Attribute",
			"Float32BufferAttribute",
			"Float64Attribute",
			"Float64BufferAttribute",
			"FloatType",
			"Fog",
			"FogExp2",
			"Font",
			"FontLoader",
			"FrontSide",
			"Frustum",
			"GLBufferAttribute",
			"GLSL1",
			"GLSL3",
			"GammaEncoding",
			"Geometry",
			"GeometryUtils",
			"GreaterDepth",
			"GreaterEqualDepth",
			"GreaterEqualStencilFunc",
			"GreaterStencilFunc",
			"GridHelper",
			"Group",
			"HalfFloatType",
			"HemisphereLight",
			"HemisphereLightHelper",
			"HemisphereLightProbe",
			"IcosahedronBufferGeometry",
			"IcosahedronGeometry",
			"ImageBitmapLoader",
			"ImageLoader",
			"ImageUtils",
			"ImmediateRenderObject",
			"IncrementStencilOp",
			"IncrementWrapStencilOp",
			"InstancedBufferAttribute",
			"InstancedBufferGeometry",
			"InstancedInterleavedBuffer",
			"InstancedMesh",
			"Int16Attribute",
			"Int16BufferAttribute",
			"Int32Attribute",
			"Int32BufferAttribute",
			"Int8Attribute",
			"Int8BufferAttribute",
			"IntType",
			"InterleavedBuffer",
			"InterleavedBufferAttribute",
			"Interpolant",
			"InterpolateDiscrete",
			"InterpolateLinear",
			"InterpolateSmooth",
			"InvertStencilOp",
			"JSONLoader",
			"KeepStencilOp",
			"KeyframeTrack",
			"LOD",
			"LatheBufferGeometry",
			"LatheGeometry",
			"Layers",
			"LensFlare",
			"LessDepth",
			"LessEqualDepth",
			"LessEqualStencilFunc",
			"LessStencilFunc",
			"Light",
			"LightProbe",
			"LightShadow",
			"Line",
			"Line3",
			"LineBasicMaterial",
			"LineCurve",
			"LineCurve3",
			"LineDashedMaterial",
			"LineLoop",
			"LinePieces",
			"LineSegments",
			"LineStrip",
			"LinearEncoding",
			"LinearFilter",
			"LinearInterpolant",
			"LinearMipMapLinearFilter",
			"LinearMipMapNearestFilter",
			"LinearMipmapLinearFilter",
			"LinearMipmapNearestFilter",
			"LinearToneMapping",
			"Loader",
			"LoaderUtils",
			"LoadingManager",
			"LogLuvEncoding",
			"LoopOnce",
			"LoopPingPong",
			"LoopRepeat",
			"LuminanceAlphaFormat",
			"LuminanceFormat",
			"MOUSE",
			"Material",
			"MaterialLoader",
			"Math",
			"MathUtils",
			"Matrix3",
			"Matrix4",
			"MaxEquation",
			"Mesh",
			"MeshBasicMaterial",
			"MeshDepthMaterial",
			"MeshDistanceMaterial",
			"MeshFaceMaterial",
			"MeshLambertMaterial",
			"MeshMatcapMaterial",
			"MeshNormalMaterial",
			"MeshPhongMaterial",
			"MeshPhysicalMaterial",
			"MeshStandardMaterial",
			"MeshToonMaterial",
			"MinEquation",
			"MirroredRepeatWrapping",
			"MixOperation",
			"MultiMaterial",
			"MultiplyBlending",
			"MultiplyOperation",
			"NearestFilter",
			"NearestMipMapLinearFilter",
			"NearestMipMapNearestFilter",
			"NearestMipmapLinearFilter",
			"NearestMipmapNearestFilter",
			"NeverDepth",
			"NeverStencilFunc",
			"NoBlending",
			"NoColors",
			"NoToneMapping",
			"NormalAnimationBlendMode",
			"NormalBlending",
			"NotEqualDepth",
			"NotEqualStencilFunc",
			"NumberKeyframeTrack",
			"Object3D",
			"ObjectLoader",
			"ObjectSpaceNormalMap",
			"OctahedronBufferGeometry",
			"OctahedronGeometry",
			"OneFactor",
			"OneMinusDstAlphaFactor",
			"OneMinusDstColorFactor",
			"OneMinusSrcAlphaFactor",
			"OneMinusSrcColorFactor",
			"OrthographicCamera",
			"PCFShadowMap",
			"PCFSoftShadowMap",
			"PMREMGenerator",
			"ParametricBufferGeometry",
			"ParametricGeometry",
			"Particle",
			"ParticleBasicMaterial",
			"ParticleSystem",
			"ParticleSystemMaterial",
			"Path",
			"PerspectiveCamera",
			"Plane",
			"PlaneBufferGeometry",
			"PlaneGeometry",
			"PlaneHelper",
			"PointCloud",
			"PointCloudMaterial",
			"PointLight",
			"PointLightHelper",
			"Points",
			"PointsMaterial",
			"PolarGridHelper",
			"PolyhedronBufferGeometry",
			"PolyhedronGeometry",
			"PositionalAudio",
			"PropertyBinding",
			"PropertyMixer",
			"QuadraticBezierCurve",
			"QuadraticBezierCurve3",
			"Quaternion",
			"QuaternionKeyframeTrack",
			"QuaternionLinearInterpolant",
			"REVISION",
			"RGBADepthPacking",
			"RGBAFormat",
			"RGBAIntegerFormat",
			"RGBA_ASTC_10x10_Format",
			"RGBA_ASTC_10x5_Format",
			"RGBA_ASTC_10x6_Format",
			"RGBA_ASTC_10x8_Format",
			"RGBA_ASTC_12x10_Format",
			"RGBA_ASTC_12x12_Format",
			"RGBA_ASTC_4x4_Format",
			"RGBA_ASTC_5x4_Format",
			"RGBA_ASTC_5x5_Format",
			"RGBA_ASTC_6x5_Format",
			"RGBA_ASTC_6x6_Format",
			"RGBA_ASTC_8x5_Format",
			"RGBA_ASTC_8x6_Format",
			"RGBA_ASTC_8x8_Format",
			"RGBA_BPTC_Format",
			"RGBA_ETC2_EAC_Format",
			"RGBA_PVRTC_2BPPV1_Format",
			"RGBA_PVRTC_4BPPV1_Format",
			"RGBA_S3TC_DXT1_Format",
			"RGBA_S3TC_DXT3_Format",
			"RGBA_S3TC_DXT5_Format",
			"RGBDEncoding",
			"RGBEEncoding",
			"RGBEFormat",
			"RGBFormat",
			"RGBIntegerFormat",
			"RGBM16Encoding",
			"RGBM7Encoding",
			"RGB_ETC1_Format",
			"RGB_ETC2_Format",
			"RGB_PVRTC_2BPPV1_Format",
			"RGB_PVRTC_4BPPV1_Format",
			"RGB_S3TC_DXT1_Format",
			"RGFormat",
			"RGIntegerFormat",
			"RawShaderMaterial",
			"Ray",
			"Raycaster",
			"RectAreaLight",
			"RedFormat",
			"RedIntegerFormat",
			"ReinhardToneMapping",
			"RepeatWrapping",
			"ReplaceStencilOp",
			"ReverseSubtractEquation",
			"RingBufferGeometry",
			"RingGeometry",
			"SRGB8_ALPHA8_ASTC_10x10_Format",
			"SRGB8_ALPHA8_ASTC_10x5_Format",
			"SRGB8_ALPHA8_ASTC_10x6_Format",
			"SRGB8_ALPHA8_ASTC_10x8_Format",
			"SRGB8_ALPHA8_ASTC_12x10_Format",
			"SRGB8_ALPHA8_ASTC_12x12_Format",
			"SRGB8_ALPHA8_ASTC_4x4_Format",
			"SRGB8_ALPHA8_ASTC_5x4_Format",
			"SRGB8_ALPHA8_ASTC_5x5_Format",
			"SRGB8_ALPHA8_ASTC_6x5_Format",
			"SRGB8_ALPHA8_ASTC_6x6_Format",
			"SRGB8_ALPHA8_ASTC_8x5_Format",
			"SRGB8_ALPHA8_ASTC_8x6_Format",
			"SRGB8_ALPHA8_ASTC_8x8_Format",
			"Scene",
			"SceneUtils",
			"ShaderChunk",
			"ShaderLib",
			"ShaderMaterial",
			"ShadowMaterial",
			"Shape",
			"ShapeBufferGeometry",
			"ShapeGeometry",
			"ShapePath",
			"ShapeUtils",
			"ShortType",
			"Skeleton",
			"SkeletonHelper",
			"SkinnedMesh",
			"SmoothShading",
			"Sphere",
			"SphereBufferGeometry",
			"SphereGeometry",
			"Spherical",
			"SphericalHarmonics3",
			"Spline",
			"SplineCurve",
			"SplineCurve3",
			"SpotLight",
			"SpotLightHelper",
			"Sprite",
			"SpriteMaterial",
			"SrcAlphaFactor",
			"SrcAlphaSaturateFactor",
			"SrcColorFactor",
			"StaticCopyUsage",
			"StaticDrawUsage",
			"StaticReadUsage",
			"StereoCamera",
			"StreamCopyUsage",
			"StreamDrawUsage",
			"StreamReadUsage",
			"StringKeyframeTrack",
			"SubtractEquation",
			"SubtractiveBlending",
			"TOUCH",
			"TangentSpaceNormalMap",
			"TetrahedronBufferGeometry",
			"TetrahedronGeometry",
			"TextBufferGeometry",
			"TextGeometry",
			"Texture",
			"TextureLoader",
			"TorusBufferGeometry",
			"TorusGeometry",
			"TorusKnotBufferGeometry",
			"TorusKnotGeometry",
			"Triangle",
			"TriangleFanDrawMode",
			"TriangleStripDrawMode",
			"TrianglesDrawMode",
			"TubeBufferGeometry",
			"TubeGeometry",
			"UVMapping",
			"Uint16Attribute",
			"Uint16BufferAttribute",
			"Uint32Attribute",
			"Uint32BufferAttribute",
			"Uint8Attribute",
			"Uint8BufferAttribute",
			"Uint8ClampedAttribute",
			"Uint8ClampedBufferAttribute",
			"Uniform",
			"UniformsLib",
			"UniformsUtils",
			"UnsignedByteType",
			"UnsignedInt248Type",
			"UnsignedIntType",
			"UnsignedShort4444Type",
			"UnsignedShort5551Type",
			"UnsignedShort565Type",
			"UnsignedShortType",
			"VSMShadowMap",
			"Vector2",
			"Vector3",
			"Vector4",
			"VectorKeyframeTrack",
			"Vertex",
			"VertexColors",
			"VideoTexture",
			"WebGL1Renderer",
			"WebGLCubeRenderTarget",
			"WebGLMultisampleRenderTarget",
			"WebGLRenderTarget",
			"WebGLRenderTargetCube",
			"WebGLRenderer",
			"WebGLUtils",
			"WireframeGeometry",
			"WireframeHelper",
			"WrapAroundEnding",
			"XHRLoader",
			"ZeroCurvatureEnding",
			"ZeroFactor",
			"ZeroSlopeEnding",
			"ZeroStencilOp",
			"sRGBEncoding"
		],
		"detectedNames": [
			"ACESFilmicToneMapping",
			"AddEquation",
			"AddOperation",
			"AdditiveAnimationBlendMode",
			"AdditiveBlending",
			"AlphaFormat",
			"AlwaysDepth",
			"AlwaysStencilFunc",
			"AmbientLight",
			"AmbientLightProbe",
			"AnimationClip",
			"AnimationLoader",
			"AnimationMixer",
			"AnimationObjectGroup",
			"AnimationUtils",
			"ArcCurve",
			"ArrayCamera",
			"ArrowHelper",
			"Audio",
			"AudioAnalyser",
			"AudioContext",
			"AudioListener",
			"AudioLoader",
			"AxesHelper",
			"AxisHelper",
			"BackSide",
			"BasicDepthPacking",
			"BasicShadowMap",
			"BinaryTextureLoader",
			"Bone",
			"BooleanKeyframeTrack",
			"BoundingBoxHelper",
			"Box2",
			"Box3",
			"Box3Helper",
			"BoxBufferGeometry",
			"BoxGeometry",
			"BoxHelper",
			"BufferAttribute",
			"BufferGeometry",
			"BufferGeometryLoader",
			"ByteType",
			"Cache",
			"Camera",
			"CameraHelper",
			"CanvasRenderer",
			"CanvasTexture",
			"CatmullRomCurve3",
			"CineonToneMapping",
			"CircleBufferGeometry",
			"CircleGeometry",
			"ClampToEdgeWrapping",
			"Clock",
			"ClosedSplineCurve3",
			"Color",
			"ColorKeyframeTrack",
			"CompressedTexture",
			"CompressedTextureLoader",
			"ConeBufferGeometry",
			"ConeGeometry",
			"CubeCamera",
			"CubeGeometry",
			"CubeReflectionMapping",
			"CubeRefractionMapping",
			"CubeTexture",
			"CubeTextureLoader",
			"CubeUVReflectionMapping",
			"CubeUVRefractionMapping",
			"CubicBezierCurve",
			"CubicBezierCurve3",
			"CubicInterpolant",
			"CullFaceBack",
			"CullFaceFront",
			"CullFaceFrontBack",
			"CullFaceNone",
			"Curve",
			"CurvePath",
			"CustomBlending",
			"CustomToneMapping",
			"CylinderBufferGeometry",
			"CylinderGeometry",
			"Cylindrical",
			"DataTexture",
			"DataTexture2DArray",
			"DataTexture3D",
			"DataTextureLoader",
			"DecrementStencilOp",
			"DecrementWrapStencilOp",
			"DefaultLoadingManager",
			"DepthFormat",
			"DepthStencilFormat",
			"DepthTexture",
			"DirectionalLight",
			"DirectionalLightHelper",
			"DiscreteInterpolant",
			"DodecahedronBufferGeometry",
			"DodecahedronGeometry",
			"DoubleSide",
			"DstAlphaFactor",
			"DstColorFactor",
			"DynamicBufferAttribute",
			"DynamicCopyUsage",
			"DynamicDrawUsage",
			"DynamicReadUsage",
			"EdgesGeometry",
			"EdgesHelper",
			"EllipseCurve",
			"EqualDepth",
			"EqualStencilFunc",
			"EquirectangularReflectionMapping",
			"EquirectangularRefractionMapping",
			"Euler",
			"EventDispatcher",
			"ExtrudeBufferGeometry",
			"ExtrudeGeometry",
			"Face3",
			"Face4",
			"FaceColors",
			"FileLoader",
			"FlatShading",
			"Float32Attribute",
			"Float32BufferAttribute",
			"Float64Attribute",
			"Float64BufferAttribute",
			"FloatType",
			"Fog",
			"FogExp2",
			"Font",
			"FontLoader",
			"FrontSide",
			"Frustum",
			"GLBufferAttribute",
			"GLSL1",
			"GLSL3",
			"GammaEncoding",
			"Geometry",
			"GeometryUtils",
			"GreaterDepth",
			"GreaterEqualDepth",
			"GreaterEqualStencilFunc",
			"GreaterStencilFunc",
			"GridHelper",
			"Group",
			"HalfFloatType",
			"HemisphereLight",
			"HemisphereLightHelper",
			"HemisphereLightProbe",
			"IcosahedronBufferGeometry",
			"IcosahedronGeometry",
			"ImageBitmapLoader",
			"ImageLoader",
			"ImageUtils",
			"ImmediateRenderObject",
			"IncrementStencilOp",
			"IncrementWrapStencilOp",
			"InstancedBufferAttribute",
			"InstancedBufferGeometry",
			"InstancedInterleavedBuffer",
			"InstancedMesh",
			"Int16Attribute",
			"Int16BufferAttribute",
			"Int32Attribute",
			"Int32BufferAttribute",
			"Int8Attribute",
			"Int8BufferAttribute",
			"IntType",
			"InterleavedBuffer",
			"InterleavedBufferAttribute",
			"Interpolant",
			"InterpolateDiscrete",
			"InterpolateLinear",
			"InterpolateSmooth",
			"InvertStencilOp",
			"JSONLoader",
			"KeepStencilOp",
			"KeyframeTrack",
			"LOD",
			"LatheBufferGeometry",
			"LatheGeometry",
			"Layers",
			"LensFlare",
			"LessDepth",
			"LessEqualDepth",
			"LessEqualStencilFunc",
			"LessStencilFunc",
			"Light",
			"LightProbe",
			"LightShadow",
			"Line",
			"Line3",
			"LineBasicMaterial",
			"LineCurve",
			"LineCurve3",
			"LineDashedMaterial",
			"LineLoop",
			"LinePieces",
			"LineSegments",
			"LineStrip",
			"LinearEncoding",
			"LinearFilter",
			"LinearInterpolant",
			"LinearMipMapLinearFilter",
			"LinearMipMapNearestFilter",
			"LinearMipmapLinearFilter",
			"LinearMipmapNearestFilter",
			"LinearToneMapping",
			"Loader",
			"LoaderUtils",
			"LoadingManager",
			"LogLuvEncoding",
			"LoopOnce",
			"LoopPingPong",
			"LoopRepeat",
			"LuminanceAlphaFormat",
			"LuminanceFormat",
			"MOUSE",
			"Material",
			"MaterialLoader",
			"Math",
			"MathUtils",
			"Matrix3",
			"Matrix4",
			"MaxEquation",
			"Mesh",
			"MeshBasicMaterial",
			"MeshDepthMaterial",
			"MeshDistanceMaterial",
			"MeshFaceMaterial",
			"MeshLambertMaterial",
			"MeshMatcapMaterial",
			"MeshNormalMaterial",
			"MeshPhongMaterial",
			"MeshPhysicalMaterial",
			"MeshStandardMaterial",
			"MeshToonMaterial",
			"MinEquation",
			"MirroredRepeatWrapping",
			"MixOperation",
			"MultiMaterial",
			"MultiplyBlending",
			"MultiplyOperation",
			"NearestFilter",
			"NearestMipMapLinearFilter",
			"NearestMipMapNearestFilter",
			"NearestMipmapLinearFilter",
			"NearestMipmapNearestFilter",
			"NeverDepth",
			"NeverStencilFunc",
			"NoBlending",
			"NoColors",
			"NoToneMapping",
			"NormalAnimationBlendMode",
			"NormalBlending",
			"NotEqualDepth",
			"NotEqualStencilFunc",
			"NumberKeyframeTrack",
			"Object3D",
			"ObjectLoader",
			"ObjectSpaceNormalMap",
			"OctahedronBufferGeometry",
			"OctahedronGeometry",
			"OneFactor",
			"OneMinusDstAlphaFactor",
			"OneMinusDstColorFactor",
			"OneMinusSrcAlphaFactor",
			"OneMinusSrcColorFactor",
			"OrthographicCamera",
			"PCFShadowMap",
			"PCFSoftShadowMap",
			"PMREMGenerator",
			"ParametricBufferGeometry",
			"ParametricGeometry",
			"Particle",
			"ParticleBasicMaterial",
			"ParticleSystem",
			"ParticleSystemMaterial",
			"Path",
			"PerspectiveCamera",
			"Plane",
			"PlaneBufferGeometry",
			"PlaneGeometry",
			"PlaneHelper",
			"PointCloud",
			"PointCloudMaterial",
			"PointLight",
			"PointLightHelper",
			"Points",
			"PointsMaterial",
			"PolarGridHelper",
			"PolyhedronBufferGeometry",
			"PolyhedronGeometry",
			"PositionalAudio",
			"PropertyBinding",
			"PropertyMixer",
			"QuadraticBezierCurve",
			"QuadraticBezierCurve3",
			"Quaternion",
			"QuaternionKeyframeTrack",
			"QuaternionLinearInterpolant",
			"REVISION",
			"RGBADepthPacking",
			"RGBAFormat",
			"RGBAIntegerFormat",
			"RGBA_ASTC_10x10_Format",
			"RGBA_ASTC_10x5_Format",
			"RGBA_ASTC_10x6_Format",
			"RGBA_ASTC_10x8_Format",
			"RGBA_ASTC_12x10_Format",
			"RGBA_ASTC_12x12_Format",
			"RGBA_ASTC_4x4_Format",
			"RGBA_ASTC_5x4_Format",
			"RGBA_ASTC_5x5_Format",
			"RGBA_ASTC_6x5_Format",
			"RGBA_ASTC_6x6_Format",
			"RGBA_ASTC_8x5_Format",
			"RGBA_ASTC_8x6_Format",
			"RGBA_ASTC_8x8_Format",
			"RGBA_BPTC_Format",
			"RGBA_ETC2_EAC_Format",
			"RGBA_PVRTC_2BPPV1_Format",
			"RGBA_PVRTC_4BPPV1_Format",
			"RGBA_S3TC_DXT1_Format",
			"RGBA_S3TC_DXT3_Format",
			"RGBA_S3TC_DXT5_Format",
			"RGBDEncoding",
			"RGBEEncoding",
			"RGBEFormat",
			"RGBFormat",
			"RGBIntegerFormat",
			"RGBM16Encoding",
			"RGBM7Encoding",
			"RGB_ETC1_Format",
			"RGB_ETC2_Format",
			"RGB_PVRTC_2BPPV1_Format",
			"RGB_PVRTC_4BPPV1_Format",
			"RGB_S3TC_DXT1_Format",
			"RGFormat",
			"RGIntegerFormat",
			"RawShaderMaterial",
			"Ray",
			"Raycaster",
			"RectAreaLight",
			"RedFormat",
			"RedIntegerFormat",
			"ReinhardToneMapping",
			"RepeatWrapping",
			"ReplaceStencilOp",
			"ReverseSubtractEquation",
			"RingBufferGeometry",
			"RingGeometry",
			"SRGB8_ALPHA8_ASTC_10x10_Format",
			"SRGB8_ALPHA8_ASTC_10x5_Format",
			"SRGB8_ALPHA8_ASTC_10x6_Format",
			"SRGB8_ALPHA8_ASTC_10x8_Format",
			"SRGB8_ALPHA8_ASTC_12x10_Format",
			"SRGB8_ALPHA8_ASTC_12x12_Format",
			"SRGB8_ALPHA8_ASTC_4x4_Format",
			"SRGB8_ALPHA8_ASTC_5x4_Format",
			"SRGB8_ALPHA8_ASTC_5x5_Format",
			"SRGB8_ALPHA8_ASTC_6x5_Format",
			"SRGB8_ALPHA8_ASTC_6x6_Format",
			"SRGB8_ALPHA8_ASTC_8x5_Format",
			"SRGB8_ALPHA8_ASTC_8x6_Format",
			"SRGB8_ALPHA8_ASTC_8x8_Format",
			"Scene",
			"SceneUtils",
			"ShaderChunk",
			"ShaderLib",
			"ShaderMaterial",
			"ShadowMaterial",
			"Shape",
			"ShapeBufferGeometry",
			"ShapeGeometry",
			"ShapePath",
			"ShapeUtils",
			"ShortType",
			"Skeleton",
			"SkeletonHelper",
			"SkinnedMesh",
			"SmoothShading",
			"Sphere",
			"SphereBufferGeometry",
			"SphereGeometry",
			"Spherical",
			"SphericalHarmonics3",
			"Spline",
			"SplineCurve",
			"SplineCurve3",
			"SpotLight",
			"SpotLightHelper",
			"Sprite",
			"SpriteMaterial",
			"SrcAlphaFactor",
			"SrcAlphaSaturateFactor",
			"SrcColorFactor",
			"StaticCopyUsage",
			"StaticDrawUsage",
			"StaticReadUsage",
			"StereoCamera",
			"StreamCopyUsage",
			"StreamDrawUsage",
			"StreamReadUsage",
			"StringKeyframeTrack",
			"SubtractEquation",
			"SubtractiveBlending",
			"TOUCH",
			"TangentSpaceNormalMap",
			"TetrahedronBufferGeometry",
			"TetrahedronGeometry",
			"TextBufferGeometry",
			"TextGeometry",
			"Texture",
			"TextureLoader",
			"TorusBufferGeometry",
			"TorusGeometry",
			"TorusKnotBufferGeometry",
			"TorusKnotGeometry",
			"Triangle",
			"TriangleFanDrawMode",
			"TriangleStripDrawMode",
			"TrianglesDrawMode",
			"TubeBufferGeometry",
			"TubeGeometry",
			"UVMapping",
			"Uint16Attribute",
			"Uint16BufferAttribute",
			"Uint32Attribute",
			"Uint32BufferAttribute",
			"Uint8Attribute",
			"Uint8BufferAttribute",
			"Uint8ClampedAttribute",
			"Uint8ClampedBufferAttribute",
			"Uniform",
			"UniformsLib",
			"UniformsUtils",
			"UnsignedByteType",
			"UnsignedInt248Type",
			"UnsignedIntType",
			"UnsignedShort4444Type",
			"UnsignedShort5551Type",
			"UnsignedShort565Type",
			"UnsignedShortType",
			"VSMShadowMap",
			"Vector2",
			"Vector3",
			"Vector4",
			"VectorKeyframeTrack",
			"Vertex",
			"VertexColors",
			"VideoTexture",
			"WebGL1Renderer",
			"WebGLCubeRenderTarget",
			"WebGLMultisampleRenderTarget",
			"WebGLRenderTarget",
			"WebGLRenderTargetCube",
			"WebGLRenderer",
			"WebGLUtils",
			"WireframeGeometry",
			"WireframeHelper",
			"WrapAroundEnding",
			"XHRLoader",
			"ZeroCurvatureEnding",
			"ZeroFactor",
			"ZeroSlopeEnding",
			"ZeroStencilOp",
			"sRGBEncoding"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "metalsmith",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "json-stable-stringify",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "webpack-node-externals",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "requirejs",
		"expectedNames": [
			"config",
			"nextTick",
			"version",
			"jsExtRegExp",
			"isBrowser",
			"s",
			"toUrl",
			"undef",
			"defined",
			"specified",
			"onError",
			"createNode",
			"load",
			"exec",
			"nodeRequire",
			"get",
			"makeNodeWrapper",
			"optimize",
			"tools",
			"define"
		],
		"detectedNames": [
			"version"
		],
		"missingNames": [
			"config",
			"nextTick",
			"jsExtRegExp",
			"isBrowser",
			"s",
			"toUrl",
			"undef",
			"defined",
			"specified",
			"onError",
			"createNode",
			"load",
			"exec",
			"nodeRequire",
			"get",
			"makeNodeWrapper",
			"optimize",
			"tools",
			"define"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "regenerator-runtime",
		"expectedNames": [
			"wrap",
			"isGeneratorFunction",
			"mark",
			"awrap",
			"AsyncIterator",
			"async",
			"keys",
			"values"
		],
		"detectedNames": [
			"wrap",
			"isGeneratorFunction",
			"mark",
			"awrap",
			"AsyncIterator",
			"async",
			"keys",
			"values"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "xmlbuilder",
		"expectedNames": [
			"create",
			"begin",
			"stringWriter",
			"streamWriter",
			"implementation",
			"nodeType",
			"writerState"
		],
		"detectedNames": [
			"create",
			"begin",
			"stringWriter",
			"streamWriter",
			"implementation",
			"nodeType",
			"writerState"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "path-exists",
		"expectedNames": [
			"sync"
		],
		"detectedNames": [
			"sync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rollup-plugin-commonjs",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "throttle-debounce",
		"transpiled": true,
		"expectedNames": [
			"debounce",
			"throttle"
		],
		"detectedNames": [
			"debounce",
			"throttle"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "user-home",
		"expectedNames": [
			"0",
			"1",
			"2",
			"3",
			"4",
			"5",
			"6",
			"7",
			"8",
			"9",
			"10",
			"11",
			"12",
			"13",
			"14"
		],
		"detectedNames": [],
		"missingNames": [
			"0",
			"1",
			"2",
			"3",
			"4",
			"5",
			"6",
			"7",
			"8",
			"9",
			"10",
			"11",
			"12",
			"13",
			"14"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cron",
		"expectedNames": [
			"job",
			"time",
			"sendAt",
			"timeout",
			"CronJob",
			"CronTime"
		],
		"detectedNames": [
			"job",
			"time",
			"sendAt",
			"timeout",
			"CronJob",
			"CronTime"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "xmlhttprequest",
		"expectedNames": [
			"XMLHttpRequest"
		],
		"detectedNames": [
			"XMLHttpRequest"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "faker",
		"expectedNames": [
			"locales",
			"locale",
			"localeFallback",
			"definitions",
			"fake",
			"unique",
			"random",
			"helpers",
			"name",
			"address",
			"company",
			"finance",
			"image",
			"lorem",
			"hacker",
			"internet",
			"database",
			"phone",
			"date",
			"time",
			"commerce",
			"system",
			"git",
			"vehicle",
			"setLocale",
			"seed"
		],
		"detectedNames": [],
		"missingNames": [
			"locales",
			"locale",
			"localeFallback",
			"definitions",
			"fake",
			"unique",
			"random",
			"helpers",
			"name",
			"address",
			"company",
			"finance",
			"image",
			"lorem",
			"hacker",
			"internet",
			"database",
			"phone",
			"date",
			"time",
			"commerce",
			"system",
			"git",
			"vehicle",
			"setLocale",
			"seed"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "systemjs",
		"transpiled": true,
		"expectedNames": [
			"System",
			"applyImportMap",
			"setBaseUrl"
		],
		"detectedNames": [],
		"missingNames": [
			"System",
			"applyImportMap",
			"setBaseUrl"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "inflection",
		"expectedNames": [
			"_apply_rules",
			"indexOf",
			"pluralize",
			"singularize",
			"inflect",
			"camelize",
			"underscore",
			"humanize",
			"capitalize",
			"dasherize",
			"titleize",
			"demodulize",
			"tableize",
			"classify",
			"foreign_key",
			"ordinalize",
			"transform",
			"version"
		],
		"detectedNames": [],
		"missingNames": [
			"_apply_rules",
			"indexOf",
			"pluralize",
			"singularize",
			"inflect",
			"camelize",
			"underscore",
			"humanize",
			"capitalize",
			"dasherize",
			"titleize",
			"demodulize",
			"tableize",
			"classify",
			"foreign_key",
			"ordinalize",
			"transform",
			"version"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "get-stdin",
		"expectedNames": [
			"buffer"
		],
		"detectedNames": [
			"buffer"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-types",
		"transpiled": true,
		"expectedNames": [
			"STATEMENT_OR_BLOCK_KEYS",
			"FLATTENABLE_KEYS",
			"FOR_INIT_KEYS",
			"COMMENT_KEYS",
			"LOGICAL_OPERATORS",
			"UPDATE_OPERATORS",
			"BOOLEAN_NUMBER_BINARY_OPERATORS",
			"EQUALITY_BINARY_OPERATORS",
			"COMPARISON_BINARY_OPERATORS",
			"BOOLEAN_BINARY_OPERATORS",
			"NUMBER_BINARY_OPERATORS",
			"BINARY_OPERATORS",
			"BOOLEAN_UNARY_OPERATORS",
			"NUMBER_UNARY_OPERATORS",
			"STRING_UNARY_OPERATORS",
			"UNARY_OPERATORS",
			"INHERIT_KEYS",
			"BLOCK_SCOPED_SYMBOL",
			"NOT_LOCAL_BINDING",
			"VISITOR_KEYS",
			"ALIAS_KEYS",
			"NODE_FIELDS",
			"BUILDER_KEYS",
			"DEPRECATED_KEYS",
			"react",
			"TYPES",
			"getBindingIdentifiers",
			"getOuterBindingIdentifiers",
			"isBinding",
			"isReferenced",
			"isValidIdentifier",
			"isLet",
			"isBlockScoped",
			"isVar",
			"isSpecifierDefault",
			"isScope",
			"isImmutable",
			"isNodesEquivalent",
			"toComputedKey",
			"toSequenceExpression",
			"toKeyAlias",
			"toIdentifier",
			"toBindingIdentifierName",
			"toStatement",
			"toExpression",
			"toBlock",
			"valueToNode",
			"createUnionTypeAnnotation",
			"removeTypeDuplicates",
			"createTypeAnnotationBasedOnTypeof",
			"is",
			"isType",
			"validate",
			"shallowEqual",
			"appendToMemberExpression",
			"prependToMemberExpression",
			"ensureBlock",
			"clone",
			"cloneWithoutLoc",
			"cloneDeep",
			"buildMatchMemberExpression",
			"removeComments",
			"inheritsComments",
			"inheritTrailingComments",
			"inheritLeadingComments",
			"inheritInnerComments",
			"inherits",
			"assertNode",
			"isNode",
			"traverseFast",
			"removeProperties",
			"removePropertiesDeep",
			"isArrayExpression",
			"assertArrayExpression",
			"isAssignmentExpression",
			"assertAssignmentExpression",
			"isBinaryExpression",
			"assertBinaryExpression",
			"isDirective",
			"assertDirective",
			"isDirectiveLiteral",
			"assertDirectiveLiteral",
			"isBlockStatement",
			"assertBlockStatement",
			"isBreakStatement",
			"assertBreakStatement",
			"isCallExpression",
			"assertCallExpression",
			"isCatchClause",
			"assertCatchClause",
			"isConditionalExpression",
			"assertConditionalExpression",
			"isContinueStatement",
			"assertContinueStatement",
			"isDebuggerStatement",
			"assertDebuggerStatement",
			"isDoWhileStatement",
			"assertDoWhileStatement",
			"isEmptyStatement",
			"assertEmptyStatement",
			"isExpressionStatement",
			"assertExpressionStatement",
			"isFile",
			"assertFile",
			"isForInStatement",
			"assertForInStatement",
			"isForStatement",
			"assertForStatement",
			"isFunctionDeclaration",
			"assertFunctionDeclaration",
			"isFunctionExpression",
			"assertFunctionExpression",
			"isIdentifier",
			"assertIdentifier",
			"isIfStatement",
			"assertIfStatement",
			"isLabeledStatement",
			"assertLabeledStatement",
			"isStringLiteral",
			"assertStringLiteral",
			"isNumericLiteral",
			"assertNumericLiteral",
			"isNullLiteral",
			"assertNullLiteral",
			"isBooleanLiteral",
			"assertBooleanLiteral",
			"isRegExpLiteral",
			"assertRegExpLiteral",
			"isLogicalExpression",
			"assertLogicalExpression",
			"isMemberExpression",
			"assertMemberExpression",
			"isNewExpression",
			"assertNewExpression",
			"isProgram",
			"assertProgram",
			"isObjectExpression",
			"assertObjectExpression",
			"isObjectMethod",
			"assertObjectMethod",
			"isObjectProperty",
			"assertObjectProperty",
			"isRestElement",
			"assertRestElement",
			"isReturnStatement",
			"assertReturnStatement",
			"isSequenceExpression",
			"assertSequenceExpression",
			"isSwitchCase",
			"assertSwitchCase",
			"isSwitchStatement",
			"assertSwitchStatement",
			"isThisExpression",
			"assertThisExpression",
			"isThrowStatement",
			"assertThrowStatement",
			"isTryStatement",
			"assertTryStatement",
			"isUnaryExpression",
			"assertUnaryExpression",
			"isUpdateExpression",
			"assertUpdateExpression",
			"isVariableDeclaration",
			"assertVariableDeclaration",
			"isVariableDeclarator",
			"assertVariableDeclarator",
			"isWhileStatement",
			"assertWhileStatement",
			"isWithStatement",
			"assertWithStatement",
			"isAssignmentPattern",
			"assertAssignmentPattern",
			"isArrayPattern",
			"assertArrayPattern",
			"isArrowFunctionExpression",
			"assertArrowFunctionExpression",
			"isClassBody",
			"assertClassBody",
			"isClassDeclaration",
			"assertClassDeclaration",
			"isClassExpression",
			"assertClassExpression",
			"isExportAllDeclaration",
			"assertExportAllDeclaration",
			"isExportDefaultDeclaration",
			"assertExportDefaultDeclaration",
			"isExportNamedDeclaration",
			"assertExportNamedDeclaration",
			"isExportSpecifier",
			"assertExportSpecifier",
			"isForOfStatement",
			"assertForOfStatement",
			"isImportDeclaration",
			"assertImportDeclaration",
			"isImportDefaultSpecifier",
			"assertImportDefaultSpecifier",
			"isImportNamespaceSpecifier",
			"assertImportNamespaceSpecifier",
			"isImportSpecifier",
			"assertImportSpecifier",
			"isMetaProperty",
			"assertMetaProperty",
			"isClassMethod",
			"assertClassMethod",
			"isObjectPattern",
			"assertObjectPattern",
			"isSpreadElement",
			"assertSpreadElement",
			"isSuper",
			"assertSuper",
			"isTaggedTemplateExpression",
			"assertTaggedTemplateExpression",
			"isTemplateElement",
			"assertTemplateElement",
			"isTemplateLiteral",
			"assertTemplateLiteral",
			"isYieldExpression",
			"assertYieldExpression",
			"isAnyTypeAnnotation",
			"assertAnyTypeAnnotation",
			"isArrayTypeAnnotation",
			"assertArrayTypeAnnotation",
			"isBooleanTypeAnnotation",
			"assertBooleanTypeAnnotation",
			"isBooleanLiteralTypeAnnotation",
			"assertBooleanLiteralTypeAnnotation",
			"isNullLiteralTypeAnnotation",
			"assertNullLiteralTypeAnnotation",
			"isClassImplements",
			"assertClassImplements",
			"isClassProperty",
			"assertClassProperty",
			"isDeclareClass",
			"assertDeclareClass",
			"isDeclareFunction",
			"assertDeclareFunction",
			"isDeclareInterface",
			"assertDeclareInterface",
			"isDeclareModule",
			"assertDeclareModule",
			"isDeclareModuleExports",
			"assertDeclareModuleExports",
			"isDeclareTypeAlias",
			"assertDeclareTypeAlias",
			"isDeclareOpaqueType",
			"assertDeclareOpaqueType",
			"isDeclareVariable",
			"assertDeclareVariable",
			"isDeclareExportDeclaration",
			"assertDeclareExportDeclaration",
			"isExistentialTypeParam",
			"assertExistentialTypeParam",
			"isFunctionTypeAnnotation",
			"assertFunctionTypeAnnotation",
			"isFunctionTypeParam",
			"assertFunctionTypeParam",
			"isGenericTypeAnnotation",
			"assertGenericTypeAnnotation",
			"isInterfaceExtends",
			"assertInterfaceExtends",
			"isInterfaceDeclaration",
			"assertInterfaceDeclaration",
			"isIntersectionTypeAnnotation",
			"assertIntersectionTypeAnnotation",
			"isMixedTypeAnnotation",
			"assertMixedTypeAnnotation",
			"isEmptyTypeAnnotation",
			"assertEmptyTypeAnnotation",
			"isNullableTypeAnnotation",
			"assertNullableTypeAnnotation",
			"isNumericLiteralTypeAnnotation",
			"assertNumericLiteralTypeAnnotation",
			"isNumberTypeAnnotation",
			"assertNumberTypeAnnotation",
			"isStringLiteralTypeAnnotation",
			"assertStringLiteralTypeAnnotation",
			"isStringTypeAnnotation",
			"assertStringTypeAnnotation",
			"isThisTypeAnnotation",
			"assertThisTypeAnnotation",
			"isTupleTypeAnnotation",
			"assertTupleTypeAnnotation",
			"isTypeofTypeAnnotation",
			"assertTypeofTypeAnnotation",
			"isTypeAlias",
			"assertTypeAlias",
			"isOpaqueType",
			"assertOpaqueType",
			"isTypeAnnotation",
			"assertTypeAnnotation",
			"isTypeCastExpression",
			"assertTypeCastExpression",
			"isTypeParameter",
			"assertTypeParameter",
			"isTypeParameterDeclaration",
			"assertTypeParameterDeclaration",
			"isTypeParameterInstantiation",
			"assertTypeParameterInstantiation",
			"isObjectTypeAnnotation",
			"assertObjectTypeAnnotation",
			"isObjectTypeCallProperty",
			"assertObjectTypeCallProperty",
			"isObjectTypeIndexer",
			"assertObjectTypeIndexer",
			"isObjectTypeProperty",
			"assertObjectTypeProperty",
			"isObjectTypeSpreadProperty",
			"assertObjectTypeSpreadProperty",
			"isQualifiedTypeIdentifier",
			"assertQualifiedTypeIdentifier",
			"isUnionTypeAnnotation",
			"assertUnionTypeAnnotation",
			"isVoidTypeAnnotation",
			"assertVoidTypeAnnotation",
			"isJSXAttribute",
			"assertJSXAttribute",
			"isJSXClosingElement",
			"assertJSXClosingElement",
			"isJSXElement",
			"assertJSXElement",
			"isJSXEmptyExpression",
			"assertJSXEmptyExpression",
			"isJSXExpressionContainer",
			"assertJSXExpressionContainer",
			"isJSXSpreadChild",
			"assertJSXSpreadChild",
			"isJSXIdentifier",
			"assertJSXIdentifier",
			"isJSXMemberExpression",
			"assertJSXMemberExpression",
			"isJSXNamespacedName",
			"assertJSXNamespacedName",
			"isJSXOpeningElement",
			"assertJSXOpeningElement",
			"isJSXSpreadAttribute",
			"assertJSXSpreadAttribute",
			"isJSXText",
			"assertJSXText",
			"isNoop",
			"assertNoop",
			"isParenthesizedExpression",
			"assertParenthesizedExpression",
			"isAwaitExpression",
			"assertAwaitExpression",
			"isForAwaitStatement",
			"assertForAwaitStatement",
			"isBindExpression",
			"assertBindExpression",
			"isImport",
			"assertImport",
			"isDecorator",
			"assertDecorator",
			"isDoExpression",
			"assertDoExpression",
			"isExportDefaultSpecifier",
			"assertExportDefaultSpecifier",
			"isExportNamespaceSpecifier",
			"assertExportNamespaceSpecifier",
			"isRestProperty",
			"assertRestProperty",
			"isSpreadProperty",
			"assertSpreadProperty",
			"FLIPPED_ALIAS_KEYS",
			"EXPRESSION_TYPES",
			"isExpression",
			"assertExpression",
			"BINARY_TYPES",
			"isBinary",
			"assertBinary",
			"SCOPABLE_TYPES",
			"isScopable",
			"assertScopable",
			"BLOCKPARENT_TYPES",
			"isBlockParent",
			"assertBlockParent",
			"BLOCK_TYPES",
			"isBlock",
			"assertBlock",
			"STATEMENT_TYPES",
			"isStatement",
			"assertStatement",
			"TERMINATORLESS_TYPES",
			"isTerminatorless",
			"assertTerminatorless",
			"COMPLETIONSTATEMENT_TYPES",
			"isCompletionStatement",
			"assertCompletionStatement",
			"CONDITIONAL_TYPES",
			"isConditional",
			"assertConditional",
			"LOOP_TYPES",
			"isLoop",
			"assertLoop",
			"WHILE_TYPES",
			"isWhile",
			"assertWhile",
			"EXPRESSIONWRAPPER_TYPES",
			"isExpressionWrapper",
			"assertExpressionWrapper",
			"FOR_TYPES",
			"isFor",
			"assertFor",
			"FORXSTATEMENT_TYPES",
			"isForXStatement",
			"assertForXStatement",
			"FUNCTION_TYPES",
			"isFunction",
			"assertFunction",
			"FUNCTIONPARENT_TYPES",
			"isFunctionParent",
			"assertFunctionParent",
			"PUREISH_TYPES",
			"isPureish",
			"assertPureish",
			"DECLARATION_TYPES",
			"isDeclaration",
			"assertDeclaration",
			"LVAL_TYPES",
			"isLVal",
			"assertLVal",
			"LITERAL_TYPES",
			"isLiteral",
			"assertLiteral",
			"IMMUTABLE_TYPES",
			"assertImmutable",
			"USERWHITESPACABLE_TYPES",
			"isUserWhitespacable",
			"assertUserWhitespacable",
			"METHOD_TYPES",
			"isMethod",
			"assertMethod",
			"OBJECTMEMBER_TYPES",
			"isObjectMember",
			"assertObjectMember",
			"PROPERTY_TYPES",
			"isProperty",
			"assertProperty",
			"UNARYLIKE_TYPES",
			"isUnaryLike",
			"assertUnaryLike",
			"PATTERN_TYPES",
			"isPattern",
			"assertPattern",
			"CLASS_TYPES",
			"isClass",
			"assertClass",
			"MODULEDECLARATION_TYPES",
			"isModuleDeclaration",
			"assertModuleDeclaration",
			"EXPORTDECLARATION_TYPES",
			"isExportDeclaration",
			"assertExportDeclaration",
			"MODULESPECIFIER_TYPES",
			"isModuleSpecifier",
			"assertModuleSpecifier",
			"FLOW_TYPES",
			"isFlow",
			"assertFlow",
			"FLOWBASEANNOTATION_TYPES",
			"isFlowBaseAnnotation",
			"assertFlowBaseAnnotation",
			"FLOWDECLARATION_TYPES",
			"isFlowDeclaration",
			"assertFlowDeclaration",
			"JSX_TYPES",
			"isJSX",
			"assertJSX",
			"ArrayExpression",
			"arrayExpression",
			"AssignmentExpression",
			"assignmentExpression",
			"BinaryExpression",
			"binaryExpression",
			"Directive",
			"directive",
			"DirectiveLiteral",
			"directiveLiteral",
			"BlockStatement",
			"blockStatement",
			"BreakStatement",
			"breakStatement",
			"CallExpression",
			"callExpression",
			"CatchClause",
			"catchClause",
			"ConditionalExpression",
			"conditionalExpression",
			"ContinueStatement",
			"continueStatement",
			"DebuggerStatement",
			"debuggerStatement",
			"DoWhileStatement",
			"doWhileStatement",
			"EmptyStatement",
			"emptyStatement",
			"ExpressionStatement",
			"expressionStatement",
			"File",
			"file",
			"ForInStatement",
			"forInStatement",
			"ForStatement",
			"forStatement",
			"FunctionDeclaration",
			"functionDeclaration",
			"FunctionExpression",
			"functionExpression",
			"Identifier",
			"identifier",
			"IfStatement",
			"ifStatement",
			"LabeledStatement",
			"labeledStatement",
			"StringLiteral",
			"stringLiteral",
			"NumericLiteral",
			"numericLiteral",
			"NullLiteral",
			"nullLiteral",
			"BooleanLiteral",
			"booleanLiteral",
			"RegExpLiteral",
			"regExpLiteral",
			"LogicalExpression",
			"logicalExpression",
			"MemberExpression",
			"memberExpression",
			"NewExpression",
			"newExpression",
			"Program",
			"program",
			"ObjectExpression",
			"objectExpression",
			"ObjectMethod",
			"objectMethod",
			"ObjectProperty",
			"objectProperty",
			"RestElement",
			"restElement",
			"ReturnStatement",
			"returnStatement",
			"SequenceExpression",
			"sequenceExpression",
			"SwitchCase",
			"switchCase",
			"SwitchStatement",
			"switchStatement",
			"ThisExpression",
			"thisExpression",
			"ThrowStatement",
			"throwStatement",
			"TryStatement",
			"tryStatement",
			"UnaryExpression",
			"unaryExpression",
			"UpdateExpression",
			"updateExpression",
			"VariableDeclaration",
			"variableDeclaration",
			"VariableDeclarator",
			"variableDeclarator",
			"WhileStatement",
			"whileStatement",
			"WithStatement",
			"withStatement",
			"AssignmentPattern",
			"assignmentPattern",
			"ArrayPattern",
			"arrayPattern",
			"ArrowFunctionExpression",
			"arrowFunctionExpression",
			"ClassBody",
			"classBody",
			"ClassDeclaration",
			"classDeclaration",
			"ClassExpression",
			"classExpression",
			"ExportAllDeclaration",
			"exportAllDeclaration",
			"ExportDefaultDeclaration",
			"exportDefaultDeclaration",
			"ExportNamedDeclaration",
			"exportNamedDeclaration",
			"ExportSpecifier",
			"exportSpecifier",
			"ForOfStatement",
			"forOfStatement",
			"ImportDeclaration",
			"importDeclaration",
			"ImportDefaultSpecifier",
			"importDefaultSpecifier",
			"ImportNamespaceSpecifier",
			"importNamespaceSpecifier",
			"ImportSpecifier",
			"importSpecifier",
			"MetaProperty",
			"metaProperty",
			"ClassMethod",
			"classMethod",
			"ObjectPattern",
			"objectPattern",
			"SpreadElement",
			"spreadElement",
			"Super",
			"super",
			"TaggedTemplateExpression",
			"taggedTemplateExpression",
			"TemplateElement",
			"templateElement",
			"TemplateLiteral",
			"templateLiteral",
			"YieldExpression",
			"yieldExpression",
			"AnyTypeAnnotation",
			"anyTypeAnnotation",
			"ArrayTypeAnnotation",
			"arrayTypeAnnotation",
			"BooleanTypeAnnotation",
			"booleanTypeAnnotation",
			"BooleanLiteralTypeAnnotation",
			"booleanLiteralTypeAnnotation",
			"NullLiteralTypeAnnotation",
			"nullLiteralTypeAnnotation",
			"ClassImplements",
			"classImplements",
			"ClassProperty",
			"classProperty",
			"DeclareClass",
			"declareClass",
			"DeclareFunction",
			"declareFunction",
			"DeclareInterface",
			"declareInterface",
			"DeclareModule",
			"declareModule",
			"DeclareModuleExports",
			"declareModuleExports",
			"DeclareTypeAlias",
			"declareTypeAlias",
			"DeclareOpaqueType",
			"declareOpaqueType",
			"DeclareVariable",
			"declareVariable",
			"DeclareExportDeclaration",
			"declareExportDeclaration",
			"ExistentialTypeParam",
			"existentialTypeParam",
			"FunctionTypeAnnotation",
			"functionTypeAnnotation",
			"FunctionTypeParam",
			"functionTypeParam",
			"GenericTypeAnnotation",
			"genericTypeAnnotation",
			"InterfaceExtends",
			"interfaceExtends",
			"InterfaceDeclaration",
			"interfaceDeclaration",
			"IntersectionTypeAnnotation",
			"intersectionTypeAnnotation",
			"MixedTypeAnnotation",
			"mixedTypeAnnotation",
			"EmptyTypeAnnotation",
			"emptyTypeAnnotation",
			"NullableTypeAnnotation",
			"nullableTypeAnnotation",
			"NumericLiteralTypeAnnotation",
			"numericLiteralTypeAnnotation",
			"NumberTypeAnnotation",
			"numberTypeAnnotation",
			"StringLiteralTypeAnnotation",
			"stringLiteralTypeAnnotation",
			"StringTypeAnnotation",
			"stringTypeAnnotation",
			"ThisTypeAnnotation",
			"thisTypeAnnotation",
			"TupleTypeAnnotation",
			"tupleTypeAnnotation",
			"TypeofTypeAnnotation",
			"typeofTypeAnnotation",
			"TypeAlias",
			"typeAlias",
			"OpaqueType",
			"opaqueType",
			"TypeAnnotation",
			"typeAnnotation",
			"TypeCastExpression",
			"typeCastExpression",
			"TypeParameter",
			"typeParameter",
			"TypeParameterDeclaration",
			"typeParameterDeclaration",
			"TypeParameterInstantiation",
			"typeParameterInstantiation",
			"ObjectTypeAnnotation",
			"objectTypeAnnotation",
			"ObjectTypeCallProperty",
			"objectTypeCallProperty",
			"ObjectTypeIndexer",
			"objectTypeIndexer",
			"ObjectTypeProperty",
			"objectTypeProperty",
			"ObjectTypeSpreadProperty",
			"objectTypeSpreadProperty",
			"QualifiedTypeIdentifier",
			"qualifiedTypeIdentifier",
			"UnionTypeAnnotation",
			"unionTypeAnnotation",
			"VoidTypeAnnotation",
			"voidTypeAnnotation",
			"JSXAttribute",
			"jSXAttribute",
			"JSXClosingElement",
			"jSXClosingElement",
			"JSXElement",
			"jSXElement",
			"JSXEmptyExpression",
			"jSXEmptyExpression",
			"JSXExpressionContainer",
			"jSXExpressionContainer",
			"JSXSpreadChild",
			"jSXSpreadChild",
			"JSXIdentifier",
			"jSXIdentifier",
			"JSXMemberExpression",
			"jSXMemberExpression",
			"JSXNamespacedName",
			"jSXNamespacedName",
			"JSXOpeningElement",
			"jSXOpeningElement",
			"JSXSpreadAttribute",
			"jSXSpreadAttribute",
			"JSXText",
			"jSXText",
			"Noop",
			"noop",
			"ParenthesizedExpression",
			"parenthesizedExpression",
			"AwaitExpression",
			"awaitExpression",
			"ForAwaitStatement",
			"forAwaitStatement",
			"BindExpression",
			"bindExpression",
			"Import",
			"import",
			"Decorator",
			"decorator",
			"DoExpression",
			"doExpression",
			"ExportDefaultSpecifier",
			"exportDefaultSpecifier",
			"ExportNamespaceSpecifier",
			"exportNamespaceSpecifier",
			"RestProperty",
			"restProperty",
			"SpreadProperty",
			"spreadProperty",
			"numberLiteral",
			"NumberLiteral",
			"isNumberLiteral",
			"assertNumberLiteral",
			"regexLiteral",
			"RegexLiteral",
			"isRegexLiteral",
			"assertRegexLiteral"
		],
		"detectedNames": [
			"STATEMENT_OR_BLOCK_KEYS",
			"FLATTENABLE_KEYS",
			"FOR_INIT_KEYS",
			"COMMENT_KEYS",
			"LOGICAL_OPERATORS",
			"UPDATE_OPERATORS",
			"BOOLEAN_NUMBER_BINARY_OPERATORS",
			"EQUALITY_BINARY_OPERATORS",
			"COMPARISON_BINARY_OPERATORS",
			"BOOLEAN_BINARY_OPERATORS",
			"NUMBER_BINARY_OPERATORS",
			"BINARY_OPERATORS",
			"BOOLEAN_UNARY_OPERATORS",
			"NUMBER_UNARY_OPERATORS",
			"STRING_UNARY_OPERATORS",
			"UNARY_OPERATORS",
			"INHERIT_KEYS",
			"BLOCK_SCOPED_SYMBOL",
			"NOT_LOCAL_BINDING",
			"VISITOR_KEYS",
			"ALIAS_KEYS",
			"NODE_FIELDS",
			"BUILDER_KEYS",
			"DEPRECATED_KEYS",
			"react",
			"TYPES",
			"getBindingIdentifiers",
			"getOuterBindingIdentifiers",
			"isBinding",
			"isReferenced",
			"isValidIdentifier",
			"isLet",
			"isBlockScoped",
			"isVar",
			"isSpecifierDefault",
			"isScope",
			"isImmutable",
			"isNodesEquivalent",
			"toComputedKey",
			"toSequenceExpression",
			"toKeyAlias",
			"toIdentifier",
			"toBindingIdentifierName",
			"toStatement",
			"toExpression",
			"toBlock",
			"valueToNode",
			"createUnionTypeAnnotation",
			"removeTypeDuplicates",
			"createTypeAnnotationBasedOnTypeof",
			"is",
			"isType",
			"validate",
			"shallowEqual",
			"appendToMemberExpression",
			"prependToMemberExpression",
			"ensureBlock",
			"clone",
			"cloneWithoutLoc",
			"cloneDeep",
			"buildMatchMemberExpression",
			"removeComments",
			"inheritsComments",
			"inheritTrailingComments",
			"inheritLeadingComments",
			"inheritInnerComments",
			"inherits",
			"assertNode",
			"isNode",
			"traverseFast",
			"removeProperties",
			"removePropertiesDeep"
		],
		"missingNames": [
			"isArrayExpression",
			"assertArrayExpression",
			"isAssignmentExpression",
			"assertAssignmentExpression",
			"isBinaryExpression",
			"assertBinaryExpression",
			"isDirective",
			"assertDirective",
			"isDirectiveLiteral",
			"assertDirectiveLiteral",
			"isBlockStatement",
			"assertBlockStatement",
			"isBreakStatement",
			"assertBreakStatement",
			"isCallExpression",
			"assertCallExpression",
			"isCatchClause",
			"assertCatchClause",
			"isConditionalExpression",
			"assertConditionalExpression",
			"isContinueStatement",
			"assertContinueStatement",
			"isDebuggerStatement",
			"assertDebuggerStatement",
			"isDoWhileStatement",
			"assertDoWhileStatement",
			"isEmptyStatement",
			"assertEmptyStatement",
			"isExpressionStatement",
			"assertExpressionStatement",
			"isFile",
			"assertFile",
			"isForInStatement",
			"assertForInStatement",
			"isForStatement",
			"assertForStatement",
			"isFunctionDeclaration",
			"assertFunctionDeclaration",
			"isFunctionExpression",
			"assertFunctionExpression",
			"isIdentifier",
			"assertIdentifier",
			"isIfStatement",
			"assertIfStatement",
			"isLabeledStatement",
			"assertLabeledStatement",
			"isStringLiteral",
			"assertStringLiteral",
			"isNumericLiteral",
			"assertNumericLiteral",
			"isNullLiteral",
			"assertNullLiteral",
			"isBooleanLiteral",
			"assertBooleanLiteral",
			"isRegExpLiteral",
			"assertRegExpLiteral",
			"isLogicalExpression",
			"assertLogicalExpression",
			"isMemberExpression",
			"assertMemberExpression",
			"isNewExpression",
			"assertNewExpression",
			"isProgram",
			"assertProgram",
			"isObjectExpression",
			"assertObjectExpression",
			"isObjectMethod",
			"assertObjectMethod",
			"isObjectProperty",
			"assertObjectProperty",
			"isRestElement",
			"assertRestElement",
			"isReturnStatement",
			"assertReturnStatement",
			"isSequenceExpression",
			"assertSequenceExpression",
			"isSwitchCase",
			"assertSwitchCase",
			"isSwitchStatement",
			"assertSwitchStatement",
			"isThisExpression",
			"assertThisExpression",
			"isThrowStatement",
			"assertThrowStatement",
			"isTryStatement",
			"assertTryStatement",
			"isUnaryExpression",
			"assertUnaryExpression",
			"isUpdateExpression",
			"assertUpdateExpression",
			"isVariableDeclaration",
			"assertVariableDeclaration",
			"isVariableDeclarator",
			"assertVariableDeclarator",
			"isWhileStatement",
			"assertWhileStatement",
			"isWithStatement",
			"assertWithStatement",
			"isAssignmentPattern",
			"assertAssignmentPattern",
			"isArrayPattern",
			"assertArrayPattern",
			"isArrowFunctionExpression",
			"assertArrowFunctionExpression",
			"isClassBody",
			"assertClassBody",
			"isClassDeclaration",
			"assertClassDeclaration",
			"isClassExpression",
			"assertClassExpression",
			"isExportAllDeclaration",
			"assertExportAllDeclaration",
			"isExportDefaultDeclaration",
			"assertExportDefaultDeclaration",
			"isExportNamedDeclaration",
			"assertExportNamedDeclaration",
			"isExportSpecifier",
			"assertExportSpecifier",
			"isForOfStatement",
			"assertForOfStatement",
			"isImportDeclaration",
			"assertImportDeclaration",
			"isImportDefaultSpecifier",
			"assertImportDefaultSpecifier",
			"isImportNamespaceSpecifier",
			"assertImportNamespaceSpecifier",
			"isImportSpecifier",
			"assertImportSpecifier",
			"isMetaProperty",
			"assertMetaProperty",
			"isClassMethod",
			"assertClassMethod",
			"isObjectPattern",
			"assertObjectPattern",
			"isSpreadElement",
			"assertSpreadElement",
			"isSuper",
			"assertSuper",
			"isTaggedTemplateExpression",
			"assertTaggedTemplateExpression",
			"isTemplateElement",
			"assertTemplateElement",
			"isTemplateLiteral",
			"assertTemplateLiteral",
			"isYieldExpression",
			"assertYieldExpression",
			"isAnyTypeAnnotation",
			"assertAnyTypeAnnotation",
			"isArrayTypeAnnotation",
			"assertArrayTypeAnnotation",
			"isBooleanTypeAnnotation",
			"assertBooleanTypeAnnotation",
			"isBooleanLiteralTypeAnnotation",
			"assertBooleanLiteralTypeAnnotation",
			"isNullLiteralTypeAnnotation",
			"assertNullLiteralTypeAnnotation",
			"isClassImplements",
			"assertClassImplements",
			"isClassProperty",
			"assertClassProperty",
			"isDeclareClass",
			"assertDeclareClass",
			"isDeclareFunction",
			"assertDeclareFunction",
			"isDeclareInterface",
			"assertDeclareInterface",
			"isDeclareModule",
			"assertDeclareModule",
			"isDeclareModuleExports",
			"assertDeclareModuleExports",
			"isDeclareTypeAlias",
			"assertDeclareTypeAlias",
			"isDeclareOpaqueType",
			"assertDeclareOpaqueType",
			"isDeclareVariable",
			"assertDeclareVariable",
			"isDeclareExportDeclaration",
			"assertDeclareExportDeclaration",
			"isExistentialTypeParam",
			"assertExistentialTypeParam",
			"isFunctionTypeAnnotation",
			"assertFunctionTypeAnnotation",
			"isFunctionTypeParam",
			"assertFunctionTypeParam",
			"isGenericTypeAnnotation",
			"assertGenericTypeAnnotation",
			"isInterfaceExtends",
			"assertInterfaceExtends",
			"isInterfaceDeclaration",
			"assertInterfaceDeclaration",
			"isIntersectionTypeAnnotation",
			"assertIntersectionTypeAnnotation",
			"isMixedTypeAnnotation",
			"assertMixedTypeAnnotation",
			"isEmptyTypeAnnotation",
			"assertEmptyTypeAnnotation",
			"isNullableTypeAnnotation",
			"assertNullableTypeAnnotation",
			"isNumericLiteralTypeAnnotation",
			"assertNumericLiteralTypeAnnotation",
			"isNumberTypeAnnotation",
			"assertNumberTypeAnnotation",
			"isStringLiteralTypeAnnotation",
			"assertStringLiteralTypeAnnotation",
			"isStringTypeAnnotation",
			"assertStringTypeAnnotation",
			"isThisTypeAnnotation",
			"assertThisTypeAnnotation",
			"isTupleTypeAnnotation",
			"assertTupleTypeAnnotation",
			"isTypeofTypeAnnotation",
			"assertTypeofTypeAnnotation",
			"isTypeAlias",
			"assertTypeAlias",
			"isOpaqueType",
			"assertOpaqueType",
			"isTypeAnnotation",
			"assertTypeAnnotation",
			"isTypeCastExpression",
			"assertTypeCastExpression",
			"isTypeParameter",
			"assertTypeParameter",
			"isTypeParameterDeclaration",
			"assertTypeParameterDeclaration",
			"isTypeParameterInstantiation",
			"assertTypeParameterInstantiation",
			"isObjectTypeAnnotation",
			"assertObjectTypeAnnotation",
			"isObjectTypeCallProperty",
			"assertObjectTypeCallProperty",
			"isObjectTypeIndexer",
			"assertObjectTypeIndexer",
			"isObjectTypeProperty",
			"assertObjectTypeProperty",
			"isObjectTypeSpreadProperty",
			"assertObjectTypeSpreadProperty",
			"isQualifiedTypeIdentifier",
			"assertQualifiedTypeIdentifier",
			"isUnionTypeAnnotation",
			"assertUnionTypeAnnotation",
			"isVoidTypeAnnotation",
			"assertVoidTypeAnnotation",
			"isJSXAttribute",
			"assertJSXAttribute",
			"isJSXClosingElement",
			"assertJSXClosingElement",
			"isJSXElement",
			"assertJSXElement",
			"isJSXEmptyExpression",
			"assertJSXEmptyExpression",
			"isJSXExpressionContainer",
			"assertJSXExpressionContainer",
			"isJSXSpreadChild",
			"assertJSXSpreadChild",
			"isJSXIdentifier",
			"assertJSXIdentifier",
			"isJSXMemberExpression",
			"assertJSXMemberExpression",
			"isJSXNamespacedName",
			"assertJSXNamespacedName",
			"isJSXOpeningElement",
			"assertJSXOpeningElement",
			"isJSXSpreadAttribute",
			"assertJSXSpreadAttribute",
			"isJSXText",
			"assertJSXText",
			"isNoop",
			"assertNoop",
			"isParenthesizedExpression",
			"assertParenthesizedExpression",
			"isAwaitExpression",
			"assertAwaitExpression",
			"isForAwaitStatement",
			"assertForAwaitStatement",
			"isBindExpression",
			"assertBindExpression",
			"isImport",
			"assertImport",
			"isDecorator",
			"assertDecorator",
			"isDoExpression",
			"assertDoExpression",
			"isExportDefaultSpecifier",
			"assertExportDefaultSpecifier",
			"isExportNamespaceSpecifier",
			"assertExportNamespaceSpecifier",
			"isRestProperty",
			"assertRestProperty",
			"isSpreadProperty",
			"assertSpreadProperty",
			"FLIPPED_ALIAS_KEYS",
			"EXPRESSION_TYPES",
			"isExpression",
			"assertExpression",
			"BINARY_TYPES",
			"isBinary",
			"assertBinary",
			"SCOPABLE_TYPES",
			"isScopable",
			"assertScopable",
			"BLOCKPARENT_TYPES",
			"isBlockParent",
			"assertBlockParent",
			"BLOCK_TYPES",
			"isBlock",
			"assertBlock",
			"STATEMENT_TYPES",
			"isStatement",
			"assertStatement",
			"TERMINATORLESS_TYPES",
			"isTerminatorless",
			"assertTerminatorless",
			"COMPLETIONSTATEMENT_TYPES",
			"isCompletionStatement",
			"assertCompletionStatement",
			"CONDITIONAL_TYPES",
			"isConditional",
			"assertConditional",
			"LOOP_TYPES",
			"isLoop",
			"assertLoop",
			"WHILE_TYPES",
			"isWhile",
			"assertWhile",
			"EXPRESSIONWRAPPER_TYPES",
			"isExpressionWrapper",
			"assertExpressionWrapper",
			"FOR_TYPES",
			"isFor",
			"assertFor",
			"FORXSTATEMENT_TYPES",
			"isForXStatement",
			"assertForXStatement",
			"FUNCTION_TYPES",
			"isFunction",
			"assertFunction",
			"FUNCTIONPARENT_TYPES",
			"isFunctionParent",
			"assertFunctionParent",
			"PUREISH_TYPES",
			"isPureish",
			"assertPureish",
			"DECLARATION_TYPES",
			"isDeclaration",
			"assertDeclaration",
			"LVAL_TYPES",
			"isLVal",
			"assertLVal",
			"LITERAL_TYPES",
			"isLiteral",
			"assertLiteral",
			"IMMUTABLE_TYPES",
			"assertImmutable",
			"USERWHITESPACABLE_TYPES",
			"isUserWhitespacable",
			"assertUserWhitespacable",
			"METHOD_TYPES",
			"isMethod",
			"assertMethod",
			"OBJECTMEMBER_TYPES",
			"isObjectMember",
			"assertObjectMember",
			"PROPERTY_TYPES",
			"isProperty",
			"assertProperty",
			"UNARYLIKE_TYPES",
			"isUnaryLike",
			"assertUnaryLike",
			"PATTERN_TYPES",
			"isPattern",
			"assertPattern",
			"CLASS_TYPES",
			"isClass",
			"assertClass",
			"MODULEDECLARATION_TYPES",
			"isModuleDeclaration",
			"assertModuleDeclaration",
			"EXPORTDECLARATION_TYPES",
			"isExportDeclaration",
			"assertExportDeclaration",
			"MODULESPECIFIER_TYPES",
			"isModuleSpecifier",
			"assertModuleSpecifier",
			"FLOW_TYPES",
			"isFlow",
			"assertFlow",
			"FLOWBASEANNOTATION_TYPES",
			"isFlowBaseAnnotation",
			"assertFlowBaseAnnotation",
			"FLOWDECLARATION_TYPES",
			"isFlowDeclaration",
			"assertFlowDeclaration",
			"JSX_TYPES",
			"isJSX",
			"assertJSX",
			"ArrayExpression",
			"arrayExpression",
			"AssignmentExpression",
			"assignmentExpression",
			"BinaryExpression",
			"binaryExpression",
			"Directive",
			"directive",
			"DirectiveLiteral",
			"directiveLiteral",
			"BlockStatement",
			"blockStatement",
			"BreakStatement",
			"breakStatement",
			"CallExpression",
			"callExpression",
			"CatchClause",
			"catchClause",
			"ConditionalExpression",
			"conditionalExpression",
			"ContinueStatement",
			"continueStatement",
			"DebuggerStatement",
			"debuggerStatement",
			"DoWhileStatement",
			"doWhileStatement",
			"EmptyStatement",
			"emptyStatement",
			"ExpressionStatement",
			"expressionStatement",
			"File",
			"file",
			"ForInStatement",
			"forInStatement",
			"ForStatement",
			"forStatement",
			"FunctionDeclaration",
			"functionDeclaration",
			"FunctionExpression",
			"functionExpression",
			"Identifier",
			"identifier",
			"IfStatement",
			"ifStatement",
			"LabeledStatement",
			"labeledStatement",
			"StringLiteral",
			"stringLiteral",
			"NumericLiteral",
			"numericLiteral",
			"NullLiteral",
			"nullLiteral",
			"BooleanLiteral",
			"booleanLiteral",
			"RegExpLiteral",
			"regExpLiteral",
			"LogicalExpression",
			"logicalExpression",
			"MemberExpression",
			"memberExpression",
			"NewExpression",
			"newExpression",
			"Program",
			"program",
			"ObjectExpression",
			"objectExpression",
			"ObjectMethod",
			"objectMethod",
			"ObjectProperty",
			"objectProperty",
			"RestElement",
			"restElement",
			"ReturnStatement",
			"returnStatement",
			"SequenceExpression",
			"sequenceExpression",
			"SwitchCase",
			"switchCase",
			"SwitchStatement",
			"switchStatement",
			"ThisExpression",
			"thisExpression",
			"ThrowStatement",
			"throwStatement",
			"TryStatement",
			"tryStatement",
			"UnaryExpression",
			"unaryExpression",
			"UpdateExpression",
			"updateExpression",
			"VariableDeclaration",
			"variableDeclaration",
			"VariableDeclarator",
			"variableDeclarator",
			"WhileStatement",
			"whileStatement",
			"WithStatement",
			"withStatement",
			"AssignmentPattern",
			"assignmentPattern",
			"ArrayPattern",
			"arrayPattern",
			"ArrowFunctionExpression",
			"arrowFunctionExpression",
			"ClassBody",
			"classBody",
			"ClassDeclaration",
			"classDeclaration",
			"ClassExpression",
			"classExpression",
			"ExportAllDeclaration",
			"exportAllDeclaration",
			"ExportDefaultDeclaration",
			"exportDefaultDeclaration",
			"ExportNamedDeclaration",
			"exportNamedDeclaration",
			"ExportSpecifier",
			"exportSpecifier",
			"ForOfStatement",
			"forOfStatement",
			"ImportDeclaration",
			"importDeclaration",
			"ImportDefaultSpecifier",
			"importDefaultSpecifier",
			"ImportNamespaceSpecifier",
			"importNamespaceSpecifier",
			"ImportSpecifier",
			"importSpecifier",
			"MetaProperty",
			"metaProperty",
			"ClassMethod",
			"classMethod",
			"ObjectPattern",
			"objectPattern",
			"SpreadElement",
			"spreadElement",
			"Super",
			"super",
			"TaggedTemplateExpression",
			"taggedTemplateExpression",
			"TemplateElement",
			"templateElement",
			"TemplateLiteral",
			"templateLiteral",
			"YieldExpression",
			"yieldExpression",
			"AnyTypeAnnotation",
			"anyTypeAnnotation",
			"ArrayTypeAnnotation",
			"arrayTypeAnnotation",
			"BooleanTypeAnnotation",
			"booleanTypeAnnotation",
			"BooleanLiteralTypeAnnotation",
			"booleanLiteralTypeAnnotation",
			"NullLiteralTypeAnnotation",
			"nullLiteralTypeAnnotation",
			"ClassImplements",
			"classImplements",
			"ClassProperty",
			"classProperty",
			"DeclareClass",
			"declareClass",
			"DeclareFunction",
			"declareFunction",
			"DeclareInterface",
			"declareInterface",
			"DeclareModule",
			"declareModule",
			"DeclareModuleExports",
			"declareModuleExports",
			"DeclareTypeAlias",
			"declareTypeAlias",
			"DeclareOpaqueType",
			"declareOpaqueType",
			"DeclareVariable",
			"declareVariable",
			"DeclareExportDeclaration",
			"declareExportDeclaration",
			"ExistentialTypeParam",
			"existentialTypeParam",
			"FunctionTypeAnnotation",
			"functionTypeAnnotation",
			"FunctionTypeParam",
			"functionTypeParam",
			"GenericTypeAnnotation",
			"genericTypeAnnotation",
			"InterfaceExtends",
			"interfaceExtends",
			"InterfaceDeclaration",
			"interfaceDeclaration",
			"IntersectionTypeAnnotation",
			"intersectionTypeAnnotation",
			"MixedTypeAnnotation",
			"mixedTypeAnnotation",
			"EmptyTypeAnnotation",
			"emptyTypeAnnotation",
			"NullableTypeAnnotation",
			"nullableTypeAnnotation",
			"NumericLiteralTypeAnnotation",
			"numericLiteralTypeAnnotation",
			"NumberTypeAnnotation",
			"numberTypeAnnotation",
			"StringLiteralTypeAnnotation",
			"stringLiteralTypeAnnotation",
			"StringTypeAnnotation",
			"stringTypeAnnotation",
			"ThisTypeAnnotation",
			"thisTypeAnnotation",
			"TupleTypeAnnotation",
			"tupleTypeAnnotation",
			"TypeofTypeAnnotation",
			"typeofTypeAnnotation",
			"TypeAlias",
			"typeAlias",
			"OpaqueType",
			"opaqueType",
			"TypeAnnotation",
			"typeAnnotation",
			"TypeCastExpression",
			"typeCastExpression",
			"TypeParameter",
			"typeParameter",
			"TypeParameterDeclaration",
			"typeParameterDeclaration",
			"TypeParameterInstantiation",
			"typeParameterInstantiation",
			"ObjectTypeAnnotation",
			"objectTypeAnnotation",
			"ObjectTypeCallProperty",
			"objectTypeCallProperty",
			"ObjectTypeIndexer",
			"objectTypeIndexer",
			"ObjectTypeProperty",
			"objectTypeProperty",
			"ObjectTypeSpreadProperty",
			"objectTypeSpreadProperty",
			"QualifiedTypeIdentifier",
			"qualifiedTypeIdentifier",
			"UnionTypeAnnotation",
			"unionTypeAnnotation",
			"VoidTypeAnnotation",
			"voidTypeAnnotation",
			"JSXAttribute",
			"jSXAttribute",
			"JSXClosingElement",
			"jSXClosingElement",
			"JSXElement",
			"jSXElement",
			"JSXEmptyExpression",
			"jSXEmptyExpression",
			"JSXExpressionContainer",
			"jSXExpressionContainer",
			"JSXSpreadChild",
			"jSXSpreadChild",
			"JSXIdentifier",
			"jSXIdentifier",
			"JSXMemberExpression",
			"jSXMemberExpression",
			"JSXNamespacedName",
			"jSXNamespacedName",
			"JSXOpeningElement",
			"jSXOpeningElement",
			"JSXSpreadAttribute",
			"jSXSpreadAttribute",
			"JSXText",
			"jSXText",
			"Noop",
			"noop",
			"ParenthesizedExpression",
			"parenthesizedExpression",
			"AwaitExpression",
			"awaitExpression",
			"ForAwaitStatement",
			"forAwaitStatement",
			"BindExpression",
			"bindExpression",
			"Import",
			"import",
			"Decorator",
			"decorator",
			"DoExpression",
			"doExpression",
			"ExportDefaultSpecifier",
			"exportDefaultSpecifier",
			"ExportNamespaceSpecifier",
			"exportNamespaceSpecifier",
			"RestProperty",
			"restProperty",
			"SpreadProperty",
			"spreadProperty",
			"numberLiteral",
			"NumberLiteral",
			"isNumberLiteral",
			"assertNumberLiteral",
			"regexLiteral",
			"RegexLiteral",
			"isRegexLiteral",
			"assertRegexLiteral"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "read-pkg-up",
		"expectedNames": [
			"sync"
		],
		"detectedNames": [
			"sync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "escape-html",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "broccoli-merge-trees",
		"expectedNames": [
			"MergeTrees"
		],
		"detectedNames": [
			"MergeTrees"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "ssh2",
		"expectedNames": [
			"Client",
			"Server",
			"utils",
			"SFTP_STATUS_CODE",
			"SFTP_OPEN_MODE",
			"HTTPAgent",
			"HTTPSAgent"
		],
		"detectedNames": [],
		"missingNames": [
			"Client",
			"Server",
			"utils",
			"SFTP_STATUS_CODE",
			"SFTP_OPEN_MODE",
			"HTTPAgent",
			"HTTPSAgent"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "sax",
		"expectedNames": [
			"parser",
			"SAXParser",
			"SAXStream",
			"createStream",
			"MAX_BUFFER_LENGTH",
			"EVENTS",
			"STATE",
			"XML_ENTITIES",
			"ENTITIES"
		],
		"detectedNames": [],
		"missingNames": [
			"parser",
			"SAXParser",
			"SAXStream",
			"createStream",
			"MAX_BUFFER_LENGTH",
			"EVENTS",
			"STATE",
			"XML_ENTITIES",
			"ENTITIES"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "child_process",
		"expectedNames": [
			"_forkChild",
			"ChildProcess",
			"exec",
			"execFile",
			"execFileSync",
			"execSync",
			"fork",
			"spawn",
			"spawnSync"
		],
		"detectedNames": [
			"_forkChild",
			"ChildProcess",
			"exec",
			"execFile",
			"execFileSync",
			"execSync",
			"fork",
			"spawn",
			"spawnSync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "wrench",
		"expectedNames": [
			"readdirSyncRecursive",
			"readdirRecursive",
			"rmdirSyncRecursive",
			"copyDirSyncRecursive",
			"chmodSyncRecursive",
			"chownSyncRecursive",
			"rmdirRecursive",
			"copyDirRecursive",
			"mkdirSyncRecursive",
			"LineReader"
		],
		"detectedNames": [
			"readdirSyncRecursive",
			"readdirRecursive",
			"rmdirSyncRecursive",
			"copyDirSyncRecursive",
			"chmodSyncRecursive",
			"chownSyncRecursive",
			"rmdirRecursive",
			"copyDirRecursive",
			"mkdirSyncRecursive",
			"LineReader"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rx",
		"expectedNames": [
			"internals",
			"config",
			"helpers",
			"EmptyError",
			"ObjectDisposedError",
			"ArgumentOutOfRangeError",
			"NotSupportedError",
			"NotImplementedError",
			"doneEnumerator",
			"CompositeDisposable",
			"Disposable",
			"SingleAssignmentDisposable",
			"SerialDisposable",
			"BinaryDisposable",
			"NAryDisposable",
			"RefCountDisposable",
			"Scheduler",
			"Notification",
			"Observer",
			"AnonymousObserver",
			"Observable",
			"ObservableBase",
			"FlatMapObservable",
			"CompositeError",
			"AnonymousObservable",
			"Subject",
			"AsyncSubject",
			"AnonymousSubject",
			"Rx",
			"Pauser",
			"BehaviorSubject",
			"ReplaySubject",
			"ConnectableObservable",
			"VirtualTimeScheduler",
			"HistoricalScheduler",
			"ReactiveTest",
			"Recorded",
			"Subscription",
			"MockDisposable",
			"TestScheduler",
			"TimeoutError"
		],
		"detectedNames": [],
		"missingNames": [
			"internals",
			"config",
			"helpers",
			"EmptyError",
			"ObjectDisposedError",
			"ArgumentOutOfRangeError",
			"NotSupportedError",
			"NotImplementedError",
			"doneEnumerator",
			"CompositeDisposable",
			"Disposable",
			"SingleAssignmentDisposable",
			"SerialDisposable",
			"BinaryDisposable",
			"NAryDisposable",
			"RefCountDisposable",
			"Scheduler",
			"Notification",
			"Observer",
			"AnonymousObserver",
			"Observable",
			"ObservableBase",
			"FlatMapObservable",
			"CompositeError",
			"AnonymousObservable",
			"Subject",
			"AsyncSubject",
			"AnonymousSubject",
			"Rx",
			"Pauser",
			"BehaviorSubject",
			"ReplaySubject",
			"ConnectableObservable",
			"VirtualTimeScheduler",
			"HistoricalScheduler",
			"ReactiveTest",
			"Recorded",
			"Subscription",
			"MockDisposable",
			"TestScheduler",
			"TimeoutError"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ethereumjs-util",
		"transpiled": true,
		"expectedNames": [
			"MAX_INTEGER",
			"TWO_POW256",
			"KECCAK256_NULL_S",
			"KECCAK256_NULL",
			"KECCAK256_RLP_ARRAY_S",
			"KECCAK256_RLP_ARRAY",
			"KECCAK256_RLP_S",
			"KECCAK256_RLP",
			"zeroAddress",
			"isValidAddress",
			"isZeroAddress",
			"toChecksumAddress",
			"isValidChecksumAddress",
			"generateAddress",
			"generateAddress2",
			"isValidPrivate",
			"isValidPublic",
			"pubToAddress",
			"publicToAddress",
			"privateToAddress",
			"privateToPublic",
			"importPublic",
			"Address",
			"keccak",
			"keccak256",
			"keccakFromString",
			"keccakFromHexString",
			"keccakFromArray",
			"sha256",
			"sha256FromString",
			"sha256FromArray",
			"ripemd160",
			"ripemd160FromString",
			"ripemd160FromArray",
			"rlphash",
			"ecsign",
			"ecrecover",
			"toRpcSig",
			"fromRpcSig",
			"isValidSignature",
			"hashPersonalMessage",
			"zeros",
			"setLengthLeft",
			"setLengthRight",
			"unpadBuffer",
			"unpadArray",
			"unpadHexString",
			"toBuffer",
			"bufferToInt",
			"bufferToHex",
			"fromSigned",
			"toUnsigned",
			"addHexPrefix",
			"baToJSON",
			"defineProperties",
			"BN",
			"rlp",
			"arrayContainsArray",
			"intToBuffer",
			"getBinarySize",
			"isHexPrefixed",
			"stripHexPrefix",
			"padToEven",
			"intToHex",
			"fromAscii",
			"fromUtf8",
			"toAscii",
			"toUtf8",
			"getKeys",
			"isHexString"
		],
		"detectedNames": [
			"MAX_INTEGER",
			"TWO_POW256",
			"KECCAK256_NULL_S",
			"KECCAK256_NULL",
			"KECCAK256_RLP_ARRAY_S",
			"KECCAK256_RLP_ARRAY",
			"KECCAK256_RLP_S",
			"KECCAK256_RLP",
			"zeroAddress",
			"isValidAddress",
			"isZeroAddress",
			"toChecksumAddress",
			"isValidChecksumAddress",
			"generateAddress",
			"generateAddress2",
			"isValidPrivate",
			"isValidPublic",
			"pubToAddress",
			"publicToAddress",
			"privateToAddress",
			"privateToPublic",
			"importPublic",
			"Address",
			"keccak",
			"keccak256",
			"keccakFromString",
			"keccakFromHexString",
			"keccakFromArray",
			"sha256",
			"sha256FromString",
			"sha256FromArray",
			"ripemd160",
			"ripemd160FromString",
			"ripemd160FromArray",
			"rlphash",
			"ecsign",
			"ecrecover",
			"toRpcSig",
			"fromRpcSig",
			"isValidSignature",
			"hashPersonalMessage",
			"zeros",
			"setLengthLeft",
			"setLengthRight",
			"unpadBuffer",
			"unpadArray",
			"unpadHexString",
			"toBuffer",
			"bufferToInt",
			"bufferToHex",
			"fromSigned",
			"toUnsigned",
			"addHexPrefix",
			"baToJSON",
			"defineProperties",
			"BN",
			"rlp",
			"arrayContainsArray",
			"intToBuffer",
			"getBinarySize",
			"isHexPrefixed",
			"stripHexPrefix",
			"padToEven",
			"intToHex",
			"fromAscii",
			"fromUtf8",
			"toAscii",
			"toUtf8",
			"getKeys",
			"isHexString"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "jimp",
		"expectedNames": [
			"AUTO",
			"HORIZONTAL_ALIGN_LEFT",
			"HORIZONTAL_ALIGN_CENTER",
			"HORIZONTAL_ALIGN_RIGHT",
			"VERTICAL_ALIGN_TOP",
			"VERTICAL_ALIGN_MIDDLE",
			"VERTICAL_ALIGN_BOTTOM",
			"BLEND_SOURCE_OVER",
			"BLEND_DESTINATION_OVER",
			"BLEND_MULTIPLY",
			"BLEND_ADD",
			"BLEND_SCREEN",
			"BLEND_OVERLAY",
			"BLEND_DARKEN",
			"BLEND_LIGHTEN",
			"BLEND_HARDLIGHT",
			"BLEND_DIFFERENCE",
			"BLEND_EXCLUSION",
			"EDGE_EXTEND",
			"EDGE_WRAP",
			"EDGE_CROP",
			"__extraConstructors",
			"appendConstructorOption",
			"read",
			"create",
			"rgbaToInt",
			"intToRGBA",
			"cssColorToHex",
			"limit255",
			"diff",
			"distance",
			"compareHashes",
			"colorDiff",
			"decoders",
			"encoders",
			"hasAlpha",
			"MIME_JPEG",
			"MIME_PNG",
			"PNG_FILTER_AUTO",
			"PNG_FILTER_NONE",
			"PNG_FILTER_SUB",
			"PNG_FILTER_UP",
			"PNG_FILTER_AVERAGE",
			"PNG_FILTER_PATH",
			"MIME_BMP",
			"MIME_X_MS_BMP",
			"MIME_TIFF",
			"MIME_GIF",
			"measureText",
			"measureTextHeight",
			"FONT_SANS_8_BLACK",
			"FONT_SANS_10_BLACK",
			"FONT_SANS_12_BLACK",
			"FONT_SANS_14_BLACK",
			"FONT_SANS_16_BLACK",
			"FONT_SANS_32_BLACK",
			"FONT_SANS_64_BLACK",
			"FONT_SANS_128_BLACK",
			"FONT_SANS_8_WHITE",
			"FONT_SANS_16_WHITE",
			"FONT_SANS_32_WHITE",
			"FONT_SANS_64_WHITE",
			"FONT_SANS_128_WHITE",
			"loadFont",
			"RESIZE_NEAREST_NEIGHBOR",
			"RESIZE_BILINEAR",
			"RESIZE_BICUBIC",
			"RESIZE_HERMITE",
			"RESIZE_BEZIER",
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"detectedNames": [],
		"missingNames": [
			"AUTO",
			"HORIZONTAL_ALIGN_LEFT",
			"HORIZONTAL_ALIGN_CENTER",
			"HORIZONTAL_ALIGN_RIGHT",
			"VERTICAL_ALIGN_TOP",
			"VERTICAL_ALIGN_MIDDLE",
			"VERTICAL_ALIGN_BOTTOM",
			"BLEND_SOURCE_OVER",
			"BLEND_DESTINATION_OVER",
			"BLEND_MULTIPLY",
			"BLEND_ADD",
			"BLEND_SCREEN",
			"BLEND_OVERLAY",
			"BLEND_DARKEN",
			"BLEND_LIGHTEN",
			"BLEND_HARDLIGHT",
			"BLEND_DIFFERENCE",
			"BLEND_EXCLUSION",
			"EDGE_EXTEND",
			"EDGE_WRAP",
			"EDGE_CROP",
			"__extraConstructors",
			"appendConstructorOption",
			"read",
			"create",
			"rgbaToInt",
			"intToRGBA",
			"cssColorToHex",
			"limit255",
			"diff",
			"distance",
			"compareHashes",
			"colorDiff",
			"decoders",
			"encoders",
			"hasAlpha",
			"MIME_JPEG",
			"MIME_PNG",
			"PNG_FILTER_AUTO",
			"PNG_FILTER_NONE",
			"PNG_FILTER_SUB",
			"PNG_FILTER_UP",
			"PNG_FILTER_AVERAGE",
			"PNG_FILTER_PATH",
			"MIME_BMP",
			"MIME_X_MS_BMP",
			"MIME_TIFF",
			"MIME_GIF",
			"measureText",
			"measureTextHeight",
			"FONT_SANS_8_BLACK",
			"FONT_SANS_10_BLACK",
			"FONT_SANS_12_BLACK",
			"FONT_SANS_14_BLACK",
			"FONT_SANS_16_BLACK",
			"FONT_SANS_32_BLACK",
			"FONT_SANS_64_BLACK",
			"FONT_SANS_128_BLACK",
			"FONT_SANS_8_WHITE",
			"FONT_SANS_16_WHITE",
			"FONT_SANS_32_WHITE",
			"FONT_SANS_64_WHITE",
			"FONT_SANS_128_WHITE",
			"loadFont",
			"RESIZE_NEAREST_NEIGHBOR",
			"RESIZE_BILINEAR",
			"RESIZE_BICUBIC",
			"RESIZE_HERMITE",
			"RESIZE_BEZIER",
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "enzyme",
		"expectedNames": [
			"render",
			"shallow",
			"mount",
			"ShallowWrapper",
			"ReactWrapper",
			"configure",
			"EnzymeAdapter"
		],
		"detectedNames": [
			"render"
		],
		"missingNames": [
			"shallow",
			"mount",
			"ShallowWrapper",
			"ReactWrapper",
			"configure",
			"EnzymeAdapter"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "prettyjson",
		"expectedNames": [
			"version",
			"render",
			"renderString"
		],
		"detectedNames": [
			"version",
			"render",
			"renderString"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "image-size",
		"expectedNames": [
			"imageSize",
			"setConcurrency",
			"types"
		],
		"detectedNames": [
			"imageSize",
			"setConcurrency",
			"types"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bfj",
		"expectedNames": [
			"walk",
			"match",
			"parse",
			"unpipe",
			"read",
			"eventify",
			"streamify",
			"stringify",
			"write",
			"events"
		],
		"detectedNames": [
			"walk"
		],
		"missingNames": [
			"match",
			"parse",
			"unpipe",
			"read",
			"eventify",
			"streamify",
			"stringify",
			"write",
			"events"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "micromatch",
		"expectedNames": [
			"match",
			"matcher",
			"isMatch",
			"any",
			"not",
			"contains",
			"matchKeys",
			"some",
			"every",
			"all",
			"capture",
			"makeRe",
			"scan",
			"parse",
			"braces",
			"braceExpand"
		],
		"detectedNames": [],
		"missingNames": [
			"match",
			"matcher",
			"isMatch",
			"any",
			"not",
			"contains",
			"matchKeys",
			"some",
			"every",
			"all",
			"capture",
			"makeRe",
			"scan",
			"parse",
			"braces",
			"braceExpand"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "gulp-watch",
		"expectedNames": [
			"_defaultOptions"
		],
		"detectedNames": [],
		"missingNames": [
			"_defaultOptions"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "redux-actions",
		"transpiled": true,
		"expectedNames": [
			"combineActions",
			"createAction",
			"createActions",
			"createCurriedAction",
			"handleAction",
			"handleActions"
		],
		"detectedNames": [
			"combineActions",
			"createAction",
			"createActions",
			"createCurriedAction",
			"handleAction",
			"handleActions"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "discord.js",
		"expectedNames": [
			"BaseClient",
			"Client",
			"Shard",
			"ShardClientUtil",
			"ShardingManager",
			"WebhookClient",
			"ActivityFlags",
			"BitField",
			"Collection",
			"Constants",
			"DataResolver",
			"BaseManager",
			"DiscordAPIError",
			"HTTPError",
			"MessageFlags",
			"Intents",
			"Permissions",
			"Speaking",
			"Snowflake",
			"SnowflakeUtil",
			"Structures",
			"SystemChannelFlags",
			"UserFlags",
			"Util",
			"version",
			"ChannelManager",
			"GuildChannelManager",
			"GuildEmojiManager",
			"GuildEmojiRoleManager",
			"GuildMemberManager",
			"GuildMemberRoleManager",
			"GuildManager",
			"ReactionManager",
			"ReactionUserManager",
			"MessageManager",
			"PresenceManager",
			"RoleManager",
			"UserManager",
			"discordSort",
			"escapeMarkdown",
			"fetchRecommendedShards",
			"resolveColor",
			"resolveString",
			"splitMessage",
			"Base",
			"Activity",
			"APIMessage",
			"BaseGuildEmoji",
			"CategoryChannel",
			"Channel",
			"ClientApplication",
			"ClientUser",
			"Collector",
			"DMChannel",
			"Emoji",
			"Guild",
			"GuildAuditLogs",
			"GuildChannel",
			"GuildEmoji",
			"GuildMember",
			"GuildPreview",
			"Integration",
			"Invite",
			"Message",
			"MessageAttachment",
			"MessageCollector",
			"MessageEmbed",
			"MessageMentions",
			"MessageReaction",
			"NewsChannel",
			"PermissionOverwrites",
			"Presence",
			"ClientPresence",
			"ReactionCollector",
			"ReactionEmoji",
			"RichPresenceAssets",
			"Role",
			"StoreChannel",
			"Team",
			"TeamMember",
			"TextChannel",
			"User",
			"VoiceChannel",
			"VoiceRegion",
			"VoiceState",
			"Webhook",
			"WebSocket"
		],
		"detectedNames": [
			"BaseClient",
			"Client",
			"Shard",
			"ShardClientUtil",
			"ShardingManager",
			"WebhookClient",
			"ActivityFlags",
			"BitField",
			"Collection",
			"Constants",
			"DataResolver",
			"BaseManager",
			"DiscordAPIError",
			"HTTPError",
			"MessageFlags",
			"Intents",
			"Permissions",
			"Speaking",
			"Snowflake",
			"SnowflakeUtil",
			"Structures",
			"SystemChannelFlags",
			"Util",
			"version",
			"ChannelManager",
			"GuildChannelManager",
			"GuildEmojiManager",
			"GuildEmojiRoleManager",
			"GuildMemberManager",
			"GuildMemberRoleManager",
			"GuildManager",
			"ReactionUserManager",
			"MessageManager",
			"PresenceManager",
			"RoleManager",
			"UserManager",
			"discordSort",
			"escapeMarkdown",
			"fetchRecommendedShards",
			"resolveColor",
			"resolveString",
			"splitMessage",
			"Base",
			"Activity",
			"APIMessage",
			"CategoryChannel",
			"Channel",
			"ClientApplication",
			"ClientUser",
			"Collector",
			"DMChannel",
			"Emoji",
			"Guild",
			"GuildAuditLogs",
			"GuildChannel",
			"GuildEmoji",
			"GuildMember",
			"Integration",
			"Invite",
			"Message",
			"MessageAttachment",
			"MessageCollector",
			"MessageEmbed",
			"MessageMentions",
			"MessageReaction",
			"NewsChannel",
			"PermissionOverwrites",
			"Presence",
			"ClientPresence",
			"ReactionCollector",
			"ReactionEmoji",
			"RichPresenceAssets",
			"Role",
			"StoreChannel",
			"Team",
			"TeamMember",
			"TextChannel",
			"User",
			"VoiceChannel",
			"VoiceRegion",
			"VoiceState",
			"Webhook",
			"WebSocket"
		],
		"missingNames": [
			"UserFlags",
			"ReactionManager",
			"BaseGuildEmoji",
			"GuildPreview"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-less",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jshint",
		"expectedNames": [
			"JSHINT"
		],
		"detectedNames": [
			"JSHINT"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vinyl-source-stream",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "send",
		"expectedNames": [
			"mime"
		],
		"detectedNames": [
			"mime"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mysql2",
		"expectedNames": [
			"createConnection",
			"connect",
			"Connection",
			"createPool",
			"createPoolCluster",
			"createQuery",
			"Pool",
			"createServer",
			"PoolConnection",
			"escape",
			"escapeId",
			"format",
			"raw",
			"createConnectionPromise",
			"createPoolPromise",
			"createPoolClusterPromise",
			"Types",
			"Charsets",
			"CharsetToEncoding",
			"setMaxParserCache",
			"clearParserCache"
		],
		"detectedNames": [
			"createConnection",
			"connect",
			"Connection",
			"createPool",
			"createPoolCluster",
			"createQuery",
			"Pool",
			"createServer",
			"PoolConnection",
			"escape",
			"escapeId",
			"format",
			"raw",
			"setMaxParserCache",
			"clearParserCache"
		],
		"missingNames": [
			"createConnectionPromise",
			"createPoolPromise",
			"createPoolClusterPromise",
			"Types",
			"Charsets",
			"CharsetToEncoding"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "slash",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "es6-shim",
		"expectedNames": [
			"global",
			"clearInterval",
			"clearTimeout",
			"setInterval",
			"setTimeout",
			"queueMicrotask",
			"clearImmediate",
			"setImmediate"
		],
		"detectedNames": [],
		"missingNames": [
			"global",
			"clearInterval",
			"clearTimeout",
			"setInterval",
			"setTimeout",
			"queueMicrotask",
			"clearImmediate",
			"setImmediate"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "watch",
		"expectedNames": [
			"watchTree",
			"unwatchTree",
			"createMonitor",
			"walk"
		],
		"detectedNames": [
			"watchTree",
			"unwatchTree",
			"createMonitor",
			"walk"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "debounce",
		"expectedNames": [
			"debounce"
		],
		"detectedNames": [],
		"missingNames": [
			"debounce"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "d3-scale",
		"transpiled": true,
		"expectedNames": [
			"scaleBand",
			"scaleDiverging",
			"scaleDivergingLog",
			"scaleDivergingPow",
			"scaleDivergingSqrt",
			"scaleDivergingSymlog",
			"scaleIdentity",
			"scaleImplicit",
			"scaleLinear",
			"scaleLog",
			"scaleOrdinal",
			"scalePoint",
			"scalePow",
			"scaleQuantile",
			"scaleQuantize",
			"scaleRadial",
			"scaleSequential",
			"scaleSequentialLog",
			"scaleSequentialPow",
			"scaleSequentialQuantile",
			"scaleSequentialSqrt",
			"scaleSequentialSymlog",
			"scaleSqrt",
			"scaleSymlog",
			"scaleThreshold",
			"scaleTime",
			"scaleUtc",
			"tickFormat"
		],
		"detectedNames": [
			"scaleBand",
			"scaleDiverging",
			"scaleDivergingLog",
			"scaleDivergingPow",
			"scaleDivergingSqrt",
			"scaleDivergingSymlog",
			"scaleIdentity",
			"scaleImplicit",
			"scaleLinear",
			"scaleLog",
			"scaleOrdinal",
			"scalePoint",
			"scalePow",
			"scaleQuantile",
			"scaleQuantize",
			"scaleRadial",
			"scaleSequential",
			"scaleSequentialLog",
			"scaleSequentialPow",
			"scaleSequentialQuantile",
			"scaleSequentialSqrt",
			"scaleSequentialSymlog",
			"scaleSqrt",
			"scaleSymlog",
			"scaleThreshold",
			"scaleTime",
			"scaleUtc",
			"tickFormat"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "file-saver",
		"expectedNames": [
			"saveAs"
		],
		"detectedNames": [],
		"missingNames": [
			"saveAs"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "pull-stream",
		"expectedNames": [
			"pull",
			"keys",
			"once",
			"values",
			"count",
			"infinite",
			"empty",
			"error",
			"map",
			"asyncMap",
			"filter",
			"filterNot",
			"through",
			"take",
			"unique",
			"nonUnique",
			"flatten",
			"drain",
			"onEnd",
			"log",
			"find",
			"reduce",
			"collect",
			"concat"
		],
		"detectedNames": [
			"pull"
		],
		"missingNames": [
			"keys",
			"once",
			"values",
			"count",
			"infinite",
			"empty",
			"error",
			"map",
			"asyncMap",
			"filter",
			"filterNot",
			"through",
			"take",
			"unique",
			"nonUnique",
			"flatten",
			"drain",
			"onEnd",
			"log",
			"find",
			"reduce",
			"collect",
			"concat"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.omit",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "koa-compose",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "chart.js",
		"expectedNames": [
			"instances",
			"Controller",
			"types",
			"helpers",
			"_adapters",
			"Animation",
			"animationService",
			"controllers",
			"DatasetController",
			"defaults",
			"Element",
			"elements",
			"Interaction",
			"layouts",
			"platform",
			"plugins",
			"Scale",
			"scaleService",
			"Ticks",
			"Tooltip",
			"Chart",
			"Legend",
			"Title",
			"pluginService",
			"PluginBase",
			"canvasHelpers",
			"layoutService",
			"LinearScaleBase",
			"Bar",
			"Bubble",
			"Doughnut",
			"Line",
			"PolarArea",
			"Radar",
			"Scatter"
		],
		"detectedNames": [],
		"missingNames": [
			"instances",
			"Controller",
			"types",
			"helpers",
			"_adapters",
			"Animation",
			"animationService",
			"controllers",
			"DatasetController",
			"defaults",
			"Element",
			"elements",
			"Interaction",
			"layouts",
			"platform",
			"plugins",
			"Scale",
			"scaleService",
			"Ticks",
			"Tooltip",
			"Chart",
			"Legend",
			"Title",
			"pluginService",
			"PluginBase",
			"canvasHelpers",
			"layoutService",
			"LinearScaleBase",
			"Bar",
			"Bubble",
			"Doughnut",
			"Line",
			"PolarArea",
			"Radar",
			"Scatter"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-replace",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "shallowequal",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cli-spinner",
		"expectedNames": [
			"Spinner"
		],
		"detectedNames": [
			"Spinner"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "object-path",
		"expectedNames": [
			"has",
			"ensureExists",
			"set",
			"insert",
			"empty",
			"push",
			"coalesce",
			"get",
			"del",
			"create",
			"withInheritedProps"
		],
		"detectedNames": [],
		"missingNames": [
			"has",
			"ensureExists",
			"set",
			"insert",
			"empty",
			"push",
			"coalesce",
			"get",
			"del",
			"create",
			"withInheritedProps"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "webpack-sources",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "flat",
		"expectedNames": [
			"flatten",
			"unflatten"
		],
		"detectedNames": [],
		"missingNames": [
			"flatten",
			"unflatten"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "methods",
		"expectedNames": [
			"0",
			"1",
			"2",
			"3",
			"4",
			"5",
			"6",
			"7",
			"8",
			"9",
			"10",
			"11",
			"12",
			"13",
			"14",
			"15",
			"16",
			"17",
			"18",
			"19",
			"20",
			"21",
			"22",
			"23",
			"24",
			"25",
			"26",
			"27",
			"28",
			"29",
			"30",
			"31",
			"32",
			"33",
			"34"
		],
		"detectedNames": [],
		"missingNames": [
			"0",
			"1",
			"2",
			"3",
			"4",
			"5",
			"6",
			"7",
			"8",
			"9",
			"10",
			"11",
			"12",
			"13",
			"14",
			"15",
			"16",
			"17",
			"18",
			"19",
			"20",
			"21",
			"22",
			"23",
			"24",
			"25",
			"26",
			"27",
			"28",
			"29",
			"30",
			"31",
			"32",
			"33",
			"34"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jasmine",
		"expectedNames": [
			"ConsoleReporter"
		],
		"detectedNames": [
			"ConsoleReporter"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "object-hash",
		"expectedNames": [
			"sha1",
			"keys",
			"MD5",
			"keysMD5",
			"writeToStream"
		],
		"detectedNames": [
			"sha1",
			"keys",
			"MD5",
			"keysMD5",
			"writeToStream"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-babel",
		"expectedNames": [
			"rules",
			"rulesConfig"
		],
		"detectedNames": [],
		"missingNames": [
			"rules",
			"rulesConfig"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "parse5",
		"expectedNames": [
			"parse",
			"parseFragment",
			"serialize"
		],
		"detectedNames": [
			"parse",
			"parseFragment",
			"serialize"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-template",
		"expectedNames": [
			"precompile"
		],
		"detectedNames": [
			"precompile"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "broccoli-funnel",
		"expectedNames": [
			"Funnel"
		],
		"detectedNames": [
			"Funnel"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "lodash.pick",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "listr",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "text-table",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-transform-es2015-modules-commonjs",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.set",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "watchify",
		"expectedNames": [
			"args"
		],
		"detectedNames": [
			"args"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "estraverse",
		"expectedNames": [
			"Syntax",
			"traverse",
			"replace",
			"attachComments",
			"VisitorKeys",
			"VisitorOption",
			"Controller",
			"cloneEnvironment"
		],
		"detectedNames": [
			"Syntax",
			"traverse",
			"replace",
			"attachComments",
			"VisitorKeys",
			"VisitorOption",
			"Controller",
			"cloneEnvironment"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "unist-util-visit",
		"expectedNames": [
			"CONTINUE",
			"SKIP",
			"EXIT"
		],
		"detectedNames": [],
		"missingNames": [
			"CONTINUE",
			"SKIP",
			"EXIT"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@fortawesome/fontawesome-svg-core",
		"transpiled": true,
		"expectedNames": [
			"icon",
			"noAuto",
			"config",
			"toHtml",
			"layer",
			"text",
			"counter",
			"library",
			"dom",
			"parse",
			"findIconDefinition"
		],
		"detectedNames": [
			"icon",
			"noAuto",
			"config",
			"toHtml",
			"layer",
			"text",
			"counter",
			"library",
			"dom",
			"parse",
			"findIconDefinition"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "strip-json-comments",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "randomstring",
		"expectedNames": [
			"generate"
		],
		"detectedNames": [
			"generate"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-emoji",
		"expectedNames": [
			"emoji",
			"_get",
			"get",
			"find",
			"findByName",
			"findByCode",
			"hasEmoji",
			"hasEmojiByName",
			"hasEmojiByCode",
			"which",
			"emojify",
			"random",
			"search",
			"unemojify",
			"replace",
			"strip"
		],
		"detectedNames": [],
		"missingNames": [
			"emoji",
			"_get",
			"get",
			"find",
			"findByName",
			"findByCode",
			"hasEmoji",
			"hasEmojiByName",
			"hasEmojiByCode",
			"which",
			"emojify",
			"random",
			"search",
			"unemojify",
			"replace",
			"strip"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "clui",
		"expectedNames": [
			"Spinner",
			"Gauge",
			"Progress",
			"Sparkline",
			"LineBuffer",
			"Table",
			"Line",
			"Clear"
		],
		"detectedNames": [],
		"missingNames": [
			"Spinner",
			"Gauge",
			"Progress",
			"Sparkline",
			"LineBuffer",
			"Table",
			"Line",
			"Clear"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-import",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "errorhandler",
		"expectedNames": [
			"title"
		],
		"detectedNames": [
			"title"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "blessed",
		"expectedNames": [
			"Program",
			"program",
			"Tput",
			"tput",
			"widget",
			"colors",
			"unicode",
			"helpers",
			"merge",
			"asort",
			"hsort",
			"findFile",
			"escape",
			"parseTags",
			"generateTags",
			"attrToBinary",
			"stripTags",
			"cleanTags",
			"dropUnicode",
			"Screen",
			"Element",
			"sprintf",
			"tryRead",
			"classes",
			"node",
			"Node",
			"screen",
			"element",
			"box",
			"Box",
			"text",
			"Text",
			"line",
			"Line",
			"scrollablebox",
			"ScrollableBox",
			"scrollabletext",
			"ScrollableText",
			"bigtext",
			"BigText",
			"list",
			"List",
			"form",
			"Form",
			"input",
			"Input",
			"textarea",
			"Textarea",
			"textbox",
			"Textbox",
			"button",
			"Button",
			"progressbar",
			"ProgressBar",
			"filemanager",
			"FileManager",
			"checkbox",
			"Checkbox",
			"radioset",
			"RadioSet",
			"radiobutton",
			"RadioButton",
			"prompt",
			"Prompt",
			"question",
			"Question",
			"message",
			"Message",
			"loading",
			"Loading",
			"listbar",
			"Listbar",
			"log",
			"Log",
			"table",
			"Table",
			"listtable",
			"ListTable",
			"terminal",
			"Terminal",
			"image",
			"Image",
			"ansiimage",
			"ANSIImage",
			"overlayimage",
			"OverlayImage",
			"video",
			"Video",
			"layout",
			"Layout",
			"aliases",
			"ListBar",
			"PNG",
			"png"
		],
		"detectedNames": [],
		"missingNames": [
			"Program",
			"program",
			"Tput",
			"tput",
			"widget",
			"colors",
			"unicode",
			"helpers",
			"merge",
			"asort",
			"hsort",
			"findFile",
			"escape",
			"parseTags",
			"generateTags",
			"attrToBinary",
			"stripTags",
			"cleanTags",
			"dropUnicode",
			"Screen",
			"Element",
			"sprintf",
			"tryRead",
			"classes",
			"node",
			"Node",
			"screen",
			"element",
			"box",
			"Box",
			"text",
			"Text",
			"line",
			"Line",
			"scrollablebox",
			"ScrollableBox",
			"scrollabletext",
			"ScrollableText",
			"bigtext",
			"BigText",
			"list",
			"List",
			"form",
			"Form",
			"input",
			"Input",
			"textarea",
			"Textarea",
			"textbox",
			"Textbox",
			"button",
			"Button",
			"progressbar",
			"ProgressBar",
			"filemanager",
			"FileManager",
			"checkbox",
			"Checkbox",
			"radioset",
			"RadioSet",
			"radiobutton",
			"RadioButton",
			"prompt",
			"Prompt",
			"question",
			"Question",
			"message",
			"Message",
			"loading",
			"Loading",
			"listbar",
			"Listbar",
			"log",
			"Log",
			"table",
			"Table",
			"listtable",
			"ListTable",
			"terminal",
			"Terminal",
			"image",
			"Image",
			"ansiimage",
			"ANSIImage",
			"overlayimage",
			"OverlayImage",
			"video",
			"Video",
			"layout",
			"Layout",
			"aliases",
			"ListBar",
			"PNG",
			"png"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-jest",
		"expectedNames": [
			"configs",
			"environments",
			"processors",
			"rules"
		],
		"detectedNames": [],
		"missingNames": [
			"configs",
			"environments",
			"processors",
			"rules"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bytes",
		"expectedNames": [
			"format",
			"parse"
		],
		"detectedNames": [
			"format",
			"parse"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vue-hot-reload-api",
		"expectedNames": [
			"install",
			"createRecord",
			"isRecorded",
			"rerender",
			"reload"
		],
		"detectedNames": [
			"install",
			"createRecord",
			"isRecorded",
			"rerender",
			"reload"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "swig",
		"expectedNames": [
			"version",
			"setDefaults",
			"setDefaultTZOffset",
			"Swig",
			"setFilter",
			"setTag",
			"setExtension",
			"parseFile",
			"precompile",
			"compile",
			"compileFile",
			"render",
			"renderFile",
			"run",
			"invalidateCache",
			"loaders"
		],
		"detectedNames": [
			"version",
			"setDefaults",
			"setDefaultTZOffset",
			"Swig",
			"setFilter",
			"setTag",
			"setExtension",
			"parseFile",
			"precompile",
			"compile",
			"compileFile",
			"render",
			"renderFile",
			"run",
			"invalidateCache",
			"loaders"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jest-pnp-resolver",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-schedule",
		"expectedNames": [
			"Job",
			"Range",
			"RecurrenceRule",
			"Invocation",
			"scheduleJob",
			"rescheduleJob",
			"scheduledJobs",
			"cancelJob"
		],
		"detectedNames": [
			"Job",
			"Range",
			"RecurrenceRule",
			"Invocation",
			"scheduleJob",
			"rescheduleJob",
			"scheduledJobs",
			"cancelJob"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rollup-plugin-babel",
		"expectedNames": [
			"custom"
		],
		"detectedNames": [],
		"missingNames": [
			"custom"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "figures",
		"expectedNames": [
			"tick",
			"cross",
			"star",
			"square",
			"squareSmall",
			"squareSmallFilled",
			"play",
			"circle",
			"circleFilled",
			"circleDotted",
			"circleDouble",
			"circleCircle",
			"circleCross",
			"circlePipe",
			"circleQuestionMark",
			"bullet",
			"dot",
			"line",
			"ellipsis",
			"pointer",
			"pointerSmall",
			"info",
			"warning",
			"hamburger",
			"smiley",
			"mustache",
			"heart",
			"nodejs",
			"arrowUp",
			"arrowDown",
			"arrowLeft",
			"arrowRight",
			"radioOn",
			"radioOff",
			"checkboxOn",
			"checkboxOff",
			"checkboxCircleOn",
			"checkboxCircleOff",
			"questionMarkPrefix",
			"oneHalf",
			"oneThird",
			"oneQuarter",
			"oneFifth",
			"oneSixth",
			"oneSeventh",
			"oneEighth",
			"oneNinth",
			"oneTenth",
			"twoThirds",
			"twoFifths",
			"threeQuarters",
			"threeFifths",
			"threeEighths",
			"fourFifths",
			"fiveSixths",
			"fiveEighths",
			"sevenEighths",
			"main",
			"windows"
		],
		"detectedNames": [
			"main",
			"windows"
		],
		"missingNames": [
			"tick",
			"cross",
			"star",
			"square",
			"squareSmall",
			"squareSmallFilled",
			"play",
			"circle",
			"circleFilled",
			"circleDotted",
			"circleDouble",
			"circleCircle",
			"circleCross",
			"circlePipe",
			"circleQuestionMark",
			"bullet",
			"dot",
			"line",
			"ellipsis",
			"pointer",
			"pointerSmall",
			"info",
			"warning",
			"hamburger",
			"smiley",
			"mustache",
			"heart",
			"nodejs",
			"arrowUp",
			"arrowDown",
			"arrowLeft",
			"arrowRight",
			"radioOn",
			"radioOff",
			"checkboxOn",
			"checkboxOff",
			"checkboxCircleOn",
			"checkboxCircleOff",
			"questionMarkPrefix",
			"oneHalf",
			"oneThird",
			"oneQuarter",
			"oneFifth",
			"oneSixth",
			"oneSeventh",
			"oneEighth",
			"oneNinth",
			"oneTenth",
			"twoThirds",
			"twoFifths",
			"threeQuarters",
			"threeFifths",
			"threeEighths",
			"fourFifths",
			"fiveSixths",
			"fiveEighths",
			"sevenEighths"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "oauth",
		"expectedNames": [
			"OAuth",
			"OAuthEcho",
			"OAuth2"
		],
		"detectedNames": [
			"OAuth",
			"OAuthEcho",
			"OAuth2"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nedb",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "detect-port",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "liftoff",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "get-port",
		"expectedNames": [
			"makeRange"
		],
		"detectedNames": [
			"makeRange"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "stylelint-config-standard",
		"expectedNames": [
			"extends",
			"rules"
		],
		"detectedNames": [],
		"missingNames": [
			"extends",
			"rules"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-imagemin",
		"expectedNames": [
			"gifsicle",
			"mozjpeg",
			"optipng",
			"svgo"
		],
		"detectedNames": [
			"gifsicle",
			"mozjpeg",
			"optipng",
			"svgo"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/register",
		"transpiled": true,
		"expectedNames": [
			"revert"
		],
		"detectedNames": [],
		"missingNames": [
			"revert"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-install",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gzip-size",
		"expectedNames": [
			"sync",
			"stream",
			"file",
			"fileSync"
		],
		"detectedNames": [
			"sync",
			"stream",
			"file",
			"fileSync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-gyp",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-forge",
		"expectedNames": [
			"options",
			"util",
			"cipher",
			"aes",
			"pki",
			"oids",
			"asn1",
			"md",
			"hmac",
			"md5",
			"pem",
			"des",
			"pkcs5",
			"pbkdf2",
			"sha256",
			"prng",
			"random",
			"rc2",
			"jsbn",
			"sha1",
			"pkcs1",
			"prime",
			"rsa",
			"pbe",
			"pkcs7asn1",
			"pkcs7",
			"mgf",
			"mgf1",
			"pss",
			"pkcs12",
			"tls",
			"debug",
			"sha512",
			"sha384",
			"ed25519",
			"kem",
			"log",
			"ssh",
			"task"
		],
		"detectedNames": [],
		"missingNames": [
			"options",
			"util",
			"cipher",
			"aes",
			"pki",
			"oids",
			"asn1",
			"md",
			"hmac",
			"md5",
			"pem",
			"des",
			"pkcs5",
			"pbkdf2",
			"sha256",
			"prng",
			"random",
			"rc2",
			"jsbn",
			"sha1",
			"pkcs1",
			"prime",
			"rsa",
			"pbe",
			"pkcs7asn1",
			"pkcs7",
			"mgf",
			"mgf1",
			"pss",
			"pkcs12",
			"tls",
			"debug",
			"sha512",
			"sha384",
			"ed25519",
			"kem",
			"log",
			"ssh",
			"task"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "grunt-contrib-clean",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pm2",
		"expectedNames": [
			"daemon_mode",
			"pm2_home",
			"public_key",
			"secret_key",
			"machine_name",
			"cwd",
			"_conf",
			"Client",
			"pm2_configuration",
			"gl_interact_infos",
			"gl_is_km_linked",
			"gl_retry",
			"custom",
			"getVersion",
			"launchSysMonitoring",
			"env",
			"report",
			"getPID",
			"profile",
			"boilerplate",
			"sendLineToStdin",
			"attach",
			"sendDataToProcessId",
			"msgProcess",
			"trigger",
			"sendSignalToProcessName",
			"sendSignalToProcessId",
			"autoinstall",
			"serve",
			"ping",
			"remote",
			"remoteV2",
			"generateSample",
			"dashboard",
			"monit",
			"inspect",
			"deploy",
			"install",
			"uninstall",
			"launchAll",
			"package",
			"publish",
			"generateModuleSample",
			"deleteModule",
			"linkManagement",
			"link",
			"agentInfos",
			"killAgent",
			"unlink",
			"monitorState",
			"openDashboard",
			"clearSetup",
			"minimumSetup",
			"get",
			"set",
			"multiset",
			"unset",
			"conf",
			"_pull",
			"pullCommitId",
			"backward",
			"forward",
			"pullAndRestart",
			"pullAndReload",
			"_pullCommitId",
			"uninstallStartup",
			"startup",
			"autodump",
			"dump",
			"clearDump",
			"resurrect",
			"flush",
			"logrotate",
			"reloadLogs",
			"streamLogs",
			"printLogs",
			"generateDockerfile",
			"dockerMode"
		],
		"detectedNames": [
			"custom"
		],
		"missingNames": [
			"daemon_mode",
			"pm2_home",
			"public_key",
			"secret_key",
			"machine_name",
			"cwd",
			"_conf",
			"Client",
			"pm2_configuration",
			"gl_interact_infos",
			"gl_is_km_linked",
			"gl_retry",
			"getVersion",
			"launchSysMonitoring",
			"env",
			"report",
			"getPID",
			"profile",
			"boilerplate",
			"sendLineToStdin",
			"attach",
			"sendDataToProcessId",
			"msgProcess",
			"trigger",
			"sendSignalToProcessName",
			"sendSignalToProcessId",
			"autoinstall",
			"serve",
			"ping",
			"remote",
			"remoteV2",
			"generateSample",
			"dashboard",
			"monit",
			"inspect",
			"deploy",
			"install",
			"uninstall",
			"launchAll",
			"package",
			"publish",
			"generateModuleSample",
			"deleteModule",
			"linkManagement",
			"link",
			"agentInfos",
			"killAgent",
			"unlink",
			"monitorState",
			"openDashboard",
			"clearSetup",
			"minimumSetup",
			"get",
			"set",
			"multiset",
			"unset",
			"conf",
			"_pull",
			"pullCommitId",
			"backward",
			"forward",
			"pullAndRestart",
			"pullAndReload",
			"_pullCommitId",
			"uninstallStartup",
			"startup",
			"autodump",
			"dump",
			"clearDump",
			"resurrect",
			"flush",
			"logrotate",
			"reloadLogs",
			"streamLogs",
			"printLogs",
			"generateDockerfile",
			"dockerMode"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "plist",
		"expectedNames": [
			"parse",
			"build"
		],
		"detectedNames": [],
		"missingNames": [
			"parse",
			"build"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "polished",
		"transpiled": true,
		"expectedNames": [
			"adjustHue",
			"animation",
			"backgroundImages",
			"backgrounds",
			"between",
			"border",
			"borderColor",
			"borderRadius",
			"borderStyle",
			"borderWidth",
			"buttons",
			"clearFix",
			"complement",
			"cover",
			"cssVar",
			"darken",
			"desaturate",
			"directionalProperty",
			"ellipsis",
			"em",
			"fluidRange",
			"fontFace",
			"getContrast",
			"getLuminance",
			"getValueAndUnit",
			"grayscale",
			"hiDPI",
			"hideText",
			"hideVisually",
			"hsl",
			"hslToColorString",
			"hsla",
			"invert",
			"lighten",
			"linearGradient",
			"margin",
			"math",
			"meetsContrastGuidelines",
			"mix",
			"modularScale",
			"normalize",
			"opacify",
			"padding",
			"parseToHsl",
			"parseToRgb",
			"position",
			"radialGradient",
			"readableColor",
			"rem",
			"retinaImage",
			"rgb",
			"rgbToColorString",
			"rgba",
			"saturate",
			"setHue",
			"setLightness",
			"setSaturation",
			"shade",
			"size",
			"stripUnit",
			"textInputs",
			"timingFunctions",
			"tint",
			"toColorString",
			"transitions",
			"transparentize",
			"triangle",
			"wordWrap"
		],
		"detectedNames": [
			"adjustHue",
			"animation",
			"backgroundImages",
			"backgrounds",
			"between",
			"border",
			"borderColor",
			"borderRadius",
			"borderStyle",
			"borderWidth",
			"buttons",
			"clearFix",
			"complement",
			"cover",
			"cssVar",
			"darken",
			"desaturate",
			"directionalProperty",
			"ellipsis",
			"em",
			"fluidRange",
			"fontFace",
			"getContrast",
			"getLuminance",
			"getValueAndUnit",
			"grayscale",
			"hiDPI",
			"hideText",
			"hideVisually",
			"hsl",
			"hslToColorString",
			"hsla",
			"invert",
			"lighten",
			"linearGradient",
			"margin",
			"math",
			"meetsContrastGuidelines",
			"mix",
			"modularScale",
			"normalize",
			"opacify",
			"padding",
			"parseToHsl",
			"parseToRgb",
			"position",
			"radialGradient",
			"readableColor",
			"rem",
			"retinaImage",
			"rgb",
			"rgbToColorString",
			"rgba",
			"saturate",
			"setHue",
			"setLightness",
			"setSaturation",
			"shade",
			"size",
			"stripUnit",
			"textInputs",
			"timingFunctions",
			"tint",
			"toColorString",
			"transitions",
			"transparentize",
			"triangle",
			"wordWrap"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "@fortawesome/free-solid-svg-icons",
		"transpiled": true,
		"expectedNames": [
			"fas",
			"prefix",
			"faAd",
			"faAddressBook",
			"faAddressCard",
			"faAdjust",
			"faAirFreshener",
			"faAlignCenter",
			"faAlignJustify",
			"faAlignLeft",
			"faAlignRight",
			"faAllergies",
			"faAmbulance",
			"faAmericanSignLanguageInterpreting",
			"faAnchor",
			"faAngleDoubleDown",
			"faAngleDoubleLeft",
			"faAngleDoubleRight",
			"faAngleDoubleUp",
			"faAngleDown",
			"faAngleLeft",
			"faAngleRight",
			"faAngleUp",
			"faAngry",
			"faAnkh",
			"faAppleAlt",
			"faArchive",
			"faArchway",
			"faArrowAltCircleDown",
			"faArrowAltCircleLeft",
			"faArrowAltCircleRight",
			"faArrowAltCircleUp",
			"faArrowCircleDown",
			"faArrowCircleLeft",
			"faArrowCircleRight",
			"faArrowCircleUp",
			"faArrowDown",
			"faArrowLeft",
			"faArrowRight",
			"faArrowUp",
			"faArrowsAlt",
			"faArrowsAltH",
			"faArrowsAltV",
			"faAssistiveListeningSystems",
			"faAsterisk",
			"faAt",
			"faAtlas",
			"faAtom",
			"faAudioDescription",
			"faAward",
			"faBaby",
			"faBabyCarriage",
			"faBackspace",
			"faBackward",
			"faBacon",
			"faBacteria",
			"faBacterium",
			"faBahai",
			"faBalanceScale",
			"faBalanceScaleLeft",
			"faBalanceScaleRight",
			"faBan",
			"faBandAid",
			"faBarcode",
			"faBars",
			"faBaseballBall",
			"faBasketballBall",
			"faBath",
			"faBatteryEmpty",
			"faBatteryFull",
			"faBatteryHalf",
			"faBatteryQuarter",
			"faBatteryThreeQuarters",
			"faBed",
			"faBeer",
			"faBell",
			"faBellSlash",
			"faBezierCurve",
			"faBible",
			"faBicycle",
			"faBiking",
			"faBinoculars",
			"faBiohazard",
			"faBirthdayCake",
			"faBlender",
			"faBlenderPhone",
			"faBlind",
			"faBlog",
			"faBold",
			"faBolt",
			"faBomb",
			"faBone",
			"faBong",
			"faBook",
			"faBookDead",
			"faBookMedical",
			"faBookOpen",
			"faBookReader",
			"faBookmark",
			"faBorderAll",
			"faBorderNone",
			"faBorderStyle",
			"faBowlingBall",
			"faBox",
			"faBoxOpen",
			"faBoxTissue",
			"faBoxes",
			"faBraille",
			"faBrain",
			"faBreadSlice",
			"faBriefcase",
			"faBriefcaseMedical",
			"faBroadcastTower",
			"faBroom",
			"faBrush",
			"faBug",
			"faBuilding",
			"faBullhorn",
			"faBullseye",
			"faBurn",
			"faBus",
			"faBusAlt",
			"faBusinessTime",
			"faCalculator",
			"faCalendar",
			"faCalendarAlt",
			"faCalendarCheck",
			"faCalendarDay",
			"faCalendarMinus",
			"faCalendarPlus",
			"faCalendarTimes",
			"faCalendarWeek",
			"faCamera",
			"faCameraRetro",
			"faCampground",
			"faCandyCane",
			"faCannabis",
			"faCapsules",
			"faCar",
			"faCarAlt",
			"faCarBattery",
			"faCarCrash",
			"faCarSide",
			"faCaravan",
			"faCaretDown",
			"faCaretLeft",
			"faCaretRight",
			"faCaretSquareDown",
			"faCaretSquareLeft",
			"faCaretSquareRight",
			"faCaretSquareUp",
			"faCaretUp",
			"faCarrot",
			"faCartArrowDown",
			"faCartPlus",
			"faCashRegister",
			"faCat",
			"faCertificate",
			"faChair",
			"faChalkboard",
			"faChalkboardTeacher",
			"faChargingStation",
			"faChartArea",
			"faChartBar",
			"faChartLine",
			"faChartPie",
			"faCheck",
			"faCheckCircle",
			"faCheckDouble",
			"faCheckSquare",
			"faCheese",
			"faChess",
			"faChessBishop",
			"faChessBoard",
			"faChessKing",
			"faChessKnight",
			"faChessPawn",
			"faChessQueen",
			"faChessRook",
			"faChevronCircleDown",
			"faChevronCircleLeft",
			"faChevronCircleRight",
			"faChevronCircleUp",
			"faChevronDown",
			"faChevronLeft",
			"faChevronRight",
			"faChevronUp",
			"faChild",
			"faChurch",
			"faCircle",
			"faCircleNotch",
			"faCity",
			"faClinicMedical",
			"faClipboard",
			"faClipboardCheck",
			"faClipboardList",
			"faClock",
			"faClone",
			"faClosedCaptioning",
			"faCloud",
			"faCloudDownloadAlt",
			"faCloudMeatball",
			"faCloudMoon",
			"faCloudMoonRain",
			"faCloudRain",
			"faCloudShowersHeavy",
			"faCloudSun",
			"faCloudSunRain",
			"faCloudUploadAlt",
			"faCocktail",
			"faCode",
			"faCodeBranch",
			"faCoffee",
			"faCog",
			"faCogs",
			"faCoins",
			"faColumns",
			"faComment",
			"faCommentAlt",
			"faCommentDollar",
			"faCommentDots",
			"faCommentMedical",
			"faCommentSlash",
			"faComments",
			"faCommentsDollar",
			"faCompactDisc",
			"faCompass",
			"faCompress",
			"faCompressAlt",
			"faCompressArrowsAlt",
			"faConciergeBell",
			"faCookie",
			"faCookieBite",
			"faCopy",
			"faCopyright",
			"faCouch",
			"faCreditCard",
			"faCrop",
			"faCropAlt",
			"faCross",
			"faCrosshairs",
			"faCrow",
			"faCrown",
			"faCrutch",
			"faCube",
			"faCubes",
			"faCut",
			"faDatabase",
			"faDeaf",
			"faDemocrat",
			"faDesktop",
			"faDharmachakra",
			"faDiagnoses",
			"faDice",
			"faDiceD20",
			"faDiceD6",
			"faDiceFive",
			"faDiceFour",
			"faDiceOne",
			"faDiceSix",
			"faDiceThree",
			"faDiceTwo",
			"faDigitalTachograph",
			"faDirections",
			"faDisease",
			"faDivide",
			"faDizzy",
			"faDna",
			"faDog",
			"faDollarSign",
			"faDolly",
			"faDollyFlatbed",
			"faDonate",
			"faDoorClosed",
			"faDoorOpen",
			"faDotCircle",
			"faDove",
			"faDownload",
			"faDraftingCompass",
			"faDragon",
			"faDrawPolygon",
			"faDrum",
			"faDrumSteelpan",
			"faDrumstickBite",
			"faDumbbell",
			"faDumpster",
			"faDumpsterFire",
			"faDungeon",
			"faEdit",
			"faEgg",
			"faEject",
			"faEllipsisH",
			"faEllipsisV",
			"faEnvelope",
			"faEnvelopeOpen",
			"faEnvelopeOpenText",
			"faEnvelopeSquare",
			"faEquals",
			"faEraser",
			"faEthernet",
			"faEuroSign",
			"faExchangeAlt",
			"faExclamation",
			"faExclamationCircle",
			"faExclamationTriangle",
			"faExpand",
			"faExpandAlt",
			"faExpandArrowsAlt",
			"faExternalLinkAlt",
			"faExternalLinkSquareAlt",
			"faEye",
			"faEyeDropper",
			"faEyeSlash",
			"faFan",
			"faFastBackward",
			"faFastForward",
			"faFaucet",
			"faFax",
			"faFeather",
			"faFeatherAlt",
			"faFemale",
			"faFighterJet",
			"faFile",
			"faFileAlt",
			"faFileArchive",
			"faFileAudio",
			"faFileCode",
			"faFileContract",
			"faFileCsv",
			"faFileDownload",
			"faFileExcel",
			"faFileExport",
			"faFileImage",
			"faFileImport",
			"faFileInvoice",
			"faFileInvoiceDollar",
			"faFileMedical",
			"faFileMedicalAlt",
			"faFilePdf",
			"faFilePowerpoint",
			"faFilePrescription",
			"faFileSignature",
			"faFileUpload",
			"faFileVideo",
			"faFileWord",
			"faFill",
			"faFillDrip",
			"faFilm",
			"faFilter",
			"faFingerprint",
			"faFire",
			"faFireAlt",
			"faFireExtinguisher",
			"faFirstAid",
			"faFish",
			"faFistRaised",
			"faFlag",
			"faFlagCheckered",
			"faFlagUsa",
			"faFlask",
			"faFlushed",
			"faFolder",
			"faFolderMinus",
			"faFolderOpen",
			"faFolderPlus",
			"faFont",
			"faFontAwesomeLogoFull",
			"faFootballBall",
			"faForward",
			"faFrog",
			"faFrown",
			"faFrownOpen",
			"faFunnelDollar",
			"faFutbol",
			"faGamepad",
			"faGasPump",
			"faGavel",
			"faGem",
			"faGenderless",
			"faGhost",
			"faGift",
			"faGifts",
			"faGlassCheers",
			"faGlassMartini",
			"faGlassMartiniAlt",
			"faGlassWhiskey",
			"faGlasses",
			"faGlobe",
			"faGlobeAfrica",
			"faGlobeAmericas",
			"faGlobeAsia",
			"faGlobeEurope",
			"faGolfBall",
			"faGopuram",
			"faGraduationCap",
			"faGreaterThan",
			"faGreaterThanEqual",
			"faGrimace",
			"faGrin",
			"faGrinAlt",
			"faGrinBeam",
			"faGrinBeamSweat",
			"faGrinHearts",
			"faGrinSquint",
			"faGrinSquintTears",
			"faGrinStars",
			"faGrinTears",
			"faGrinTongue",
			"faGrinTongueSquint",
			"faGrinTongueWink",
			"faGrinWink",
			"faGripHorizontal",
			"faGripLines",
			"faGripLinesVertical",
			"faGripVertical",
			"faGuitar",
			"faHSquare",
			"faHamburger",
			"faHammer",
			"faHamsa",
			"faHandHolding",
			"faHandHoldingHeart",
			"faHandHoldingMedical",
			"faHandHoldingUsd",
			"faHandHoldingWater",
			"faHandLizard",
			"faHandMiddleFinger",
			"faHandPaper",
			"faHandPeace",
			"faHandPointDown",
			"faHandPointLeft",
			"faHandPointRight",
			"faHandPointUp",
			"faHandPointer",
			"faHandRock",
			"faHandScissors",
			"faHandSparkles",
			"faHandSpock",
			"faHands",
			"faHandsHelping",
			"faHandsWash",
			"faHandshake",
			"faHandshakeAltSlash",
			"faHandshakeSlash",
			"faHanukiah",
			"faHardHat",
			"faHashtag",
			"faHatCowboy",
			"faHatCowboySide",
			"faHatWizard",
			"faHdd",
			"faHeadSideCough",
			"faHeadSideCoughSlash",
			"faHeadSideMask",
			"faHeadSideVirus",
			"faHeading",
			"faHeadphones",
			"faHeadphonesAlt",
			"faHeadset",
			"faHeart",
			"faHeartBroken",
			"faHeartbeat",
			"faHelicopter",
			"faHighlighter",
			"faHiking",
			"faHippo",
			"faHistory",
			"faHockeyPuck",
			"faHollyBerry",
			"faHome",
			"faHorse",
			"faHorseHead",
			"faHospital",
			"faHospitalAlt",
			"faHospitalSymbol",
			"faHospitalUser",
			"faHotTub",
			"faHotdog",
			"faHotel",
			"faHourglass",
			"faHourglassEnd",
			"faHourglassHalf",
			"faHourglassStart",
			"faHouseDamage",
			"faHouseUser",
			"faHryvnia",
			"faICursor",
			"faIceCream",
			"faIcicles",
			"faIcons",
			"faIdBadge",
			"faIdCard",
			"faIdCardAlt",
			"faIgloo",
			"faImage",
			"faImages",
			"faInbox",
			"faIndent",
			"faIndustry",
			"faInfinity",
			"faInfo",
			"faInfoCircle",
			"faItalic",
			"faJedi",
			"faJoint",
			"faJournalWhills",
			"faKaaba",
			"faKey",
			"faKeyboard",
			"faKhanda",
			"faKiss",
			"faKissBeam",
			"faKissWinkHeart",
			"faKiwiBird",
			"faLandmark",
			"faLanguage",
			"faLaptop",
			"faLaptopCode",
			"faLaptopHouse",
			"faLaptopMedical",
			"faLaugh",
			"faLaughBeam",
			"faLaughSquint",
			"faLaughWink",
			"faLayerGroup",
			"faLeaf",
			"faLemon",
			"faLessThan",
			"faLessThanEqual",
			"faLevelDownAlt",
			"faLevelUpAlt",
			"faLifeRing",
			"faLightbulb",
			"faLink",
			"faLiraSign",
			"faList",
			"faListAlt",
			"faListOl",
			"faListUl",
			"faLocationArrow",
			"faLock",
			"faLockOpen",
			"faLongArrowAltDown",
			"faLongArrowAltLeft",
			"faLongArrowAltRight",
			"faLongArrowAltUp",
			"faLowVision",
			"faLuggageCart",
			"faLungs",
			"faLungsVirus",
			"faMagic",
			"faMagnet",
			"faMailBulk",
			"faMale",
			"faMap",
			"faMapMarked",
			"faMapMarkedAlt",
			"faMapMarker",
			"faMapMarkerAlt",
			"faMapPin",
			"faMapSigns",
			"faMarker",
			"faMars",
			"faMarsDouble",
			"faMarsStroke",
			"faMarsStrokeH",
			"faMarsStrokeV",
			"faMask",
			"faMedal",
			"faMedkit",
			"faMeh",
			"faMehBlank",
			"faMehRollingEyes",
			"faMemory",
			"faMenorah",
			"faMercury",
			"faMeteor",
			"faMicrochip",
			"faMicrophone",
			"faMicrophoneAlt",
			"faMicrophoneAltSlash",
			"faMicrophoneSlash",
			"faMicroscope",
			"faMinus",
			"faMinusCircle",
			"faMinusSquare",
			"faMitten",
			"faMobile",
			"faMobileAlt",
			"faMoneyBill",
			"faMoneyBillAlt",
			"faMoneyBillWave",
			"faMoneyBillWaveAlt",
			"faMoneyCheck",
			"faMoneyCheckAlt",
			"faMonument",
			"faMoon",
			"faMortarPestle",
			"faMosque",
			"faMotorcycle",
			"faMountain",
			"faMouse",
			"faMousePointer",
			"faMugHot",
			"faMusic",
			"faNetworkWired",
			"faNeuter",
			"faNewspaper",
			"faNotEqual",
			"faNotesMedical",
			"faObjectGroup",
			"faObjectUngroup",
			"faOilCan",
			"faOm",
			"faOtter",
			"faOutdent",
			"faPager",
			"faPaintBrush",
			"faPaintRoller",
			"faPalette",
			"faPallet",
			"faPaperPlane",
			"faPaperclip",
			"faParachuteBox",
			"faParagraph",
			"faParking",
			"faPassport",
			"faPastafarianism",
			"faPaste",
			"faPause",
			"faPauseCircle",
			"faPaw",
			"faPeace",
			"faPen",
			"faPenAlt",
			"faPenFancy",
			"faPenNib",
			"faPenSquare",
			"faPencilAlt",
			"faPencilRuler",
			"faPeopleArrows",
			"faPeopleCarry",
			"faPepperHot",
			"faPercent",
			"faPercentage",
			"faPersonBooth",
			"faPhone",
			"faPhoneAlt",
			"faPhoneSlash",
			"faPhoneSquare",
			"faPhoneSquareAlt",
			"faPhoneVolume",
			"faPhotoVideo",
			"faPiggyBank",
			"faPills",
			"faPizzaSlice",
			"faPlaceOfWorship",
			"faPlane",
			"faPlaneArrival",
			"faPlaneDeparture",
			"faPlaneSlash",
			"faPlay",
			"faPlayCircle",
			"faPlug",
			"faPlus",
			"faPlusCircle",
			"faPlusSquare",
			"faPodcast",
			"faPoll",
			"faPollH",
			"faPoo",
			"faPooStorm",
			"faPoop",
			"faPortrait",
			"faPoundSign",
			"faPowerOff",
			"faPray",
			"faPrayingHands",
			"faPrescription",
			"faPrescriptionBottle",
			"faPrescriptionBottleAlt",
			"faPrint",
			"faProcedures",
			"faProjectDiagram",
			"faPumpMedical",
			"faPumpSoap",
			"faPuzzlePiece",
			"faQrcode",
			"faQuestion",
			"faQuestionCircle",
			"faQuidditch",
			"faQuoteLeft",
			"faQuoteRight",
			"faQuran",
			"faRadiation",
			"faRadiationAlt",
			"faRainbow",
			"faRandom",
			"faReceipt",
			"faRecordVinyl",
			"faRecycle",
			"faRedo",
			"faRedoAlt",
			"faRegistered",
			"faRemoveFormat",
			"faReply",
			"faReplyAll",
			"faRepublican",
			"faRestroom",
			"faRetweet",
			"faRibbon",
			"faRing",
			"faRoad",
			"faRobot",
			"faRocket",
			"faRoute",
			"faRss",
			"faRssSquare",
			"faRubleSign",
			"faRuler",
			"faRulerCombined",
			"faRulerHorizontal",
			"faRulerVertical",
			"faRunning",
			"faRupeeSign",
			"faSadCry",
			"faSadTear",
			"faSatellite",
			"faSatelliteDish",
			"faSave",
			"faSchool",
			"faScrewdriver",
			"faScroll",
			"faSdCard",
			"faSearch",
			"faSearchDollar",
			"faSearchLocation",
			"faSearchMinus",
			"faSearchPlus",
			"faSeedling",
			"faServer",
			"faShapes",
			"faShare",
			"faShareAlt",
			"faShareAltSquare",
			"faShareSquare",
			"faShekelSign",
			"faShieldAlt",
			"faShieldVirus",
			"faShip",
			"faShippingFast",
			"faShoePrints",
			"faShoppingBag",
			"faShoppingBasket",
			"faShoppingCart",
			"faShower",
			"faShuttleVan",
			"faSign",
			"faSignInAlt",
			"faSignLanguage",
			"faSignOutAlt",
			"faSignal",
			"faSignature",
			"faSimCard",
			"faSink",
			"faSitemap",
			"faSkating",
			"faSkiing",
			"faSkiingNordic",
			"faSkull",
			"faSkullCrossbones",
			"faSlash",
			"faSleigh",
			"faSlidersH",
			"faSmile",
			"faSmileBeam",
			"faSmileWink",
			"faSmog",
			"faSmoking",
			"faSmokingBan",
			"faSms",
			"faSnowboarding",
			"faSnowflake",
			"faSnowman",
			"faSnowplow",
			"faSoap",
			"faSocks",
			"faSolarPanel",
			"faSort",
			"faSortAlphaDown",
			"faSortAlphaDownAlt",
			"faSortAlphaUp",
			"faSortAlphaUpAlt",
			"faSortAmountDown",
			"faSortAmountDownAlt",
			"faSortAmountUp",
			"faSortAmountUpAlt",
			"faSortDown",
			"faSortNumericDown",
			"faSortNumericDownAlt",
			"faSortNumericUp",
			"faSortNumericUpAlt",
			"faSortUp",
			"faSpa",
			"faSpaceShuttle",
			"faSpellCheck",
			"faSpider",
			"faSpinner",
			"faSplotch",
			"faSprayCan",
			"faSquare",
			"faSquareFull",
			"faSquareRootAlt",
			"faStamp",
			"faStar",
			"faStarAndCrescent",
			"faStarHalf",
			"faStarHalfAlt",
			"faStarOfDavid",
			"faStarOfLife",
			"faStepBackward",
			"faStepForward",
			"faStethoscope",
			"faStickyNote",
			"faStop",
			"faStopCircle",
			"faStopwatch",
			"faStopwatch20",
			"faStore",
			"faStoreAlt",
			"faStoreAltSlash",
			"faStoreSlash",
			"faStream",
			"faStreetView",
			"faStrikethrough",
			"faStroopwafel",
			"faSubscript",
			"faSubway",
			"faSuitcase",
			"faSuitcaseRolling",
			"faSun",
			"faSuperscript",
			"faSurprise",
			"faSwatchbook",
			"faSwimmer",
			"faSwimmingPool",
			"faSynagogue",
			"faSync",
			"faSyncAlt",
			"faSyringe",
			"faTable",
			"faTableTennis",
			"faTablet",
			"faTabletAlt",
			"faTablets",
			"faTachometerAlt",
			"faTag",
			"faTags",
			"faTape",
			"faTasks",
			"faTaxi",
			"faTeeth",
			"faTeethOpen",
			"faTemperatureHigh",
			"faTemperatureLow",
			"faTenge",
			"faTerminal",
			"faTextHeight",
			"faTextWidth",
			"faTh",
			"faThLarge",
			"faThList",
			"faTheaterMasks",
			"faThermometer",
			"faThermometerEmpty",
			"faThermometerFull",
			"faThermometerHalf",
			"faThermometerQuarter",
			"faThermometerThreeQuarters",
			"faThumbsDown",
			"faThumbsUp",
			"faThumbtack",
			"faTicketAlt",
			"faTimes",
			"faTimesCircle",
			"faTint",
			"faTintSlash",
			"faTired",
			"faToggleOff",
			"faToggleOn",
			"faToilet",
			"faToiletPaper",
			"faToiletPaperSlash",
			"faToolbox",
			"faTools",
			"faTooth",
			"faTorah",
			"faToriiGate",
			"faTractor",
			"faTrademark",
			"faTrafficLight",
			"faTrailer",
			"faTrain",
			"faTram",
			"faTransgender",
			"faTransgenderAlt",
			"faTrash",
			"faTrashAlt",
			"faTrashRestore",
			"faTrashRestoreAlt",
			"faTree",
			"faTrophy",
			"faTruck",
			"faTruckLoading",
			"faTruckMonster",
			"faTruckMoving",
			"faTruckPickup",
			"faTshirt",
			"faTty",
			"faTv",
			"faUmbrella",
			"faUmbrellaBeach",
			"faUnderline",
			"faUndo",
			"faUndoAlt",
			"faUniversalAccess",
			"faUniversity",
			"faUnlink",
			"faUnlock",
			"faUnlockAlt",
			"faUpload",
			"faUser",
			"faUserAlt",
			"faUserAltSlash",
			"faUserAstronaut",
			"faUserCheck",
			"faUserCircle",
			"faUserClock",
			"faUserCog",
			"faUserEdit",
			"faUserFriends",
			"faUserGraduate",
			"faUserInjured",
			"faUserLock",
			"faUserMd",
			"faUserMinus",
			"faUserNinja",
			"faUserNurse",
			"faUserPlus",
			"faUserSecret",
			"faUserShield",
			"faUserSlash",
			"faUserTag",
			"faUserTie",
			"faUserTimes",
			"faUsers",
			"faUsersCog",
			"faUsersSlash",
			"faUtensilSpoon",
			"faUtensils",
			"faVectorSquare",
			"faVenus",
			"faVenusDouble",
			"faVenusMars",
			"faVial",
			"faVials",
			"faVideo",
			"faVideoSlash",
			"faVihara",
			"faVirus",
			"faVirusSlash",
			"faViruses",
			"faVoicemail",
			"faVolleyballBall",
			"faVolumeDown",
			"faVolumeMute",
			"faVolumeOff",
			"faVolumeUp",
			"faVoteYea",
			"faVrCardboard",
			"faWalking",
			"faWallet",
			"faWarehouse",
			"faWater",
			"faWaveSquare",
			"faWeight",
			"faWeightHanging",
			"faWheelchair",
			"faWifi",
			"faWind",
			"faWindowClose",
			"faWindowMaximize",
			"faWindowMinimize",
			"faWindowRestore",
			"faWineBottle",
			"faWineGlass",
			"faWineGlassAlt",
			"faWonSign",
			"faWrench",
			"faXRay",
			"faYenSign",
			"faYinYang"
		],
		"detectedNames": [
			"fas",
			"prefix",
			"faAd",
			"faAddressBook",
			"faAddressCard",
			"faAdjust",
			"faAirFreshener",
			"faAlignCenter",
			"faAlignJustify",
			"faAlignLeft",
			"faAlignRight",
			"faAllergies",
			"faAmbulance",
			"faAmericanSignLanguageInterpreting",
			"faAnchor",
			"faAngleDoubleDown",
			"faAngleDoubleLeft",
			"faAngleDoubleRight",
			"faAngleDoubleUp",
			"faAngleDown",
			"faAngleLeft",
			"faAngleRight",
			"faAngleUp",
			"faAngry",
			"faAnkh",
			"faAppleAlt",
			"faArchive",
			"faArchway",
			"faArrowAltCircleDown",
			"faArrowAltCircleLeft",
			"faArrowAltCircleRight",
			"faArrowAltCircleUp",
			"faArrowCircleDown",
			"faArrowCircleLeft",
			"faArrowCircleRight",
			"faArrowCircleUp",
			"faArrowDown",
			"faArrowLeft",
			"faArrowRight",
			"faArrowUp",
			"faArrowsAlt",
			"faArrowsAltH",
			"faArrowsAltV",
			"faAssistiveListeningSystems",
			"faAsterisk",
			"faAt",
			"faAtlas",
			"faAtom",
			"faAudioDescription",
			"faAward",
			"faBaby",
			"faBabyCarriage",
			"faBackspace",
			"faBackward",
			"faBacon",
			"faBacteria",
			"faBacterium",
			"faBahai",
			"faBalanceScale",
			"faBalanceScaleLeft",
			"faBalanceScaleRight",
			"faBan",
			"faBandAid",
			"faBarcode",
			"faBars",
			"faBaseballBall",
			"faBasketballBall",
			"faBath",
			"faBatteryEmpty",
			"faBatteryFull",
			"faBatteryHalf",
			"faBatteryQuarter",
			"faBatteryThreeQuarters",
			"faBed",
			"faBeer",
			"faBell",
			"faBellSlash",
			"faBezierCurve",
			"faBible",
			"faBicycle",
			"faBiking",
			"faBinoculars",
			"faBiohazard",
			"faBirthdayCake",
			"faBlender",
			"faBlenderPhone",
			"faBlind",
			"faBlog",
			"faBold",
			"faBolt",
			"faBomb",
			"faBone",
			"faBong",
			"faBook",
			"faBookDead",
			"faBookMedical",
			"faBookOpen",
			"faBookReader",
			"faBookmark",
			"faBorderAll",
			"faBorderNone",
			"faBorderStyle",
			"faBowlingBall",
			"faBox",
			"faBoxOpen",
			"faBoxTissue",
			"faBoxes",
			"faBraille",
			"faBrain",
			"faBreadSlice",
			"faBriefcase",
			"faBriefcaseMedical",
			"faBroadcastTower",
			"faBroom",
			"faBrush",
			"faBug",
			"faBuilding",
			"faBullhorn",
			"faBullseye",
			"faBurn",
			"faBus",
			"faBusAlt",
			"faBusinessTime",
			"faCalculator",
			"faCalendar",
			"faCalendarAlt",
			"faCalendarCheck",
			"faCalendarDay",
			"faCalendarMinus",
			"faCalendarPlus",
			"faCalendarTimes",
			"faCalendarWeek",
			"faCamera",
			"faCameraRetro",
			"faCampground",
			"faCandyCane",
			"faCannabis",
			"faCapsules",
			"faCar",
			"faCarAlt",
			"faCarBattery",
			"faCarCrash",
			"faCarSide",
			"faCaravan",
			"faCaretDown",
			"faCaretLeft",
			"faCaretRight",
			"faCaretSquareDown",
			"faCaretSquareLeft",
			"faCaretSquareRight",
			"faCaretSquareUp",
			"faCaretUp",
			"faCarrot",
			"faCartArrowDown",
			"faCartPlus",
			"faCashRegister",
			"faCat",
			"faCertificate",
			"faChair",
			"faChalkboard",
			"faChalkboardTeacher",
			"faChargingStation",
			"faChartArea",
			"faChartBar",
			"faChartLine",
			"faChartPie",
			"faCheck",
			"faCheckCircle",
			"faCheckDouble",
			"faCheckSquare",
			"faCheese",
			"faChess",
			"faChessBishop",
			"faChessBoard",
			"faChessKing",
			"faChessKnight",
			"faChessPawn",
			"faChessQueen",
			"faChessRook",
			"faChevronCircleDown",
			"faChevronCircleLeft",
			"faChevronCircleRight",
			"faChevronCircleUp",
			"faChevronDown",
			"faChevronLeft",
			"faChevronRight",
			"faChevronUp",
			"faChild",
			"faChurch",
			"faCircle",
			"faCircleNotch",
			"faCity",
			"faClinicMedical",
			"faClipboard",
			"faClipboardCheck",
			"faClipboardList",
			"faClock",
			"faClone",
			"faClosedCaptioning",
			"faCloud",
			"faCloudDownloadAlt",
			"faCloudMeatball",
			"faCloudMoon",
			"faCloudMoonRain",
			"faCloudRain",
			"faCloudShowersHeavy",
			"faCloudSun",
			"faCloudSunRain",
			"faCloudUploadAlt",
			"faCocktail",
			"faCode",
			"faCodeBranch",
			"faCoffee",
			"faCog",
			"faCogs",
			"faCoins",
			"faColumns",
			"faComment",
			"faCommentAlt",
			"faCommentDollar",
			"faCommentDots",
			"faCommentMedical",
			"faCommentSlash",
			"faComments",
			"faCommentsDollar",
			"faCompactDisc",
			"faCompass",
			"faCompress",
			"faCompressAlt",
			"faCompressArrowsAlt",
			"faConciergeBell",
			"faCookie",
			"faCookieBite",
			"faCopy",
			"faCopyright",
			"faCouch",
			"faCreditCard",
			"faCrop",
			"faCropAlt",
			"faCross",
			"faCrosshairs",
			"faCrow",
			"faCrown",
			"faCrutch",
			"faCube",
			"faCubes",
			"faCut",
			"faDatabase",
			"faDeaf",
			"faDemocrat",
			"faDesktop",
			"faDharmachakra",
			"faDiagnoses",
			"faDice",
			"faDiceD20",
			"faDiceD6",
			"faDiceFive",
			"faDiceFour",
			"faDiceOne",
			"faDiceSix",
			"faDiceThree",
			"faDiceTwo",
			"faDigitalTachograph",
			"faDirections",
			"faDisease",
			"faDivide",
			"faDizzy",
			"faDna",
			"faDog",
			"faDollarSign",
			"faDolly",
			"faDollyFlatbed",
			"faDonate",
			"faDoorClosed",
			"faDoorOpen",
			"faDotCircle",
			"faDove",
			"faDownload",
			"faDraftingCompass",
			"faDragon",
			"faDrawPolygon",
			"faDrum",
			"faDrumSteelpan",
			"faDrumstickBite",
			"faDumbbell",
			"faDumpster",
			"faDumpsterFire",
			"faDungeon",
			"faEdit",
			"faEgg",
			"faEject",
			"faEllipsisH",
			"faEllipsisV",
			"faEnvelope",
			"faEnvelopeOpen",
			"faEnvelopeOpenText",
			"faEnvelopeSquare",
			"faEquals",
			"faEraser",
			"faEthernet",
			"faEuroSign",
			"faExchangeAlt",
			"faExclamation",
			"faExclamationCircle",
			"faExclamationTriangle",
			"faExpand",
			"faExpandAlt",
			"faExpandArrowsAlt",
			"faExternalLinkAlt",
			"faExternalLinkSquareAlt",
			"faEye",
			"faEyeDropper",
			"faEyeSlash",
			"faFan",
			"faFastBackward",
			"faFastForward",
			"faFaucet",
			"faFax",
			"faFeather",
			"faFeatherAlt",
			"faFemale",
			"faFighterJet",
			"faFile",
			"faFileAlt",
			"faFileArchive",
			"faFileAudio",
			"faFileCode",
			"faFileContract",
			"faFileCsv",
			"faFileDownload",
			"faFileExcel",
			"faFileExport",
			"faFileImage",
			"faFileImport",
			"faFileInvoice",
			"faFileInvoiceDollar",
			"faFileMedical",
			"faFileMedicalAlt",
			"faFilePdf",
			"faFilePowerpoint",
			"faFilePrescription",
			"faFileSignature",
			"faFileUpload",
			"faFileVideo",
			"faFileWord",
			"faFill",
			"faFillDrip",
			"faFilm",
			"faFilter",
			"faFingerprint",
			"faFire",
			"faFireAlt",
			"faFireExtinguisher",
			"faFirstAid",
			"faFish",
			"faFistRaised",
			"faFlag",
			"faFlagCheckered",
			"faFlagUsa",
			"faFlask",
			"faFlushed",
			"faFolder",
			"faFolderMinus",
			"faFolderOpen",
			"faFolderPlus",
			"faFont",
			"faFontAwesomeLogoFull",
			"faFootballBall",
			"faForward",
			"faFrog",
			"faFrown",
			"faFrownOpen",
			"faFunnelDollar",
			"faFutbol",
			"faGamepad",
			"faGasPump",
			"faGavel",
			"faGem",
			"faGenderless",
			"faGhost",
			"faGift",
			"faGifts",
			"faGlassCheers",
			"faGlassMartini",
			"faGlassMartiniAlt",
			"faGlassWhiskey",
			"faGlasses",
			"faGlobe",
			"faGlobeAfrica",
			"faGlobeAmericas",
			"faGlobeAsia",
			"faGlobeEurope",
			"faGolfBall",
			"faGopuram",
			"faGraduationCap",
			"faGreaterThan",
			"faGreaterThanEqual",
			"faGrimace",
			"faGrin",
			"faGrinAlt",
			"faGrinBeam",
			"faGrinBeamSweat",
			"faGrinHearts",
			"faGrinSquint",
			"faGrinSquintTears",
			"faGrinStars",
			"faGrinTears",
			"faGrinTongue",
			"faGrinTongueSquint",
			"faGrinTongueWink",
			"faGrinWink",
			"faGripHorizontal",
			"faGripLines",
			"faGripLinesVertical",
			"faGripVertical",
			"faGuitar",
			"faHSquare",
			"faHamburger",
			"faHammer",
			"faHamsa",
			"faHandHolding",
			"faHandHoldingHeart",
			"faHandHoldingMedical",
			"faHandHoldingUsd",
			"faHandHoldingWater",
			"faHandLizard",
			"faHandMiddleFinger",
			"faHandPaper",
			"faHandPeace",
			"faHandPointDown",
			"faHandPointLeft",
			"faHandPointRight",
			"faHandPointUp",
			"faHandPointer",
			"faHandRock",
			"faHandScissors",
			"faHandSparkles",
			"faHandSpock",
			"faHands",
			"faHandsHelping",
			"faHandsWash",
			"faHandshake",
			"faHandshakeAltSlash",
			"faHandshakeSlash",
			"faHanukiah",
			"faHardHat",
			"faHashtag",
			"faHatCowboy",
			"faHatCowboySide",
			"faHatWizard",
			"faHdd",
			"faHeadSideCough",
			"faHeadSideCoughSlash",
			"faHeadSideMask",
			"faHeadSideVirus",
			"faHeading",
			"faHeadphones",
			"faHeadphonesAlt",
			"faHeadset",
			"faHeart",
			"faHeartBroken",
			"faHeartbeat",
			"faHelicopter",
			"faHighlighter",
			"faHiking",
			"faHippo",
			"faHistory",
			"faHockeyPuck",
			"faHollyBerry",
			"faHome",
			"faHorse",
			"faHorseHead",
			"faHospital",
			"faHospitalAlt",
			"faHospitalSymbol",
			"faHospitalUser",
			"faHotTub",
			"faHotdog",
			"faHotel",
			"faHourglass",
			"faHourglassEnd",
			"faHourglassHalf",
			"faHourglassStart",
			"faHouseDamage",
			"faHouseUser",
			"faHryvnia",
			"faICursor",
			"faIceCream",
			"faIcicles",
			"faIcons",
			"faIdBadge",
			"faIdCard",
			"faIdCardAlt",
			"faIgloo",
			"faImage",
			"faImages",
			"faInbox",
			"faIndent",
			"faIndustry",
			"faInfinity",
			"faInfo",
			"faInfoCircle",
			"faItalic",
			"faJedi",
			"faJoint",
			"faJournalWhills",
			"faKaaba",
			"faKey",
			"faKeyboard",
			"faKhanda",
			"faKiss",
			"faKissBeam",
			"faKissWinkHeart",
			"faKiwiBird",
			"faLandmark",
			"faLanguage",
			"faLaptop",
			"faLaptopCode",
			"faLaptopHouse",
			"faLaptopMedical",
			"faLaugh",
			"faLaughBeam",
			"faLaughSquint",
			"faLaughWink",
			"faLayerGroup",
			"faLeaf",
			"faLemon",
			"faLessThan",
			"faLessThanEqual",
			"faLevelDownAlt",
			"faLevelUpAlt",
			"faLifeRing",
			"faLightbulb",
			"faLink",
			"faLiraSign",
			"faList",
			"faListAlt",
			"faListOl",
			"faListUl",
			"faLocationArrow",
			"faLock",
			"faLockOpen",
			"faLongArrowAltDown",
			"faLongArrowAltLeft",
			"faLongArrowAltRight",
			"faLongArrowAltUp",
			"faLowVision",
			"faLuggageCart",
			"faLungs",
			"faLungsVirus",
			"faMagic",
			"faMagnet",
			"faMailBulk",
			"faMale",
			"faMap",
			"faMapMarked",
			"faMapMarkedAlt",
			"faMapMarker",
			"faMapMarkerAlt",
			"faMapPin",
			"faMapSigns",
			"faMarker",
			"faMars",
			"faMarsDouble",
			"faMarsStroke",
			"faMarsStrokeH",
			"faMarsStrokeV",
			"faMask",
			"faMedal",
			"faMedkit",
			"faMeh",
			"faMehBlank",
			"faMehRollingEyes",
			"faMemory",
			"faMenorah",
			"faMercury",
			"faMeteor",
			"faMicrochip",
			"faMicrophone",
			"faMicrophoneAlt",
			"faMicrophoneAltSlash",
			"faMicrophoneSlash",
			"faMicroscope",
			"faMinus",
			"faMinusCircle",
			"faMinusSquare",
			"faMitten",
			"faMobile",
			"faMobileAlt",
			"faMoneyBill",
			"faMoneyBillAlt",
			"faMoneyBillWave",
			"faMoneyBillWaveAlt",
			"faMoneyCheck",
			"faMoneyCheckAlt",
			"faMonument",
			"faMoon",
			"faMortarPestle",
			"faMosque",
			"faMotorcycle",
			"faMountain",
			"faMouse",
			"faMousePointer",
			"faMugHot",
			"faMusic",
			"faNetworkWired",
			"faNeuter",
			"faNewspaper",
			"faNotEqual",
			"faNotesMedical",
			"faObjectGroup",
			"faObjectUngroup",
			"faOilCan",
			"faOm",
			"faOtter",
			"faOutdent",
			"faPager",
			"faPaintBrush",
			"faPaintRoller",
			"faPalette",
			"faPallet",
			"faPaperPlane",
			"faPaperclip",
			"faParachuteBox",
			"faParagraph",
			"faParking",
			"faPassport",
			"faPastafarianism",
			"faPaste",
			"faPause",
			"faPauseCircle",
			"faPaw",
			"faPeace",
			"faPen",
			"faPenAlt",
			"faPenFancy",
			"faPenNib",
			"faPenSquare",
			"faPencilAlt",
			"faPencilRuler",
			"faPeopleArrows",
			"faPeopleCarry",
			"faPepperHot",
			"faPercent",
			"faPercentage",
			"faPersonBooth",
			"faPhone",
			"faPhoneAlt",
			"faPhoneSlash",
			"faPhoneSquare",
			"faPhoneSquareAlt",
			"faPhoneVolume",
			"faPhotoVideo",
			"faPiggyBank",
			"faPills",
			"faPizzaSlice",
			"faPlaceOfWorship",
			"faPlane",
			"faPlaneArrival",
			"faPlaneDeparture",
			"faPlaneSlash",
			"faPlay",
			"faPlayCircle",
			"faPlug",
			"faPlus",
			"faPlusCircle",
			"faPlusSquare",
			"faPodcast",
			"faPoll",
			"faPollH",
			"faPoo",
			"faPooStorm",
			"faPoop",
			"faPortrait",
			"faPoundSign",
			"faPowerOff",
			"faPray",
			"faPrayingHands",
			"faPrescription",
			"faPrescriptionBottle",
			"faPrescriptionBottleAlt",
			"faPrint",
			"faProcedures",
			"faProjectDiagram",
			"faPumpMedical",
			"faPumpSoap",
			"faPuzzlePiece",
			"faQrcode",
			"faQuestion",
			"faQuestionCircle",
			"faQuidditch",
			"faQuoteLeft",
			"faQuoteRight",
			"faQuran",
			"faRadiation",
			"faRadiationAlt",
			"faRainbow",
			"faRandom",
			"faReceipt",
			"faRecordVinyl",
			"faRecycle",
			"faRedo",
			"faRedoAlt",
			"faRegistered",
			"faRemoveFormat",
			"faReply",
			"faReplyAll",
			"faRepublican",
			"faRestroom",
			"faRetweet",
			"faRibbon",
			"faRing",
			"faRoad",
			"faRobot",
			"faRocket",
			"faRoute",
			"faRss",
			"faRssSquare",
			"faRubleSign",
			"faRuler",
			"faRulerCombined",
			"faRulerHorizontal",
			"faRulerVertical",
			"faRunning",
			"faRupeeSign",
			"faSadCry",
			"faSadTear",
			"faSatellite",
			"faSatelliteDish",
			"faSave",
			"faSchool",
			"faScrewdriver",
			"faScroll",
			"faSdCard",
			"faSearch",
			"faSearchDollar",
			"faSearchLocation",
			"faSearchMinus",
			"faSearchPlus",
			"faSeedling",
			"faServer",
			"faShapes",
			"faShare",
			"faShareAlt",
			"faShareAltSquare",
			"faShareSquare",
			"faShekelSign",
			"faShieldAlt",
			"faShieldVirus",
			"faShip",
			"faShippingFast",
			"faShoePrints",
			"faShoppingBag",
			"faShoppingBasket",
			"faShoppingCart",
			"faShower",
			"faShuttleVan",
			"faSign",
			"faSignInAlt",
			"faSignLanguage",
			"faSignOutAlt",
			"faSignal",
			"faSignature",
			"faSimCard",
			"faSink",
			"faSitemap",
			"faSkating",
			"faSkiing",
			"faSkiingNordic",
			"faSkull",
			"faSkullCrossbones",
			"faSlash",
			"faSleigh",
			"faSlidersH",
			"faSmile",
			"faSmileBeam",
			"faSmileWink",
			"faSmog",
			"faSmoking",
			"faSmokingBan",
			"faSms",
			"faSnowboarding",
			"faSnowflake",
			"faSnowman",
			"faSnowplow",
			"faSoap",
			"faSocks",
			"faSolarPanel",
			"faSort",
			"faSortAlphaDown",
			"faSortAlphaDownAlt",
			"faSortAlphaUp",
			"faSortAlphaUpAlt",
			"faSortAmountDown",
			"faSortAmountDownAlt",
			"faSortAmountUp",
			"faSortAmountUpAlt",
			"faSortDown",
			"faSortNumericDown",
			"faSortNumericDownAlt",
			"faSortNumericUp",
			"faSortNumericUpAlt",
			"faSortUp",
			"faSpa",
			"faSpaceShuttle",
			"faSpellCheck",
			"faSpider",
			"faSpinner",
			"faSplotch",
			"faSprayCan",
			"faSquare",
			"faSquareFull",
			"faSquareRootAlt",
			"faStamp",
			"faStar",
			"faStarAndCrescent",
			"faStarHalf",
			"faStarHalfAlt",
			"faStarOfDavid",
			"faStarOfLife",
			"faStepBackward",
			"faStepForward",
			"faStethoscope",
			"faStickyNote",
			"faStop",
			"faStopCircle",
			"faStopwatch",
			"faStopwatch20",
			"faStore",
			"faStoreAlt",
			"faStoreAltSlash",
			"faStoreSlash",
			"faStream",
			"faStreetView",
			"faStrikethrough",
			"faStroopwafel",
			"faSubscript",
			"faSubway",
			"faSuitcase",
			"faSuitcaseRolling",
			"faSun",
			"faSuperscript",
			"faSurprise",
			"faSwatchbook",
			"faSwimmer",
			"faSwimmingPool",
			"faSynagogue",
			"faSync",
			"faSyncAlt",
			"faSyringe",
			"faTable",
			"faTableTennis",
			"faTablet",
			"faTabletAlt",
			"faTablets",
			"faTachometerAlt",
			"faTag",
			"faTags",
			"faTape",
			"faTasks",
			"faTaxi",
			"faTeeth",
			"faTeethOpen",
			"faTemperatureHigh",
			"faTemperatureLow",
			"faTenge",
			"faTerminal",
			"faTextHeight",
			"faTextWidth",
			"faTh",
			"faThLarge",
			"faThList",
			"faTheaterMasks",
			"faThermometer",
			"faThermometerEmpty",
			"faThermometerFull",
			"faThermometerHalf",
			"faThermometerQuarter",
			"faThermometerThreeQuarters",
			"faThumbsDown",
			"faThumbsUp",
			"faThumbtack",
			"faTicketAlt",
			"faTimes",
			"faTimesCircle",
			"faTint",
			"faTintSlash",
			"faTired",
			"faToggleOff",
			"faToggleOn",
			"faToilet",
			"faToiletPaper",
			"faToiletPaperSlash",
			"faToolbox",
			"faTools",
			"faTooth",
			"faTorah",
			"faToriiGate",
			"faTractor",
			"faTrademark",
			"faTrafficLight",
			"faTrailer",
			"faTrain",
			"faTram",
			"faTransgender",
			"faTransgenderAlt",
			"faTrash",
			"faTrashAlt",
			"faTrashRestore",
			"faTrashRestoreAlt",
			"faTree",
			"faTrophy",
			"faTruck",
			"faTruckLoading",
			"faTruckMonster",
			"faTruckMoving",
			"faTruckPickup",
			"faTshirt",
			"faTty",
			"faTv",
			"faUmbrella",
			"faUmbrellaBeach",
			"faUnderline",
			"faUndo",
			"faUndoAlt",
			"faUniversalAccess",
			"faUniversity",
			"faUnlink",
			"faUnlock",
			"faUnlockAlt",
			"faUpload",
			"faUser",
			"faUserAlt",
			"faUserAltSlash",
			"faUserAstronaut",
			"faUserCheck",
			"faUserCircle",
			"faUserClock",
			"faUserCog",
			"faUserEdit",
			"faUserFriends",
			"faUserGraduate",
			"faUserInjured",
			"faUserLock",
			"faUserMd",
			"faUserMinus",
			"faUserNinja",
			"faUserNurse",
			"faUserPlus",
			"faUserSecret",
			"faUserShield",
			"faUserSlash",
			"faUserTag",
			"faUserTie",
			"faUserTimes",
			"faUsers",
			"faUsersCog",
			"faUsersSlash",
			"faUtensilSpoon",
			"faUtensils",
			"faVectorSquare",
			"faVenus",
			"faVenusDouble",
			"faVenusMars",
			"faVial",
			"faVials",
			"faVideo",
			"faVideoSlash",
			"faVihara",
			"faVirus",
			"faVirusSlash",
			"faViruses",
			"faVoicemail",
			"faVolleyballBall",
			"faVolumeDown",
			"faVolumeMute",
			"faVolumeOff",
			"faVolumeUp",
			"faVoteYea",
			"faVrCardboard",
			"faWalking",
			"faWallet",
			"faWarehouse",
			"faWater",
			"faWaveSquare",
			"faWeight",
			"faWeightHanging",
			"faWheelchair",
			"faWifi",
			"faWind",
			"faWindowClose",
			"faWindowMaximize",
			"faWindowMinimize",
			"faWindowRestore",
			"faWineBottle",
			"faWineGlass",
			"faWineGlassAlt",
			"faWonSign",
			"faWrench",
			"faXRay",
			"faYenSign",
			"faYinYang"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ts-jest",
		"transpiled": true,
		"expectedNames": [
			"mocked",
			"createJestPreset",
			"pathsToModuleNameMapper",
			"version",
			"digest",
			"createTransformer",
			"process",
			"getCacheKey",
			"canInstrument",
			"__singleton",
			"__resetModule",
			"jestPreset"
		],
		"detectedNames": [
			"mocked",
			"createJestPreset",
			"pathsToModuleNameMapper",
			"version",
			"digest",
			"createTransformer",
			"process",
			"getCacheKey",
			"canInstrument",
			"__singleton",
			"__resetModule",
			"jestPreset"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "grunt-contrib-watch",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "loglevel",
		"expectedNames": [
			"name",
			"levels",
			"methodFactory",
			"getLevel",
			"setLevel",
			"setDefaultLevel",
			"enableAll",
			"disableAll",
			"trace",
			"debug",
			"info",
			"warn",
			"error",
			"log",
			"getLogger",
			"noConflict",
			"getLoggers"
		],
		"detectedNames": [],
		"missingNames": [
			"name",
			"levels",
			"methodFactory",
			"getLevel",
			"setLevel",
			"setDefaultLevel",
			"enableAll",
			"disableAll",
			"trace",
			"debug",
			"info",
			"warn",
			"error",
			"log",
			"getLogger",
			"noConflict",
			"getLoggers"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "on-finished",
		"expectedNames": [
			"isFinished"
		],
		"detectedNames": [
			"isFinished"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "fs-promise",
		"expectedNames": [
			"copy",
			"emptyDir",
			"ensureFile",
			"ensureDir",
			"ensureLink",
			"ensureSymlink",
			"mkdirs",
			"move",
			"outputFile",
			"outputJson",
			"readJson",
			"remove",
			"writeJson",
			"createFile",
			"createLink",
			"createSymlink",
			"emptydir",
			"mkdirp",
			"readJSON",
			"outputJSON",
			"writeJSON",
			"appendFile",
			"appendFileSync",
			"access",
			"accessSync",
			"chown",
			"chownSync",
			"chmod",
			"chmodSync",
			"close",
			"closeSync",
			"copyFile",
			"copyFileSync",
			"createReadStream",
			"createWriteStream",
			"exists",
			"existsSync",
			"fchown",
			"fchownSync",
			"fchmod",
			"fchmodSync",
			"fdatasync",
			"fdatasyncSync",
			"fstat",
			"fstatSync",
			"fsync",
			"fsyncSync",
			"ftruncate",
			"ftruncateSync",
			"futimes",
			"futimesSync",
			"lchown",
			"lchownSync",
			"lchmod",
			"lchmodSync",
			"link",
			"linkSync",
			"lstat",
			"lstatSync",
			"lutimes",
			"lutimesSync",
			"mkdir",
			"mkdirSync",
			"mkdtemp",
			"mkdtempSync",
			"open",
			"openSync",
			"opendir",
			"opendirSync",
			"readdir",
			"readdirSync",
			"read",
			"readSync",
			"readv",
			"readvSync",
			"readFile",
			"readFileSync",
			"readlink",
			"readlinkSync",
			"realpath",
			"realpathSync",
			"rename",
			"renameSync",
			"rmdir",
			"rmdirSync",
			"stat",
			"statSync",
			"symlink",
			"symlinkSync",
			"truncate",
			"truncateSync",
			"unwatchFile",
			"unlink",
			"unlinkSync",
			"utimes",
			"utimesSync",
			"watch",
			"watchFile",
			"writeFile",
			"writeFileSync",
			"write",
			"writeSync",
			"writev",
			"writevSync",
			"Dir",
			"Dirent",
			"Stats",
			"ReadStream",
			"WriteStream",
			"FileReadStream",
			"FileWriteStream",
			"_toUnixTimestamp",
			"F_OK",
			"R_OK",
			"W_OK",
			"X_OK",
			"constants",
			"promises",
			"gracefulify",
			"copySync",
			"mkdirsSync",
			"mkdirpSync",
			"ensureDirSync",
			"removeSync",
			"readJsonSync",
			"readJSONSync",
			"writeJsonSync",
			"writeJSONSync",
			"spaces",
			"outputJsonSync",
			"outputJSONSync",
			"moveSync",
			"emptyDirSync",
			"emptydirSync",
			"createFileSync",
			"ensureFileSync",
			"createLinkSync",
			"ensureLinkSync",
			"createSymlinkSync",
			"ensureSymlinkSync",
			"outputFileSync",
			"jsonfile"
		],
		"detectedNames": [],
		"missingNames": [
			"copy",
			"emptyDir",
			"ensureFile",
			"ensureDir",
			"ensureLink",
			"ensureSymlink",
			"mkdirs",
			"move",
			"outputFile",
			"outputJson",
			"readJson",
			"remove",
			"writeJson",
			"createFile",
			"createLink",
			"createSymlink",
			"emptydir",
			"mkdirp",
			"readJSON",
			"outputJSON",
			"writeJSON",
			"appendFile",
			"appendFileSync",
			"access",
			"accessSync",
			"chown",
			"chownSync",
			"chmod",
			"chmodSync",
			"close",
			"closeSync",
			"copyFile",
			"copyFileSync",
			"createReadStream",
			"createWriteStream",
			"exists",
			"existsSync",
			"fchown",
			"fchownSync",
			"fchmod",
			"fchmodSync",
			"fdatasync",
			"fdatasyncSync",
			"fstat",
			"fstatSync",
			"fsync",
			"fsyncSync",
			"ftruncate",
			"ftruncateSync",
			"futimes",
			"futimesSync",
			"lchown",
			"lchownSync",
			"lchmod",
			"lchmodSync",
			"link",
			"linkSync",
			"lstat",
			"lstatSync",
			"lutimes",
			"lutimesSync",
			"mkdir",
			"mkdirSync",
			"mkdtemp",
			"mkdtempSync",
			"open",
			"openSync",
			"opendir",
			"opendirSync",
			"readdir",
			"readdirSync",
			"read",
			"readSync",
			"readv",
			"readvSync",
			"readFile",
			"readFileSync",
			"readlink",
			"readlinkSync",
			"realpath",
			"realpathSync",
			"rename",
			"renameSync",
			"rmdir",
			"rmdirSync",
			"stat",
			"statSync",
			"symlink",
			"symlinkSync",
			"truncate",
			"truncateSync",
			"unwatchFile",
			"unlink",
			"unlinkSync",
			"utimes",
			"utimesSync",
			"watch",
			"watchFile",
			"writeFile",
			"writeFileSync",
			"write",
			"writeSync",
			"writev",
			"writevSync",
			"Dir",
			"Dirent",
			"Stats",
			"ReadStream",
			"WriteStream",
			"FileReadStream",
			"FileWriteStream",
			"_toUnixTimestamp",
			"F_OK",
			"R_OK",
			"W_OK",
			"X_OK",
			"constants",
			"promises",
			"gracefulify",
			"copySync",
			"mkdirsSync",
			"mkdirpSync",
			"ensureDirSync",
			"removeSync",
			"readJsonSync",
			"readJSONSync",
			"writeJsonSync",
			"writeJSONSync",
			"spaces",
			"outputJsonSync",
			"outputJSONSync",
			"moveSync",
			"emptyDirSync",
			"emptydirSync",
			"createFileSync",
			"ensureFileSync",
			"createLinkSync",
			"ensureLinkSync",
			"createSymlinkSync",
			"ensureSymlinkSync",
			"outputFileSync",
			"jsonfile"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "levelup",
		"expectedNames": [
			"errors"
		],
		"detectedNames": [],
		"missingNames": [
			"errors"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nomnom",
		"expectedNames": [
			"command",
			"nocommand",
			"options",
			"opts",
			"globalOpts",
			"option",
			"usage",
			"printer",
			"script",
			"scriptName",
			"help",
			"colors",
			"nocolors",
			"parseArgs",
			"nom",
			"parse",
			"getUsage",
			"opt",
			"setOption"
		],
		"detectedNames": [],
		"missingNames": [
			"command",
			"nocommand",
			"options",
			"opts",
			"globalOpts",
			"option",
			"usage",
			"printer",
			"script",
			"scriptName",
			"help",
			"colors",
			"nocolors",
			"parseArgs",
			"nom",
			"parse",
			"getUsage",
			"opt",
			"setOption"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@angular-devkit/core",
		"transpiled": true,
		"expectedNames": [
			"terminal",
			"analytics",
			"experimental",
			"json",
			"logging",
			"workspaces",
			"BaseException",
			"UnknownException",
			"FileDoesNotExistException",
			"FileAlreadyExistException",
			"PathIsDirectoryException",
			"PathIsFileException",
			"ContentHasMutatedException",
			"InvalidUpdateRecordException",
			"MergeConflictException",
			"UnimplementedException",
			"UnsupportedPlatformException",
			"schema",
			"isJsonObject",
			"isJsonArray",
			"JsonException",
			"InvalidJsonCharacterException",
			"UnexpectedEndOfInputException",
			"PathSpecificJsonException",
			"JsonParseMode",
			"parseJsonAst",
			"parseJson",
			"tags",
			"strings",
			"clean",
			"mapObject",
			"deepCopy",
			"templateParser",
			"template",
			"DependencyNotFoundException",
			"CircularDependencyFoundException",
			"PartiallyOrderedSet",
			"PriorityQueue",
			"isPromise",
			"isObservable",
			"virtualFs",
			"InvalidPathException",
			"PathMustBeAbsoluteException",
			"PathCannotBeFragmentException",
			"NormalizedSep",
			"NormalizedRoot",
			"split",
			"extname",
			"basename",
			"dirname",
			"join",
			"isAbsolute",
			"relative",
			"resolve",
			"fragment",
			"resetNormalizeCache",
			"normalize",
			"noCacheNormalize",
			"path",
			"asWindowsPath",
			"asPosixPath",
			"getSystemPath"
		],
		"detectedNames": [
			"terminal",
			"analytics",
			"experimental",
			"json",
			"logging",
			"workspaces",
			"BaseException",
			"UnknownException",
			"FileDoesNotExistException",
			"FileAlreadyExistException",
			"PathIsDirectoryException",
			"PathIsFileException",
			"ContentHasMutatedException",
			"InvalidUpdateRecordException",
			"MergeConflictException",
			"UnimplementedException",
			"UnsupportedPlatformException",
			"schema",
			"isJsonObject",
			"isJsonArray",
			"JsonException",
			"InvalidJsonCharacterException",
			"UnexpectedEndOfInputException",
			"PathSpecificJsonException",
			"JsonParseMode",
			"parseJsonAst",
			"parseJson",
			"tags",
			"strings",
			"clean",
			"mapObject",
			"deepCopy",
			"templateParser",
			"template",
			"DependencyNotFoundException",
			"CircularDependencyFoundException",
			"PartiallyOrderedSet",
			"PriorityQueue",
			"isPromise",
			"isObservable",
			"virtualFs",
			"InvalidPathException",
			"PathMustBeAbsoluteException",
			"PathCannotBeFragmentException",
			"NormalizedSep",
			"NormalizedRoot",
			"split",
			"extname",
			"basename",
			"dirname",
			"join",
			"isAbsolute",
			"relative",
			"resolve",
			"fragment",
			"resetNormalizeCache",
			"normalize",
			"noCacheNormalize",
			"path",
			"asWindowsPath",
			"asPosixPath",
			"getSystemPath"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "react-dnd-html5-backend",
		"transpiled": true,
		"expectedNames": [
			"getEmptyImage",
			"HTML5Backend",
			"NativeTypes"
		],
		"detectedNames": [
			"getEmptyImage",
			"HTML5Backend",
			"NativeTypes"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "command-line-usage",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "readline",
		"expectedNames": [
			"Interface",
			"clearLine",
			"clearScreenDown",
			"createInterface",
			"cursorTo",
			"emitKeypressEvents",
			"moveCursor"
		],
		"detectedNames": [
			"Interface",
			"clearLine",
			"clearScreenDown",
			"createInterface",
			"cursorTo",
			"emitKeypressEvents",
			"moveCursor"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "grunt-contrib-uglify",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "csv-parse",
		"expectedNames": [
			"Parser",
			"CsvError"
		],
		"detectedNames": [],
		"missingNames": [
			"Parser",
			"CsvError"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "js-base64",
		"expectedNames": [
			"version",
			"VERSION",
			"atob",
			"atobPolyfill",
			"btoa",
			"btoaPolyfill",
			"fromBase64",
			"toBase64",
			"encode",
			"encodeURI",
			"encodeURL",
			"utob",
			"btou",
			"decode",
			"fromUint8Array",
			"toUint8Array",
			"extendString",
			"extendUint8Array",
			"extendBuiltins",
			"Base64"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"VERSION",
			"atob",
			"atobPolyfill",
			"btoa",
			"btoaPolyfill",
			"fromBase64",
			"toBase64",
			"encode",
			"encodeURI",
			"encodeURL",
			"utob",
			"btou",
			"decode",
			"fromUint8Array",
			"toUint8Array",
			"extendString",
			"extendUint8Array",
			"extendBuiltins",
			"Base64"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "level",
		"expectedNames": [
			"destroy",
			"repair",
			"errors"
		],
		"detectedNames": [],
		"missingNames": [
			"destroy",
			"repair",
			"errors"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "dayjs",
		"expectedNames": [
			"extend",
			"locale",
			"isDayjs",
			"unix",
			"en",
			"Ls"
		],
		"detectedNames": [],
		"missingNames": [
			"extend",
			"locale",
			"isDayjs",
			"unix",
			"en",
			"Ls"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "parseurl",
		"expectedNames": [
			"original"
		],
		"detectedNames": [
			"original"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-preset-stage-1",
		"expectedNames": [
			"presets",
			"plugins"
		],
		"detectedNames": [],
		"missingNames": [
			"presets",
			"plugins"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "read",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.defaults",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "requireindex",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "tough-cookie",
		"expectedNames": [
			"version",
			"CookieJar",
			"Cookie",
			"Store",
			"MemoryCookieStore",
			"parseDate",
			"formatDate",
			"parse",
			"fromJSON",
			"domainMatch",
			"defaultPath",
			"pathMatch",
			"getPublicSuffix",
			"cookieCompare",
			"permuteDomain",
			"permutePath",
			"canonicalDomain",
			"PrefixSecurityEnum"
		],
		"detectedNames": [
			"version",
			"CookieJar",
			"Cookie",
			"Store",
			"MemoryCookieStore",
			"parseDate",
			"formatDate",
			"parse",
			"fromJSON",
			"domainMatch",
			"defaultPath",
			"pathMatch",
			"getPublicSuffix",
			"cookieCompare",
			"permuteDomain",
			"permutePath",
			"canonicalDomain",
			"PrefixSecurityEnum"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cli",
		"expectedNames": [
			"app",
			"version",
			"argv",
			"argc",
			"options",
			"args",
			"command",
			"width",
			"option_width",
			"native",
			"output",
			"exit",
			"no_color",
			"enable",
			"disable",
			"setArgv",
			"next",
			"parse",
			"autocompleteCommand",
			"status",
			"info",
			"error",
			"ok",
			"debug",
			"fatal",
			"setApp",
			"parsePackageJson",
			"setUsage",
			"getUsage",
			"getOptError",
			"getValue",
			"getInt",
			"getDate",
			"getFloat",
			"getUrl",
			"getEmail",
			"getIp",
			"getPath",
			"getArrayValue",
			"withStdin",
			"withStdinLines",
			"withInput",
			"toType",
			"main",
			"createServer",
			"exec",
			"progress",
			"spinner"
		],
		"detectedNames": [],
		"missingNames": [
			"app",
			"version",
			"argv",
			"argc",
			"options",
			"args",
			"command",
			"width",
			"option_width",
			"native",
			"output",
			"exit",
			"no_color",
			"enable",
			"disable",
			"setArgv",
			"next",
			"parse",
			"autocompleteCommand",
			"status",
			"info",
			"error",
			"ok",
			"debug",
			"fatal",
			"setApp",
			"parsePackageJson",
			"setUsage",
			"getUsage",
			"getOptError",
			"getValue",
			"getInt",
			"getDate",
			"getFloat",
			"getUrl",
			"getEmail",
			"getIp",
			"getPath",
			"getArrayValue",
			"withStdin",
			"withStdinLines",
			"withInput",
			"toType",
			"main",
			"createServer",
			"exec",
			"progress",
			"spinner"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "emotion",
		"transpiled": true,
		"expectedNames": [
			"cache",
			"css",
			"cx",
			"flush",
			"getRegisteredStyles",
			"hydrate",
			"injectGlobal",
			"keyframes",
			"merge",
			"sheet"
		],
		"detectedNames": [
			"cache",
			"css",
			"cx",
			"flush",
			"getRegisteredStyles",
			"hydrate",
			"injectGlobal",
			"keyframes",
			"merge",
			"sheet"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "map-stream",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "fancy-log",
		"expectedNames": [
			"info",
			"dir",
			"warn",
			"error"
		],
		"detectedNames": [
			"info",
			"dir",
			"warn",
			"error"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "svgo",
		"expectedNames": [
			"Config"
		],
		"detectedNames": [],
		"missingNames": [
			"Config"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cross-fetch",
		"expectedNames": [
			"fetch",
			"Headers",
			"Request",
			"Response"
		],
		"detectedNames": [
			"fetch",
			"Headers",
			"Request",
			"Response"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "is-plain-object",
		"transpiled": true,
		"expectedNames": [
			"isPlainObject"
		],
		"detectedNames": [
			"isPlainObject"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "source-map-loader",
		"expectedNames": [
			"raw"
		],
		"detectedNames": [
			"raw"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@octokit/rest",
		"transpiled": true,
		"expectedNames": [
			"Octokit"
		],
		"detectedNames": [
			"Octokit"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "multimatch",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pretty-bytes",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "urijs",
		"expectedNames": [
			"version",
			"_parts",
			"preventInvalidHostname",
			"duplicateQueryParameters",
			"escapeQuerySpace",
			"protocol_expression",
			"idn_expression",
			"punycode_expression",
			"ip4_expression",
			"ip6_expression",
			"find_uri_expression",
			"findUri",
			"defaultPorts",
			"hostProtocols",
			"invalid_hostname_characters",
			"domAttributes",
			"getDomAttribute",
			"encode",
			"decode",
			"iso8859",
			"unicode",
			"characters",
			"encodeQuery",
			"decodeQuery",
			"encodePathSegment",
			"encodeUrnPathSegment",
			"decodePathSegment",
			"decodeUrnPathSegment",
			"decodePath",
			"decodeUrnPath",
			"recodePath",
			"recodeUrnPath",
			"encodeReserved",
			"parse",
			"parseHost",
			"parseAuthority",
			"parseUserinfo",
			"parseQuery",
			"build",
			"buildHost",
			"buildAuthority",
			"buildUserinfo",
			"buildQuery",
			"buildQueryParameter",
			"addQuery",
			"setQuery",
			"removeQuery",
			"hasQuery",
			"joinPaths",
			"commonPath",
			"withinString",
			"ensureValidHostname",
			"ensureValidPort",
			"noConflict"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"_parts",
			"preventInvalidHostname",
			"duplicateQueryParameters",
			"escapeQuerySpace",
			"protocol_expression",
			"idn_expression",
			"punycode_expression",
			"ip4_expression",
			"ip6_expression",
			"find_uri_expression",
			"findUri",
			"defaultPorts",
			"hostProtocols",
			"invalid_hostname_characters",
			"domAttributes",
			"getDomAttribute",
			"encode",
			"decode",
			"iso8859",
			"unicode",
			"characters",
			"encodeQuery",
			"decodeQuery",
			"encodePathSegment",
			"encodeUrnPathSegment",
			"decodePathSegment",
			"decodeUrnPathSegment",
			"decodePath",
			"decodeUrnPath",
			"recodePath",
			"recodeUrnPath",
			"encodeReserved",
			"parse",
			"parseHost",
			"parseAuthority",
			"parseUserinfo",
			"parseQuery",
			"build",
			"buildHost",
			"buildAuthority",
			"buildUserinfo",
			"buildQuery",
			"buildQueryParameter",
			"addQuery",
			"setQuery",
			"removeQuery",
			"hasQuery",
			"joinPaths",
			"commonPath",
			"withinString",
			"ensureValidHostname",
			"ensureValidPort",
			"noConflict"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "i18next",
		"expectedNames": [
			"observers",
			"options",
			"services",
			"logger",
			"modules"
		],
		"detectedNames": [],
		"missingNames": [
			"observers",
			"options",
			"services",
			"logger",
			"modules"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/types",
		"transpiled": true,
		"expectedNames": [
			"assertNode",
			"createTypeAnnotationBasedOnTypeof",
			"createUnionTypeAnnotation",
			"createFlowUnionType",
			"createTSUnionType",
			"cloneNode",
			"clone",
			"cloneDeep",
			"cloneDeepWithoutLoc",
			"cloneWithoutLoc",
			"addComment",
			"addComments",
			"inheritInnerComments",
			"inheritLeadingComments",
			"inheritsComments",
			"inheritTrailingComments",
			"removeComments",
			"ensureBlock",
			"toBindingIdentifierName",
			"toBlock",
			"toComputedKey",
			"toExpression",
			"toIdentifier",
			"toKeyAlias",
			"toSequenceExpression",
			"toStatement",
			"valueToNode",
			"appendToMemberExpression",
			"inherits",
			"prependToMemberExpression",
			"removeProperties",
			"removePropertiesDeep",
			"removeTypeDuplicates",
			"getBindingIdentifiers",
			"getOuterBindingIdentifiers",
			"traverse",
			"traverseFast",
			"shallowEqual",
			"is",
			"isBinding",
			"isBlockScoped",
			"isImmutable",
			"isLet",
			"isNode",
			"isNodesEquivalent",
			"isPlaceholderType",
			"isReferenced",
			"isScope",
			"isSpecifierDefault",
			"isType",
			"isValidES3Identifier",
			"isValidIdentifier",
			"isVar",
			"matchesPattern",
			"validate",
			"buildMatchMemberExpression",
			"react",
			"assertArrayExpression",
			"assertAssignmentExpression",
			"assertBinaryExpression",
			"assertInterpreterDirective",
			"assertDirective",
			"assertDirectiveLiteral",
			"assertBlockStatement",
			"assertBreakStatement",
			"assertCallExpression",
			"assertCatchClause",
			"assertConditionalExpression",
			"assertContinueStatement",
			"assertDebuggerStatement",
			"assertDoWhileStatement",
			"assertEmptyStatement",
			"assertExpressionStatement",
			"assertFile",
			"assertForInStatement",
			"assertForStatement",
			"assertFunctionDeclaration",
			"assertFunctionExpression",
			"assertIdentifier",
			"assertIfStatement",
			"assertLabeledStatement",
			"assertStringLiteral",
			"assertNumericLiteral",
			"assertNullLiteral",
			"assertBooleanLiteral",
			"assertRegExpLiteral",
			"assertLogicalExpression",
			"assertMemberExpression",
			"assertNewExpression",
			"assertProgram",
			"assertObjectExpression",
			"assertObjectMethod",
			"assertObjectProperty",
			"assertRestElement",
			"assertReturnStatement",
			"assertSequenceExpression",
			"assertParenthesizedExpression",
			"assertSwitchCase",
			"assertSwitchStatement",
			"assertThisExpression",
			"assertThrowStatement",
			"assertTryStatement",
			"assertUnaryExpression",
			"assertUpdateExpression",
			"assertVariableDeclaration",
			"assertVariableDeclarator",
			"assertWhileStatement",
			"assertWithStatement",
			"assertAssignmentPattern",
			"assertArrayPattern",
			"assertArrowFunctionExpression",
			"assertClassBody",
			"assertClassExpression",
			"assertClassDeclaration",
			"assertExportAllDeclaration",
			"assertExportDefaultDeclaration",
			"assertExportNamedDeclaration",
			"assertExportSpecifier",
			"assertForOfStatement",
			"assertImportDeclaration",
			"assertImportDefaultSpecifier",
			"assertImportNamespaceSpecifier",
			"assertImportSpecifier",
			"assertMetaProperty",
			"assertClassMethod",
			"assertObjectPattern",
			"assertSpreadElement",
			"assertSuper",
			"assertTaggedTemplateExpression",
			"assertTemplateElement",
			"assertTemplateLiteral",
			"assertYieldExpression",
			"assertAwaitExpression",
			"assertImport",
			"assertBigIntLiteral",
			"assertExportNamespaceSpecifier",
			"assertOptionalMemberExpression",
			"assertOptionalCallExpression",
			"assertAnyTypeAnnotation",
			"assertArrayTypeAnnotation",
			"assertBooleanTypeAnnotation",
			"assertBooleanLiteralTypeAnnotation",
			"assertNullLiteralTypeAnnotation",
			"assertClassImplements",
			"assertDeclareClass",
			"assertDeclareFunction",
			"assertDeclareInterface",
			"assertDeclareModule",
			"assertDeclareModuleExports",
			"assertDeclareTypeAlias",
			"assertDeclareOpaqueType",
			"assertDeclareVariable",
			"assertDeclareExportDeclaration",
			"assertDeclareExportAllDeclaration",
			"assertDeclaredPredicate",
			"assertExistsTypeAnnotation",
			"assertFunctionTypeAnnotation",
			"assertFunctionTypeParam",
			"assertGenericTypeAnnotation",
			"assertInferredPredicate",
			"assertInterfaceExtends",
			"assertInterfaceDeclaration",
			"assertInterfaceTypeAnnotation",
			"assertIntersectionTypeAnnotation",
			"assertMixedTypeAnnotation",
			"assertEmptyTypeAnnotation",
			"assertNullableTypeAnnotation",
			"assertNumberLiteralTypeAnnotation",
			"assertNumberTypeAnnotation",
			"assertObjectTypeAnnotation",
			"assertObjectTypeInternalSlot",
			"assertObjectTypeCallProperty",
			"assertObjectTypeIndexer",
			"assertObjectTypeProperty",
			"assertObjectTypeSpreadProperty",
			"assertOpaqueType",
			"assertQualifiedTypeIdentifier",
			"assertStringLiteralTypeAnnotation",
			"assertStringTypeAnnotation",
			"assertSymbolTypeAnnotation",
			"assertThisTypeAnnotation",
			"assertTupleTypeAnnotation",
			"assertTypeofTypeAnnotation",
			"assertTypeAlias",
			"assertTypeAnnotation",
			"assertTypeCastExpression",
			"assertTypeParameter",
			"assertTypeParameterDeclaration",
			"assertTypeParameterInstantiation",
			"assertUnionTypeAnnotation",
			"assertVariance",
			"assertVoidTypeAnnotation",
			"assertEnumDeclaration",
			"assertEnumBooleanBody",
			"assertEnumNumberBody",
			"assertEnumStringBody",
			"assertEnumSymbolBody",
			"assertEnumBooleanMember",
			"assertEnumNumberMember",
			"assertEnumStringMember",
			"assertEnumDefaultedMember",
			"assertJSXAttribute",
			"assertJSXClosingElement",
			"assertJSXElement",
			"assertJSXEmptyExpression",
			"assertJSXExpressionContainer",
			"assertJSXSpreadChild",
			"assertJSXIdentifier",
			"assertJSXMemberExpression",
			"assertJSXNamespacedName",
			"assertJSXOpeningElement",
			"assertJSXSpreadAttribute",
			"assertJSXText",
			"assertJSXFragment",
			"assertJSXOpeningFragment",
			"assertJSXClosingFragment",
			"assertNoop",
			"assertPlaceholder",
			"assertV8IntrinsicIdentifier",
			"assertArgumentPlaceholder",
			"assertBindExpression",
			"assertClassProperty",
			"assertPipelineTopicExpression",
			"assertPipelineBareFunction",
			"assertPipelinePrimaryTopicReference",
			"assertClassPrivateProperty",
			"assertClassPrivateMethod",
			"assertImportAttribute",
			"assertDecorator",
			"assertDoExpression",
			"assertExportDefaultSpecifier",
			"assertPrivateName",
			"assertRecordExpression",
			"assertTupleExpression",
			"assertDecimalLiteral",
			"assertTSParameterProperty",
			"assertTSDeclareFunction",
			"assertTSDeclareMethod",
			"assertTSQualifiedName",
			"assertTSCallSignatureDeclaration",
			"assertTSConstructSignatureDeclaration",
			"assertTSPropertySignature",
			"assertTSMethodSignature",
			"assertTSIndexSignature",
			"assertTSAnyKeyword",
			"assertTSBooleanKeyword",
			"assertTSBigIntKeyword",
			"assertTSNeverKeyword",
			"assertTSNullKeyword",
			"assertTSNumberKeyword",
			"assertTSObjectKeyword",
			"assertTSStringKeyword",
			"assertTSSymbolKeyword",
			"assertTSUndefinedKeyword",
			"assertTSUnknownKeyword",
			"assertTSVoidKeyword",
			"assertTSThisType",
			"assertTSFunctionType",
			"assertTSConstructorType",
			"assertTSTypeReference",
			"assertTSTypePredicate",
			"assertTSTypeQuery",
			"assertTSTypeLiteral",
			"assertTSArrayType",
			"assertTSTupleType",
			"assertTSOptionalType",
			"assertTSRestType",
			"assertTSNamedTupleMember",
			"assertTSUnionType",
			"assertTSIntersectionType",
			"assertTSConditionalType",
			"assertTSInferType",
			"assertTSParenthesizedType",
			"assertTSTypeOperator",
			"assertTSIndexedAccessType",
			"assertTSMappedType",
			"assertTSLiteralType",
			"assertTSExpressionWithTypeArguments",
			"assertTSInterfaceDeclaration",
			"assertTSInterfaceBody",
			"assertTSTypeAliasDeclaration",
			"assertTSAsExpression",
			"assertTSTypeAssertion",
			"assertTSEnumDeclaration",
			"assertTSEnumMember",
			"assertTSModuleDeclaration",
			"assertTSModuleBlock",
			"assertTSImportType",
			"assertTSImportEqualsDeclaration",
			"assertTSExternalModuleReference",
			"assertTSNonNullExpression",
			"assertTSExportAssignment",
			"assertTSNamespaceExportDeclaration",
			"assertTSTypeAnnotation",
			"assertTSTypeParameterInstantiation",
			"assertTSTypeParameterDeclaration",
			"assertTSTypeParameter",
			"assertExpression",
			"assertBinary",
			"assertScopable",
			"assertBlockParent",
			"assertBlock",
			"assertStatement",
			"assertTerminatorless",
			"assertCompletionStatement",
			"assertConditional",
			"assertLoop",
			"assertWhile",
			"assertExpressionWrapper",
			"assertFor",
			"assertForXStatement",
			"assertFunction",
			"assertFunctionParent",
			"assertPureish",
			"assertDeclaration",
			"assertPatternLike",
			"assertLVal",
			"assertTSEntityName",
			"assertLiteral",
			"assertImmutable",
			"assertUserWhitespacable",
			"assertMethod",
			"assertObjectMember",
			"assertProperty",
			"assertUnaryLike",
			"assertPattern",
			"assertClass",
			"assertModuleDeclaration",
			"assertExportDeclaration",
			"assertModuleSpecifier",
			"assertFlow",
			"assertFlowType",
			"assertFlowBaseAnnotation",
			"assertFlowDeclaration",
			"assertFlowPredicate",
			"assertEnumBody",
			"assertEnumMember",
			"assertJSX",
			"assertPrivate",
			"assertTSTypeElement",
			"assertTSType",
			"assertTSBaseType",
			"assertNumberLiteral",
			"assertRegexLiteral",
			"assertRestProperty",
			"assertSpreadProperty",
			"arrayExpression",
			"ArrayExpression",
			"assignmentExpression",
			"AssignmentExpression",
			"binaryExpression",
			"BinaryExpression",
			"interpreterDirective",
			"InterpreterDirective",
			"directive",
			"Directive",
			"directiveLiteral",
			"DirectiveLiteral",
			"blockStatement",
			"BlockStatement",
			"breakStatement",
			"BreakStatement",
			"callExpression",
			"CallExpression",
			"catchClause",
			"CatchClause",
			"conditionalExpression",
			"ConditionalExpression",
			"continueStatement",
			"ContinueStatement",
			"debuggerStatement",
			"DebuggerStatement",
			"doWhileStatement",
			"DoWhileStatement",
			"emptyStatement",
			"EmptyStatement",
			"expressionStatement",
			"ExpressionStatement",
			"file",
			"File",
			"forInStatement",
			"ForInStatement",
			"forStatement",
			"ForStatement",
			"functionDeclaration",
			"FunctionDeclaration",
			"functionExpression",
			"FunctionExpression",
			"identifier",
			"Identifier",
			"ifStatement",
			"IfStatement",
			"labeledStatement",
			"LabeledStatement",
			"stringLiteral",
			"StringLiteral",
			"numericLiteral",
			"NumericLiteral",
			"nullLiteral",
			"NullLiteral",
			"booleanLiteral",
			"BooleanLiteral",
			"regExpLiteral",
			"RegExpLiteral",
			"logicalExpression",
			"LogicalExpression",
			"memberExpression",
			"MemberExpression",
			"newExpression",
			"NewExpression",
			"program",
			"Program",
			"objectExpression",
			"ObjectExpression",
			"objectMethod",
			"ObjectMethod",
			"objectProperty",
			"ObjectProperty",
			"restElement",
			"RestElement",
			"returnStatement",
			"ReturnStatement",
			"sequenceExpression",
			"SequenceExpression",
			"parenthesizedExpression",
			"ParenthesizedExpression",
			"switchCase",
			"SwitchCase",
			"switchStatement",
			"SwitchStatement",
			"thisExpression",
			"ThisExpression",
			"throwStatement",
			"ThrowStatement",
			"tryStatement",
			"TryStatement",
			"unaryExpression",
			"UnaryExpression",
			"updateExpression",
			"UpdateExpression",
			"variableDeclaration",
			"VariableDeclaration",
			"variableDeclarator",
			"VariableDeclarator",
			"whileStatement",
			"WhileStatement",
			"withStatement",
			"WithStatement",
			"assignmentPattern",
			"AssignmentPattern",
			"arrayPattern",
			"ArrayPattern",
			"arrowFunctionExpression",
			"ArrowFunctionExpression",
			"classBody",
			"ClassBody",
			"classExpression",
			"ClassExpression",
			"classDeclaration",
			"ClassDeclaration",
			"exportAllDeclaration",
			"ExportAllDeclaration",
			"exportDefaultDeclaration",
			"ExportDefaultDeclaration",
			"exportNamedDeclaration",
			"ExportNamedDeclaration",
			"exportSpecifier",
			"ExportSpecifier",
			"forOfStatement",
			"ForOfStatement",
			"importDeclaration",
			"ImportDeclaration",
			"importDefaultSpecifier",
			"ImportDefaultSpecifier",
			"importNamespaceSpecifier",
			"ImportNamespaceSpecifier",
			"importSpecifier",
			"ImportSpecifier",
			"metaProperty",
			"MetaProperty",
			"classMethod",
			"ClassMethod",
			"objectPattern",
			"ObjectPattern",
			"spreadElement",
			"SpreadElement",
			"Super",
			"super",
			"taggedTemplateExpression",
			"TaggedTemplateExpression",
			"templateElement",
			"TemplateElement",
			"templateLiteral",
			"TemplateLiteral",
			"yieldExpression",
			"YieldExpression",
			"awaitExpression",
			"AwaitExpression",
			"Import",
			"import",
			"bigIntLiteral",
			"BigIntLiteral",
			"exportNamespaceSpecifier",
			"ExportNamespaceSpecifier",
			"optionalMemberExpression",
			"OptionalMemberExpression",
			"optionalCallExpression",
			"OptionalCallExpression",
			"anyTypeAnnotation",
			"AnyTypeAnnotation",
			"arrayTypeAnnotation",
			"ArrayTypeAnnotation",
			"booleanTypeAnnotation",
			"BooleanTypeAnnotation",
			"booleanLiteralTypeAnnotation",
			"BooleanLiteralTypeAnnotation",
			"nullLiteralTypeAnnotation",
			"NullLiteralTypeAnnotation",
			"classImplements",
			"ClassImplements",
			"declareClass",
			"DeclareClass",
			"declareFunction",
			"DeclareFunction",
			"declareInterface",
			"DeclareInterface",
			"declareModule",
			"DeclareModule",
			"declareModuleExports",
			"DeclareModuleExports",
			"declareTypeAlias",
			"DeclareTypeAlias",
			"declareOpaqueType",
			"DeclareOpaqueType",
			"declareVariable",
			"DeclareVariable",
			"declareExportDeclaration",
			"DeclareExportDeclaration",
			"declareExportAllDeclaration",
			"DeclareExportAllDeclaration",
			"declaredPredicate",
			"DeclaredPredicate",
			"existsTypeAnnotation",
			"ExistsTypeAnnotation",
			"functionTypeAnnotation",
			"FunctionTypeAnnotation",
			"functionTypeParam",
			"FunctionTypeParam",
			"genericTypeAnnotation",
			"GenericTypeAnnotation",
			"inferredPredicate",
			"InferredPredicate",
			"interfaceExtends",
			"InterfaceExtends",
			"interfaceDeclaration",
			"InterfaceDeclaration",
			"interfaceTypeAnnotation",
			"InterfaceTypeAnnotation",
			"intersectionTypeAnnotation",
			"IntersectionTypeAnnotation",
			"mixedTypeAnnotation",
			"MixedTypeAnnotation",
			"emptyTypeAnnotation",
			"EmptyTypeAnnotation",
			"nullableTypeAnnotation",
			"NullableTypeAnnotation",
			"numberLiteralTypeAnnotation",
			"NumberLiteralTypeAnnotation",
			"numberTypeAnnotation",
			"NumberTypeAnnotation",
			"objectTypeAnnotation",
			"ObjectTypeAnnotation",
			"objectTypeInternalSlot",
			"ObjectTypeInternalSlot",
			"objectTypeCallProperty",
			"ObjectTypeCallProperty",
			"objectTypeIndexer",
			"ObjectTypeIndexer",
			"objectTypeProperty",
			"ObjectTypeProperty",
			"objectTypeSpreadProperty",
			"ObjectTypeSpreadProperty",
			"opaqueType",
			"OpaqueType",
			"qualifiedTypeIdentifier",
			"QualifiedTypeIdentifier",
			"stringLiteralTypeAnnotation",
			"StringLiteralTypeAnnotation",
			"stringTypeAnnotation",
			"StringTypeAnnotation",
			"symbolTypeAnnotation",
			"SymbolTypeAnnotation",
			"thisTypeAnnotation",
			"ThisTypeAnnotation",
			"tupleTypeAnnotation",
			"TupleTypeAnnotation",
			"typeofTypeAnnotation",
			"TypeofTypeAnnotation",
			"typeAlias",
			"TypeAlias",
			"typeAnnotation",
			"TypeAnnotation",
			"typeCastExpression",
			"TypeCastExpression",
			"typeParameter",
			"TypeParameter",
			"typeParameterDeclaration",
			"TypeParameterDeclaration",
			"typeParameterInstantiation",
			"TypeParameterInstantiation",
			"unionTypeAnnotation",
			"UnionTypeAnnotation",
			"variance",
			"Variance",
			"voidTypeAnnotation",
			"VoidTypeAnnotation",
			"enumDeclaration",
			"EnumDeclaration",
			"enumBooleanBody",
			"EnumBooleanBody",
			"enumNumberBody",
			"EnumNumberBody",
			"enumStringBody",
			"EnumStringBody",
			"enumSymbolBody",
			"EnumSymbolBody",
			"enumBooleanMember",
			"EnumBooleanMember",
			"enumNumberMember",
			"EnumNumberMember",
			"enumStringMember",
			"EnumStringMember",
			"enumDefaultedMember",
			"EnumDefaultedMember",
			"jsxAttribute",
			"JSXAttribute",
			"jSXAttribute",
			"jsxClosingElement",
			"JSXClosingElement",
			"jSXClosingElement",
			"jsxElement",
			"JSXElement",
			"jSXElement",
			"jsxEmptyExpression",
			"JSXEmptyExpression",
			"jSXEmptyExpression",
			"jsxExpressionContainer",
			"JSXExpressionContainer",
			"jSXExpressionContainer",
			"jsxSpreadChild",
			"JSXSpreadChild",
			"jSXSpreadChild",
			"jsxIdentifier",
			"JSXIdentifier",
			"jSXIdentifier",
			"jsxMemberExpression",
			"JSXMemberExpression",
			"jSXMemberExpression",
			"jsxNamespacedName",
			"JSXNamespacedName",
			"jSXNamespacedName",
			"jsxOpeningElement",
			"JSXOpeningElement",
			"jSXOpeningElement",
			"jsxSpreadAttribute",
			"JSXSpreadAttribute",
			"jSXSpreadAttribute",
			"jsxText",
			"JSXText",
			"jSXText",
			"jsxFragment",
			"JSXFragment",
			"jSXFragment",
			"jsxOpeningFragment",
			"JSXOpeningFragment",
			"jSXOpeningFragment",
			"jsxClosingFragment",
			"JSXClosingFragment",
			"jSXClosingFragment",
			"noop",
			"Noop",
			"placeholder",
			"Placeholder",
			"v8IntrinsicIdentifier",
			"V8IntrinsicIdentifier",
			"argumentPlaceholder",
			"ArgumentPlaceholder",
			"bindExpression",
			"BindExpression",
			"classProperty",
			"ClassProperty",
			"pipelineTopicExpression",
			"PipelineTopicExpression",
			"pipelineBareFunction",
			"PipelineBareFunction",
			"pipelinePrimaryTopicReference",
			"PipelinePrimaryTopicReference",
			"classPrivateProperty",
			"ClassPrivateProperty",
			"classPrivateMethod",
			"ClassPrivateMethod",
			"importAttribute",
			"ImportAttribute",
			"decorator",
			"Decorator",
			"doExpression",
			"DoExpression",
			"exportDefaultSpecifier",
			"ExportDefaultSpecifier",
			"privateName",
			"PrivateName",
			"recordExpression",
			"RecordExpression",
			"tupleExpression",
			"TupleExpression",
			"decimalLiteral",
			"DecimalLiteral",
			"tsParameterProperty",
			"TSParameterProperty",
			"tSParameterProperty",
			"tsDeclareFunction",
			"TSDeclareFunction",
			"tSDeclareFunction",
			"tsDeclareMethod",
			"TSDeclareMethod",
			"tSDeclareMethod",
			"tsQualifiedName",
			"TSQualifiedName",
			"tSQualifiedName",
			"tsCallSignatureDeclaration",
			"TSCallSignatureDeclaration",
			"tSCallSignatureDeclaration",
			"tsConstructSignatureDeclaration",
			"TSConstructSignatureDeclaration",
			"tSConstructSignatureDeclaration",
			"tsPropertySignature",
			"TSPropertySignature",
			"tSPropertySignature",
			"tsMethodSignature",
			"TSMethodSignature",
			"tSMethodSignature",
			"tsIndexSignature",
			"TSIndexSignature",
			"tSIndexSignature",
			"tsAnyKeyword",
			"TSAnyKeyword",
			"tSAnyKeyword",
			"tsBooleanKeyword",
			"TSBooleanKeyword",
			"tSBooleanKeyword",
			"tsBigIntKeyword",
			"TSBigIntKeyword",
			"tSBigIntKeyword",
			"tsNeverKeyword",
			"TSNeverKeyword",
			"tSNeverKeyword",
			"tsNullKeyword",
			"TSNullKeyword",
			"tSNullKeyword",
			"tsNumberKeyword",
			"TSNumberKeyword",
			"tSNumberKeyword",
			"tsObjectKeyword",
			"TSObjectKeyword",
			"tSObjectKeyword",
			"tsStringKeyword",
			"TSStringKeyword",
			"tSStringKeyword",
			"tsSymbolKeyword",
			"TSSymbolKeyword",
			"tSSymbolKeyword",
			"tsUndefinedKeyword",
			"TSUndefinedKeyword",
			"tSUndefinedKeyword",
			"tsUnknownKeyword",
			"TSUnknownKeyword",
			"tSUnknownKeyword",
			"tsVoidKeyword",
			"TSVoidKeyword",
			"tSVoidKeyword",
			"tsThisType",
			"TSThisType",
			"tSThisType",
			"tsFunctionType",
			"TSFunctionType",
			"tSFunctionType",
			"tsConstructorType",
			"TSConstructorType",
			"tSConstructorType",
			"tsTypeReference",
			"TSTypeReference",
			"tSTypeReference",
			"tsTypePredicate",
			"TSTypePredicate",
			"tSTypePredicate",
			"tsTypeQuery",
			"TSTypeQuery",
			"tSTypeQuery",
			"tsTypeLiteral",
			"TSTypeLiteral",
			"tSTypeLiteral",
			"tsArrayType",
			"TSArrayType",
			"tSArrayType",
			"tsTupleType",
			"TSTupleType",
			"tSTupleType",
			"tsOptionalType",
			"TSOptionalType",
			"tSOptionalType",
			"tsRestType",
			"TSRestType",
			"tSRestType",
			"tsNamedTupleMember",
			"TSNamedTupleMember",
			"tSNamedTupleMember",
			"tsUnionType",
			"TSUnionType",
			"tSUnionType",
			"tsIntersectionType",
			"TSIntersectionType",
			"tSIntersectionType",
			"tsConditionalType",
			"TSConditionalType",
			"tSConditionalType",
			"tsInferType",
			"TSInferType",
			"tSInferType",
			"tsParenthesizedType",
			"TSParenthesizedType",
			"tSParenthesizedType",
			"tsTypeOperator",
			"TSTypeOperator",
			"tSTypeOperator",
			"tsIndexedAccessType",
			"TSIndexedAccessType",
			"tSIndexedAccessType",
			"tsMappedType",
			"TSMappedType",
			"tSMappedType",
			"tsLiteralType",
			"TSLiteralType",
			"tSLiteralType",
			"tsExpressionWithTypeArguments",
			"TSExpressionWithTypeArguments",
			"tSExpressionWithTypeArguments",
			"tsInterfaceDeclaration",
			"TSInterfaceDeclaration",
			"tSInterfaceDeclaration",
			"tsInterfaceBody",
			"TSInterfaceBody",
			"tSInterfaceBody",
			"tsTypeAliasDeclaration",
			"TSTypeAliasDeclaration",
			"tSTypeAliasDeclaration",
			"tsAsExpression",
			"TSAsExpression",
			"tSAsExpression",
			"tsTypeAssertion",
			"TSTypeAssertion",
			"tSTypeAssertion",
			"tsEnumDeclaration",
			"TSEnumDeclaration",
			"tSEnumDeclaration",
			"tsEnumMember",
			"TSEnumMember",
			"tSEnumMember",
			"tsModuleDeclaration",
			"TSModuleDeclaration",
			"tSModuleDeclaration",
			"tsModuleBlock",
			"TSModuleBlock",
			"tSModuleBlock",
			"tsImportType",
			"TSImportType",
			"tSImportType",
			"tsImportEqualsDeclaration",
			"TSImportEqualsDeclaration",
			"tSImportEqualsDeclaration",
			"tsExternalModuleReference",
			"TSExternalModuleReference",
			"tSExternalModuleReference",
			"tsNonNullExpression",
			"TSNonNullExpression",
			"tSNonNullExpression",
			"tsExportAssignment",
			"TSExportAssignment",
			"tSExportAssignment",
			"tsNamespaceExportDeclaration",
			"TSNamespaceExportDeclaration",
			"tSNamespaceExportDeclaration",
			"tsTypeAnnotation",
			"TSTypeAnnotation",
			"tSTypeAnnotation",
			"tsTypeParameterInstantiation",
			"TSTypeParameterInstantiation",
			"tSTypeParameterInstantiation",
			"tsTypeParameterDeclaration",
			"TSTypeParameterDeclaration",
			"tSTypeParameterDeclaration",
			"tsTypeParameter",
			"TSTypeParameter",
			"tSTypeParameter",
			"NumberLiteral",
			"numberLiteral",
			"RegexLiteral",
			"regexLiteral",
			"RestProperty",
			"restProperty",
			"SpreadProperty",
			"spreadProperty",
			"EXPRESSION_TYPES",
			"BINARY_TYPES",
			"SCOPABLE_TYPES",
			"BLOCKPARENT_TYPES",
			"BLOCK_TYPES",
			"STATEMENT_TYPES",
			"TERMINATORLESS_TYPES",
			"COMPLETIONSTATEMENT_TYPES",
			"CONDITIONAL_TYPES",
			"LOOP_TYPES",
			"WHILE_TYPES",
			"EXPRESSIONWRAPPER_TYPES",
			"FOR_TYPES",
			"FORXSTATEMENT_TYPES",
			"FUNCTION_TYPES",
			"FUNCTIONPARENT_TYPES",
			"PUREISH_TYPES",
			"DECLARATION_TYPES",
			"PATTERNLIKE_TYPES",
			"LVAL_TYPES",
			"TSENTITYNAME_TYPES",
			"LITERAL_TYPES",
			"IMMUTABLE_TYPES",
			"USERWHITESPACABLE_TYPES",
			"METHOD_TYPES",
			"OBJECTMEMBER_TYPES",
			"PROPERTY_TYPES",
			"UNARYLIKE_TYPES",
			"PATTERN_TYPES",
			"CLASS_TYPES",
			"MODULEDECLARATION_TYPES",
			"EXPORTDECLARATION_TYPES",
			"MODULESPECIFIER_TYPES",
			"FLOW_TYPES",
			"FLOWTYPE_TYPES",
			"FLOWBASEANNOTATION_TYPES",
			"FLOWDECLARATION_TYPES",
			"FLOWPREDICATE_TYPES",
			"ENUMBODY_TYPES",
			"ENUMMEMBER_TYPES",
			"JSX_TYPES",
			"PRIVATE_TYPES",
			"TSTYPEELEMENT_TYPES",
			"TSTYPE_TYPES",
			"TSBASETYPE_TYPES",
			"STATEMENT_OR_BLOCK_KEYS",
			"FLATTENABLE_KEYS",
			"FOR_INIT_KEYS",
			"COMMENT_KEYS",
			"LOGICAL_OPERATORS",
			"UPDATE_OPERATORS",
			"BOOLEAN_NUMBER_BINARY_OPERATORS",
			"EQUALITY_BINARY_OPERATORS",
			"COMPARISON_BINARY_OPERATORS",
			"BOOLEAN_BINARY_OPERATORS",
			"NUMBER_BINARY_OPERATORS",
			"BINARY_OPERATORS",
			"ASSIGNMENT_OPERATORS",
			"BOOLEAN_UNARY_OPERATORS",
			"NUMBER_UNARY_OPERATORS",
			"STRING_UNARY_OPERATORS",
			"UNARY_OPERATORS",
			"INHERIT_KEYS",
			"BLOCK_SCOPED_SYMBOL",
			"NOT_LOCAL_BINDING",
			"VISITOR_KEYS",
			"ALIAS_KEYS",
			"FLIPPED_ALIAS_KEYS",
			"NODE_FIELDS",
			"BUILDER_KEYS",
			"DEPRECATED_KEYS",
			"NODE_PARENT_VALIDATIONS",
			"PLACEHOLDERS",
			"PLACEHOLDERS_ALIAS",
			"PLACEHOLDERS_FLIPPED_ALIAS",
			"TYPES",
			"isArrayExpression",
			"isAssignmentExpression",
			"isBinaryExpression",
			"isInterpreterDirective",
			"isDirective",
			"isDirectiveLiteral",
			"isBlockStatement",
			"isBreakStatement",
			"isCallExpression",
			"isCatchClause",
			"isConditionalExpression",
			"isContinueStatement",
			"isDebuggerStatement",
			"isDoWhileStatement",
			"isEmptyStatement",
			"isExpressionStatement",
			"isFile",
			"isForInStatement",
			"isForStatement",
			"isFunctionDeclaration",
			"isFunctionExpression",
			"isIdentifier",
			"isIfStatement",
			"isLabeledStatement",
			"isStringLiteral",
			"isNumericLiteral",
			"isNullLiteral",
			"isBooleanLiteral",
			"isRegExpLiteral",
			"isLogicalExpression",
			"isMemberExpression",
			"isNewExpression",
			"isProgram",
			"isObjectExpression",
			"isObjectMethod",
			"isObjectProperty",
			"isRestElement",
			"isReturnStatement",
			"isSequenceExpression",
			"isParenthesizedExpression",
			"isSwitchCase",
			"isSwitchStatement",
			"isThisExpression",
			"isThrowStatement",
			"isTryStatement",
			"isUnaryExpression",
			"isUpdateExpression",
			"isVariableDeclaration",
			"isVariableDeclarator",
			"isWhileStatement",
			"isWithStatement",
			"isAssignmentPattern",
			"isArrayPattern",
			"isArrowFunctionExpression",
			"isClassBody",
			"isClassExpression",
			"isClassDeclaration",
			"isExportAllDeclaration",
			"isExportDefaultDeclaration",
			"isExportNamedDeclaration",
			"isExportSpecifier",
			"isForOfStatement",
			"isImportDeclaration",
			"isImportDefaultSpecifier",
			"isImportNamespaceSpecifier",
			"isImportSpecifier",
			"isMetaProperty",
			"isClassMethod",
			"isObjectPattern",
			"isSpreadElement",
			"isSuper",
			"isTaggedTemplateExpression",
			"isTemplateElement",
			"isTemplateLiteral",
			"isYieldExpression",
			"isAwaitExpression",
			"isImport",
			"isBigIntLiteral",
			"isExportNamespaceSpecifier",
			"isOptionalMemberExpression",
			"isOptionalCallExpression",
			"isAnyTypeAnnotation",
			"isArrayTypeAnnotation",
			"isBooleanTypeAnnotation",
			"isBooleanLiteralTypeAnnotation",
			"isNullLiteralTypeAnnotation",
			"isClassImplements",
			"isDeclareClass",
			"isDeclareFunction",
			"isDeclareInterface",
			"isDeclareModule",
			"isDeclareModuleExports",
			"isDeclareTypeAlias",
			"isDeclareOpaqueType",
			"isDeclareVariable",
			"isDeclareExportDeclaration",
			"isDeclareExportAllDeclaration",
			"isDeclaredPredicate",
			"isExistsTypeAnnotation",
			"isFunctionTypeAnnotation",
			"isFunctionTypeParam",
			"isGenericTypeAnnotation",
			"isInferredPredicate",
			"isInterfaceExtends",
			"isInterfaceDeclaration",
			"isInterfaceTypeAnnotation",
			"isIntersectionTypeAnnotation",
			"isMixedTypeAnnotation",
			"isEmptyTypeAnnotation",
			"isNullableTypeAnnotation",
			"isNumberLiteralTypeAnnotation",
			"isNumberTypeAnnotation",
			"isObjectTypeAnnotation",
			"isObjectTypeInternalSlot",
			"isObjectTypeCallProperty",
			"isObjectTypeIndexer",
			"isObjectTypeProperty",
			"isObjectTypeSpreadProperty",
			"isOpaqueType",
			"isQualifiedTypeIdentifier",
			"isStringLiteralTypeAnnotation",
			"isStringTypeAnnotation",
			"isSymbolTypeAnnotation",
			"isThisTypeAnnotation",
			"isTupleTypeAnnotation",
			"isTypeofTypeAnnotation",
			"isTypeAlias",
			"isTypeAnnotation",
			"isTypeCastExpression",
			"isTypeParameter",
			"isTypeParameterDeclaration",
			"isTypeParameterInstantiation",
			"isUnionTypeAnnotation",
			"isVariance",
			"isVoidTypeAnnotation",
			"isEnumDeclaration",
			"isEnumBooleanBody",
			"isEnumNumberBody",
			"isEnumStringBody",
			"isEnumSymbolBody",
			"isEnumBooleanMember",
			"isEnumNumberMember",
			"isEnumStringMember",
			"isEnumDefaultedMember",
			"isJSXAttribute",
			"isJSXClosingElement",
			"isJSXElement",
			"isJSXEmptyExpression",
			"isJSXExpressionContainer",
			"isJSXSpreadChild",
			"isJSXIdentifier",
			"isJSXMemberExpression",
			"isJSXNamespacedName",
			"isJSXOpeningElement",
			"isJSXSpreadAttribute",
			"isJSXText",
			"isJSXFragment",
			"isJSXOpeningFragment",
			"isJSXClosingFragment",
			"isNoop",
			"isPlaceholder",
			"isV8IntrinsicIdentifier",
			"isArgumentPlaceholder",
			"isBindExpression",
			"isClassProperty",
			"isPipelineTopicExpression",
			"isPipelineBareFunction",
			"isPipelinePrimaryTopicReference",
			"isClassPrivateProperty",
			"isClassPrivateMethod",
			"isImportAttribute",
			"isDecorator",
			"isDoExpression",
			"isExportDefaultSpecifier",
			"isPrivateName",
			"isRecordExpression",
			"isTupleExpression",
			"isDecimalLiteral",
			"isTSParameterProperty",
			"isTSDeclareFunction",
			"isTSDeclareMethod",
			"isTSQualifiedName",
			"isTSCallSignatureDeclaration",
			"isTSConstructSignatureDeclaration",
			"isTSPropertySignature",
			"isTSMethodSignature",
			"isTSIndexSignature",
			"isTSAnyKeyword",
			"isTSBooleanKeyword",
			"isTSBigIntKeyword",
			"isTSNeverKeyword",
			"isTSNullKeyword",
			"isTSNumberKeyword",
			"isTSObjectKeyword",
			"isTSStringKeyword",
			"isTSSymbolKeyword",
			"isTSUndefinedKeyword",
			"isTSUnknownKeyword",
			"isTSVoidKeyword",
			"isTSThisType",
			"isTSFunctionType",
			"isTSConstructorType",
			"isTSTypeReference",
			"isTSTypePredicate",
			"isTSTypeQuery",
			"isTSTypeLiteral",
			"isTSArrayType",
			"isTSTupleType",
			"isTSOptionalType",
			"isTSRestType",
			"isTSNamedTupleMember",
			"isTSUnionType",
			"isTSIntersectionType",
			"isTSConditionalType",
			"isTSInferType",
			"isTSParenthesizedType",
			"isTSTypeOperator",
			"isTSIndexedAccessType",
			"isTSMappedType",
			"isTSLiteralType",
			"isTSExpressionWithTypeArguments",
			"isTSInterfaceDeclaration",
			"isTSInterfaceBody",
			"isTSTypeAliasDeclaration",
			"isTSAsExpression",
			"isTSTypeAssertion",
			"isTSEnumDeclaration",
			"isTSEnumMember",
			"isTSModuleDeclaration",
			"isTSModuleBlock",
			"isTSImportType",
			"isTSImportEqualsDeclaration",
			"isTSExternalModuleReference",
			"isTSNonNullExpression",
			"isTSExportAssignment",
			"isTSNamespaceExportDeclaration",
			"isTSTypeAnnotation",
			"isTSTypeParameterInstantiation",
			"isTSTypeParameterDeclaration",
			"isTSTypeParameter",
			"isExpression",
			"isBinary",
			"isScopable",
			"isBlockParent",
			"isBlock",
			"isStatement",
			"isTerminatorless",
			"isCompletionStatement",
			"isConditional",
			"isLoop",
			"isWhile",
			"isExpressionWrapper",
			"isFor",
			"isForXStatement",
			"isFunction",
			"isFunctionParent",
			"isPureish",
			"isDeclaration",
			"isPatternLike",
			"isLVal",
			"isTSEntityName",
			"isLiteral",
			"isUserWhitespacable",
			"isMethod",
			"isObjectMember",
			"isProperty",
			"isUnaryLike",
			"isPattern",
			"isClass",
			"isModuleDeclaration",
			"isExportDeclaration",
			"isModuleSpecifier",
			"isFlow",
			"isFlowType",
			"isFlowBaseAnnotation",
			"isFlowDeclaration",
			"isFlowPredicate",
			"isEnumBody",
			"isEnumMember",
			"isJSX",
			"isPrivate",
			"isTSTypeElement",
			"isTSType",
			"isTSBaseType",
			"isNumberLiteral",
			"isRegexLiteral",
			"isRestProperty",
			"isSpreadProperty"
		],
		"detectedNames": [
			"assertNode",
			"createTypeAnnotationBasedOnTypeof",
			"createUnionTypeAnnotation",
			"createFlowUnionType",
			"createTSUnionType",
			"cloneNode",
			"clone",
			"cloneDeep",
			"cloneDeepWithoutLoc",
			"cloneWithoutLoc",
			"addComment",
			"addComments",
			"inheritInnerComments",
			"inheritLeadingComments",
			"inheritsComments",
			"inheritTrailingComments",
			"removeComments",
			"ensureBlock",
			"toBindingIdentifierName",
			"toBlock",
			"toComputedKey",
			"toExpression",
			"toIdentifier",
			"toKeyAlias",
			"toSequenceExpression",
			"toStatement",
			"valueToNode",
			"appendToMemberExpression",
			"inherits",
			"prependToMemberExpression",
			"removeProperties",
			"removePropertiesDeep",
			"removeTypeDuplicates",
			"getBindingIdentifiers",
			"getOuterBindingIdentifiers",
			"traverse",
			"traverseFast",
			"shallowEqual",
			"is",
			"isBinding",
			"isBlockScoped",
			"isImmutable",
			"isLet",
			"isNode",
			"isNodesEquivalent",
			"isPlaceholderType",
			"isReferenced",
			"isScope",
			"isSpecifierDefault",
			"isType",
			"isValidES3Identifier",
			"isValidIdentifier",
			"isVar",
			"matchesPattern",
			"validate",
			"buildMatchMemberExpression",
			"react"
		],
		"missingNames": [
			"assertArrayExpression",
			"assertAssignmentExpression",
			"assertBinaryExpression",
			"assertInterpreterDirective",
			"assertDirective",
			"assertDirectiveLiteral",
			"assertBlockStatement",
			"assertBreakStatement",
			"assertCallExpression",
			"assertCatchClause",
			"assertConditionalExpression",
			"assertContinueStatement",
			"assertDebuggerStatement",
			"assertDoWhileStatement",
			"assertEmptyStatement",
			"assertExpressionStatement",
			"assertFile",
			"assertForInStatement",
			"assertForStatement",
			"assertFunctionDeclaration",
			"assertFunctionExpression",
			"assertIdentifier",
			"assertIfStatement",
			"assertLabeledStatement",
			"assertStringLiteral",
			"assertNumericLiteral",
			"assertNullLiteral",
			"assertBooleanLiteral",
			"assertRegExpLiteral",
			"assertLogicalExpression",
			"assertMemberExpression",
			"assertNewExpression",
			"assertProgram",
			"assertObjectExpression",
			"assertObjectMethod",
			"assertObjectProperty",
			"assertRestElement",
			"assertReturnStatement",
			"assertSequenceExpression",
			"assertParenthesizedExpression",
			"assertSwitchCase",
			"assertSwitchStatement",
			"assertThisExpression",
			"assertThrowStatement",
			"assertTryStatement",
			"assertUnaryExpression",
			"assertUpdateExpression",
			"assertVariableDeclaration",
			"assertVariableDeclarator",
			"assertWhileStatement",
			"assertWithStatement",
			"assertAssignmentPattern",
			"assertArrayPattern",
			"assertArrowFunctionExpression",
			"assertClassBody",
			"assertClassExpression",
			"assertClassDeclaration",
			"assertExportAllDeclaration",
			"assertExportDefaultDeclaration",
			"assertExportNamedDeclaration",
			"assertExportSpecifier",
			"assertForOfStatement",
			"assertImportDeclaration",
			"assertImportDefaultSpecifier",
			"assertImportNamespaceSpecifier",
			"assertImportSpecifier",
			"assertMetaProperty",
			"assertClassMethod",
			"assertObjectPattern",
			"assertSpreadElement",
			"assertSuper",
			"assertTaggedTemplateExpression",
			"assertTemplateElement",
			"assertTemplateLiteral",
			"assertYieldExpression",
			"assertAwaitExpression",
			"assertImport",
			"assertBigIntLiteral",
			"assertExportNamespaceSpecifier",
			"assertOptionalMemberExpression",
			"assertOptionalCallExpression",
			"assertAnyTypeAnnotation",
			"assertArrayTypeAnnotation",
			"assertBooleanTypeAnnotation",
			"assertBooleanLiteralTypeAnnotation",
			"assertNullLiteralTypeAnnotation",
			"assertClassImplements",
			"assertDeclareClass",
			"assertDeclareFunction",
			"assertDeclareInterface",
			"assertDeclareModule",
			"assertDeclareModuleExports",
			"assertDeclareTypeAlias",
			"assertDeclareOpaqueType",
			"assertDeclareVariable",
			"assertDeclareExportDeclaration",
			"assertDeclareExportAllDeclaration",
			"assertDeclaredPredicate",
			"assertExistsTypeAnnotation",
			"assertFunctionTypeAnnotation",
			"assertFunctionTypeParam",
			"assertGenericTypeAnnotation",
			"assertInferredPredicate",
			"assertInterfaceExtends",
			"assertInterfaceDeclaration",
			"assertInterfaceTypeAnnotation",
			"assertIntersectionTypeAnnotation",
			"assertMixedTypeAnnotation",
			"assertEmptyTypeAnnotation",
			"assertNullableTypeAnnotation",
			"assertNumberLiteralTypeAnnotation",
			"assertNumberTypeAnnotation",
			"assertObjectTypeAnnotation",
			"assertObjectTypeInternalSlot",
			"assertObjectTypeCallProperty",
			"assertObjectTypeIndexer",
			"assertObjectTypeProperty",
			"assertObjectTypeSpreadProperty",
			"assertOpaqueType",
			"assertQualifiedTypeIdentifier",
			"assertStringLiteralTypeAnnotation",
			"assertStringTypeAnnotation",
			"assertSymbolTypeAnnotation",
			"assertThisTypeAnnotation",
			"assertTupleTypeAnnotation",
			"assertTypeofTypeAnnotation",
			"assertTypeAlias",
			"assertTypeAnnotation",
			"assertTypeCastExpression",
			"assertTypeParameter",
			"assertTypeParameterDeclaration",
			"assertTypeParameterInstantiation",
			"assertUnionTypeAnnotation",
			"assertVariance",
			"assertVoidTypeAnnotation",
			"assertEnumDeclaration",
			"assertEnumBooleanBody",
			"assertEnumNumberBody",
			"assertEnumStringBody",
			"assertEnumSymbolBody",
			"assertEnumBooleanMember",
			"assertEnumNumberMember",
			"assertEnumStringMember",
			"assertEnumDefaultedMember",
			"assertJSXAttribute",
			"assertJSXClosingElement",
			"assertJSXElement",
			"assertJSXEmptyExpression",
			"assertJSXExpressionContainer",
			"assertJSXSpreadChild",
			"assertJSXIdentifier",
			"assertJSXMemberExpression",
			"assertJSXNamespacedName",
			"assertJSXOpeningElement",
			"assertJSXSpreadAttribute",
			"assertJSXText",
			"assertJSXFragment",
			"assertJSXOpeningFragment",
			"assertJSXClosingFragment",
			"assertNoop",
			"assertPlaceholder",
			"assertV8IntrinsicIdentifier",
			"assertArgumentPlaceholder",
			"assertBindExpression",
			"assertClassProperty",
			"assertPipelineTopicExpression",
			"assertPipelineBareFunction",
			"assertPipelinePrimaryTopicReference",
			"assertClassPrivateProperty",
			"assertClassPrivateMethod",
			"assertImportAttribute",
			"assertDecorator",
			"assertDoExpression",
			"assertExportDefaultSpecifier",
			"assertPrivateName",
			"assertRecordExpression",
			"assertTupleExpression",
			"assertDecimalLiteral",
			"assertTSParameterProperty",
			"assertTSDeclareFunction",
			"assertTSDeclareMethod",
			"assertTSQualifiedName",
			"assertTSCallSignatureDeclaration",
			"assertTSConstructSignatureDeclaration",
			"assertTSPropertySignature",
			"assertTSMethodSignature",
			"assertTSIndexSignature",
			"assertTSAnyKeyword",
			"assertTSBooleanKeyword",
			"assertTSBigIntKeyword",
			"assertTSNeverKeyword",
			"assertTSNullKeyword",
			"assertTSNumberKeyword",
			"assertTSObjectKeyword",
			"assertTSStringKeyword",
			"assertTSSymbolKeyword",
			"assertTSUndefinedKeyword",
			"assertTSUnknownKeyword",
			"assertTSVoidKeyword",
			"assertTSThisType",
			"assertTSFunctionType",
			"assertTSConstructorType",
			"assertTSTypeReference",
			"assertTSTypePredicate",
			"assertTSTypeQuery",
			"assertTSTypeLiteral",
			"assertTSArrayType",
			"assertTSTupleType",
			"assertTSOptionalType",
			"assertTSRestType",
			"assertTSNamedTupleMember",
			"assertTSUnionType",
			"assertTSIntersectionType",
			"assertTSConditionalType",
			"assertTSInferType",
			"assertTSParenthesizedType",
			"assertTSTypeOperator",
			"assertTSIndexedAccessType",
			"assertTSMappedType",
			"assertTSLiteralType",
			"assertTSExpressionWithTypeArguments",
			"assertTSInterfaceDeclaration",
			"assertTSInterfaceBody",
			"assertTSTypeAliasDeclaration",
			"assertTSAsExpression",
			"assertTSTypeAssertion",
			"assertTSEnumDeclaration",
			"assertTSEnumMember",
			"assertTSModuleDeclaration",
			"assertTSModuleBlock",
			"assertTSImportType",
			"assertTSImportEqualsDeclaration",
			"assertTSExternalModuleReference",
			"assertTSNonNullExpression",
			"assertTSExportAssignment",
			"assertTSNamespaceExportDeclaration",
			"assertTSTypeAnnotation",
			"assertTSTypeParameterInstantiation",
			"assertTSTypeParameterDeclaration",
			"assertTSTypeParameter",
			"assertExpression",
			"assertBinary",
			"assertScopable",
			"assertBlockParent",
			"assertBlock",
			"assertStatement",
			"assertTerminatorless",
			"assertCompletionStatement",
			"assertConditional",
			"assertLoop",
			"assertWhile",
			"assertExpressionWrapper",
			"assertFor",
			"assertForXStatement",
			"assertFunction",
			"assertFunctionParent",
			"assertPureish",
			"assertDeclaration",
			"assertPatternLike",
			"assertLVal",
			"assertTSEntityName",
			"assertLiteral",
			"assertImmutable",
			"assertUserWhitespacable",
			"assertMethod",
			"assertObjectMember",
			"assertProperty",
			"assertUnaryLike",
			"assertPattern",
			"assertClass",
			"assertModuleDeclaration",
			"assertExportDeclaration",
			"assertModuleSpecifier",
			"assertFlow",
			"assertFlowType",
			"assertFlowBaseAnnotation",
			"assertFlowDeclaration",
			"assertFlowPredicate",
			"assertEnumBody",
			"assertEnumMember",
			"assertJSX",
			"assertPrivate",
			"assertTSTypeElement",
			"assertTSType",
			"assertTSBaseType",
			"assertNumberLiteral",
			"assertRegexLiteral",
			"assertRestProperty",
			"assertSpreadProperty",
			"arrayExpression",
			"ArrayExpression",
			"assignmentExpression",
			"AssignmentExpression",
			"binaryExpression",
			"BinaryExpression",
			"interpreterDirective",
			"InterpreterDirective",
			"directive",
			"Directive",
			"directiveLiteral",
			"DirectiveLiteral",
			"blockStatement",
			"BlockStatement",
			"breakStatement",
			"BreakStatement",
			"callExpression",
			"CallExpression",
			"catchClause",
			"CatchClause",
			"conditionalExpression",
			"ConditionalExpression",
			"continueStatement",
			"ContinueStatement",
			"debuggerStatement",
			"DebuggerStatement",
			"doWhileStatement",
			"DoWhileStatement",
			"emptyStatement",
			"EmptyStatement",
			"expressionStatement",
			"ExpressionStatement",
			"file",
			"File",
			"forInStatement",
			"ForInStatement",
			"forStatement",
			"ForStatement",
			"functionDeclaration",
			"FunctionDeclaration",
			"functionExpression",
			"FunctionExpression",
			"identifier",
			"Identifier",
			"ifStatement",
			"IfStatement",
			"labeledStatement",
			"LabeledStatement",
			"stringLiteral",
			"StringLiteral",
			"numericLiteral",
			"NumericLiteral",
			"nullLiteral",
			"NullLiteral",
			"booleanLiteral",
			"BooleanLiteral",
			"regExpLiteral",
			"RegExpLiteral",
			"logicalExpression",
			"LogicalExpression",
			"memberExpression",
			"MemberExpression",
			"newExpression",
			"NewExpression",
			"program",
			"Program",
			"objectExpression",
			"ObjectExpression",
			"objectMethod",
			"ObjectMethod",
			"objectProperty",
			"ObjectProperty",
			"restElement",
			"RestElement",
			"returnStatement",
			"ReturnStatement",
			"sequenceExpression",
			"SequenceExpression",
			"parenthesizedExpression",
			"ParenthesizedExpression",
			"switchCase",
			"SwitchCase",
			"switchStatement",
			"SwitchStatement",
			"thisExpression",
			"ThisExpression",
			"throwStatement",
			"ThrowStatement",
			"tryStatement",
			"TryStatement",
			"unaryExpression",
			"UnaryExpression",
			"updateExpression",
			"UpdateExpression",
			"variableDeclaration",
			"VariableDeclaration",
			"variableDeclarator",
			"VariableDeclarator",
			"whileStatement",
			"WhileStatement",
			"withStatement",
			"WithStatement",
			"assignmentPattern",
			"AssignmentPattern",
			"arrayPattern",
			"ArrayPattern",
			"arrowFunctionExpression",
			"ArrowFunctionExpression",
			"classBody",
			"ClassBody",
			"classExpression",
			"ClassExpression",
			"classDeclaration",
			"ClassDeclaration",
			"exportAllDeclaration",
			"ExportAllDeclaration",
			"exportDefaultDeclaration",
			"ExportDefaultDeclaration",
			"exportNamedDeclaration",
			"ExportNamedDeclaration",
			"exportSpecifier",
			"ExportSpecifier",
			"forOfStatement",
			"ForOfStatement",
			"importDeclaration",
			"ImportDeclaration",
			"importDefaultSpecifier",
			"ImportDefaultSpecifier",
			"importNamespaceSpecifier",
			"ImportNamespaceSpecifier",
			"importSpecifier",
			"ImportSpecifier",
			"metaProperty",
			"MetaProperty",
			"classMethod",
			"ClassMethod",
			"objectPattern",
			"ObjectPattern",
			"spreadElement",
			"SpreadElement",
			"Super",
			"super",
			"taggedTemplateExpression",
			"TaggedTemplateExpression",
			"templateElement",
			"TemplateElement",
			"templateLiteral",
			"TemplateLiteral",
			"yieldExpression",
			"YieldExpression",
			"awaitExpression",
			"AwaitExpression",
			"Import",
			"import",
			"bigIntLiteral",
			"BigIntLiteral",
			"exportNamespaceSpecifier",
			"ExportNamespaceSpecifier",
			"optionalMemberExpression",
			"OptionalMemberExpression",
			"optionalCallExpression",
			"OptionalCallExpression",
			"anyTypeAnnotation",
			"AnyTypeAnnotation",
			"arrayTypeAnnotation",
			"ArrayTypeAnnotation",
			"booleanTypeAnnotation",
			"BooleanTypeAnnotation",
			"booleanLiteralTypeAnnotation",
			"BooleanLiteralTypeAnnotation",
			"nullLiteralTypeAnnotation",
			"NullLiteralTypeAnnotation",
			"classImplements",
			"ClassImplements",
			"declareClass",
			"DeclareClass",
			"declareFunction",
			"DeclareFunction",
			"declareInterface",
			"DeclareInterface",
			"declareModule",
			"DeclareModule",
			"declareModuleExports",
			"DeclareModuleExports",
			"declareTypeAlias",
			"DeclareTypeAlias",
			"declareOpaqueType",
			"DeclareOpaqueType",
			"declareVariable",
			"DeclareVariable",
			"declareExportDeclaration",
			"DeclareExportDeclaration",
			"declareExportAllDeclaration",
			"DeclareExportAllDeclaration",
			"declaredPredicate",
			"DeclaredPredicate",
			"existsTypeAnnotation",
			"ExistsTypeAnnotation",
			"functionTypeAnnotation",
			"FunctionTypeAnnotation",
			"functionTypeParam",
			"FunctionTypeParam",
			"genericTypeAnnotation",
			"GenericTypeAnnotation",
			"inferredPredicate",
			"InferredPredicate",
			"interfaceExtends",
			"InterfaceExtends",
			"interfaceDeclaration",
			"InterfaceDeclaration",
			"interfaceTypeAnnotation",
			"InterfaceTypeAnnotation",
			"intersectionTypeAnnotation",
			"IntersectionTypeAnnotation",
			"mixedTypeAnnotation",
			"MixedTypeAnnotation",
			"emptyTypeAnnotation",
			"EmptyTypeAnnotation",
			"nullableTypeAnnotation",
			"NullableTypeAnnotation",
			"numberLiteralTypeAnnotation",
			"NumberLiteralTypeAnnotation",
			"numberTypeAnnotation",
			"NumberTypeAnnotation",
			"objectTypeAnnotation",
			"ObjectTypeAnnotation",
			"objectTypeInternalSlot",
			"ObjectTypeInternalSlot",
			"objectTypeCallProperty",
			"ObjectTypeCallProperty",
			"objectTypeIndexer",
			"ObjectTypeIndexer",
			"objectTypeProperty",
			"ObjectTypeProperty",
			"objectTypeSpreadProperty",
			"ObjectTypeSpreadProperty",
			"opaqueType",
			"OpaqueType",
			"qualifiedTypeIdentifier",
			"QualifiedTypeIdentifier",
			"stringLiteralTypeAnnotation",
			"StringLiteralTypeAnnotation",
			"stringTypeAnnotation",
			"StringTypeAnnotation",
			"symbolTypeAnnotation",
			"SymbolTypeAnnotation",
			"thisTypeAnnotation",
			"ThisTypeAnnotation",
			"tupleTypeAnnotation",
			"TupleTypeAnnotation",
			"typeofTypeAnnotation",
			"TypeofTypeAnnotation",
			"typeAlias",
			"TypeAlias",
			"typeAnnotation",
			"TypeAnnotation",
			"typeCastExpression",
			"TypeCastExpression",
			"typeParameter",
			"TypeParameter",
			"typeParameterDeclaration",
			"TypeParameterDeclaration",
			"typeParameterInstantiation",
			"TypeParameterInstantiation",
			"unionTypeAnnotation",
			"UnionTypeAnnotation",
			"variance",
			"Variance",
			"voidTypeAnnotation",
			"VoidTypeAnnotation",
			"enumDeclaration",
			"EnumDeclaration",
			"enumBooleanBody",
			"EnumBooleanBody",
			"enumNumberBody",
			"EnumNumberBody",
			"enumStringBody",
			"EnumStringBody",
			"enumSymbolBody",
			"EnumSymbolBody",
			"enumBooleanMember",
			"EnumBooleanMember",
			"enumNumberMember",
			"EnumNumberMember",
			"enumStringMember",
			"EnumStringMember",
			"enumDefaultedMember",
			"EnumDefaultedMember",
			"jsxAttribute",
			"JSXAttribute",
			"jSXAttribute",
			"jsxClosingElement",
			"JSXClosingElement",
			"jSXClosingElement",
			"jsxElement",
			"JSXElement",
			"jSXElement",
			"jsxEmptyExpression",
			"JSXEmptyExpression",
			"jSXEmptyExpression",
			"jsxExpressionContainer",
			"JSXExpressionContainer",
			"jSXExpressionContainer",
			"jsxSpreadChild",
			"JSXSpreadChild",
			"jSXSpreadChild",
			"jsxIdentifier",
			"JSXIdentifier",
			"jSXIdentifier",
			"jsxMemberExpression",
			"JSXMemberExpression",
			"jSXMemberExpression",
			"jsxNamespacedName",
			"JSXNamespacedName",
			"jSXNamespacedName",
			"jsxOpeningElement",
			"JSXOpeningElement",
			"jSXOpeningElement",
			"jsxSpreadAttribute",
			"JSXSpreadAttribute",
			"jSXSpreadAttribute",
			"jsxText",
			"JSXText",
			"jSXText",
			"jsxFragment",
			"JSXFragment",
			"jSXFragment",
			"jsxOpeningFragment",
			"JSXOpeningFragment",
			"jSXOpeningFragment",
			"jsxClosingFragment",
			"JSXClosingFragment",
			"jSXClosingFragment",
			"noop",
			"Noop",
			"placeholder",
			"Placeholder",
			"v8IntrinsicIdentifier",
			"V8IntrinsicIdentifier",
			"argumentPlaceholder",
			"ArgumentPlaceholder",
			"bindExpression",
			"BindExpression",
			"classProperty",
			"ClassProperty",
			"pipelineTopicExpression",
			"PipelineTopicExpression",
			"pipelineBareFunction",
			"PipelineBareFunction",
			"pipelinePrimaryTopicReference",
			"PipelinePrimaryTopicReference",
			"classPrivateProperty",
			"ClassPrivateProperty",
			"classPrivateMethod",
			"ClassPrivateMethod",
			"importAttribute",
			"ImportAttribute",
			"decorator",
			"Decorator",
			"doExpression",
			"DoExpression",
			"exportDefaultSpecifier",
			"ExportDefaultSpecifier",
			"privateName",
			"PrivateName",
			"recordExpression",
			"RecordExpression",
			"tupleExpression",
			"TupleExpression",
			"decimalLiteral",
			"DecimalLiteral",
			"tsParameterProperty",
			"TSParameterProperty",
			"tSParameterProperty",
			"tsDeclareFunction",
			"TSDeclareFunction",
			"tSDeclareFunction",
			"tsDeclareMethod",
			"TSDeclareMethod",
			"tSDeclareMethod",
			"tsQualifiedName",
			"TSQualifiedName",
			"tSQualifiedName",
			"tsCallSignatureDeclaration",
			"TSCallSignatureDeclaration",
			"tSCallSignatureDeclaration",
			"tsConstructSignatureDeclaration",
			"TSConstructSignatureDeclaration",
			"tSConstructSignatureDeclaration",
			"tsPropertySignature",
			"TSPropertySignature",
			"tSPropertySignature",
			"tsMethodSignature",
			"TSMethodSignature",
			"tSMethodSignature",
			"tsIndexSignature",
			"TSIndexSignature",
			"tSIndexSignature",
			"tsAnyKeyword",
			"TSAnyKeyword",
			"tSAnyKeyword",
			"tsBooleanKeyword",
			"TSBooleanKeyword",
			"tSBooleanKeyword",
			"tsBigIntKeyword",
			"TSBigIntKeyword",
			"tSBigIntKeyword",
			"tsNeverKeyword",
			"TSNeverKeyword",
			"tSNeverKeyword",
			"tsNullKeyword",
			"TSNullKeyword",
			"tSNullKeyword",
			"tsNumberKeyword",
			"TSNumberKeyword",
			"tSNumberKeyword",
			"tsObjectKeyword",
			"TSObjectKeyword",
			"tSObjectKeyword",
			"tsStringKeyword",
			"TSStringKeyword",
			"tSStringKeyword",
			"tsSymbolKeyword",
			"TSSymbolKeyword",
			"tSSymbolKeyword",
			"tsUndefinedKeyword",
			"TSUndefinedKeyword",
			"tSUndefinedKeyword",
			"tsUnknownKeyword",
			"TSUnknownKeyword",
			"tSUnknownKeyword",
			"tsVoidKeyword",
			"TSVoidKeyword",
			"tSVoidKeyword",
			"tsThisType",
			"TSThisType",
			"tSThisType",
			"tsFunctionType",
			"TSFunctionType",
			"tSFunctionType",
			"tsConstructorType",
			"TSConstructorType",
			"tSConstructorType",
			"tsTypeReference",
			"TSTypeReference",
			"tSTypeReference",
			"tsTypePredicate",
			"TSTypePredicate",
			"tSTypePredicate",
			"tsTypeQuery",
			"TSTypeQuery",
			"tSTypeQuery",
			"tsTypeLiteral",
			"TSTypeLiteral",
			"tSTypeLiteral",
			"tsArrayType",
			"TSArrayType",
			"tSArrayType",
			"tsTupleType",
			"TSTupleType",
			"tSTupleType",
			"tsOptionalType",
			"TSOptionalType",
			"tSOptionalType",
			"tsRestType",
			"TSRestType",
			"tSRestType",
			"tsNamedTupleMember",
			"TSNamedTupleMember",
			"tSNamedTupleMember",
			"tsUnionType",
			"TSUnionType",
			"tSUnionType",
			"tsIntersectionType",
			"TSIntersectionType",
			"tSIntersectionType",
			"tsConditionalType",
			"TSConditionalType",
			"tSConditionalType",
			"tsInferType",
			"TSInferType",
			"tSInferType",
			"tsParenthesizedType",
			"TSParenthesizedType",
			"tSParenthesizedType",
			"tsTypeOperator",
			"TSTypeOperator",
			"tSTypeOperator",
			"tsIndexedAccessType",
			"TSIndexedAccessType",
			"tSIndexedAccessType",
			"tsMappedType",
			"TSMappedType",
			"tSMappedType",
			"tsLiteralType",
			"TSLiteralType",
			"tSLiteralType",
			"tsExpressionWithTypeArguments",
			"TSExpressionWithTypeArguments",
			"tSExpressionWithTypeArguments",
			"tsInterfaceDeclaration",
			"TSInterfaceDeclaration",
			"tSInterfaceDeclaration",
			"tsInterfaceBody",
			"TSInterfaceBody",
			"tSInterfaceBody",
			"tsTypeAliasDeclaration",
			"TSTypeAliasDeclaration",
			"tSTypeAliasDeclaration",
			"tsAsExpression",
			"TSAsExpression",
			"tSAsExpression",
			"tsTypeAssertion",
			"TSTypeAssertion",
			"tSTypeAssertion",
			"tsEnumDeclaration",
			"TSEnumDeclaration",
			"tSEnumDeclaration",
			"tsEnumMember",
			"TSEnumMember",
			"tSEnumMember",
			"tsModuleDeclaration",
			"TSModuleDeclaration",
			"tSModuleDeclaration",
			"tsModuleBlock",
			"TSModuleBlock",
			"tSModuleBlock",
			"tsImportType",
			"TSImportType",
			"tSImportType",
			"tsImportEqualsDeclaration",
			"TSImportEqualsDeclaration",
			"tSImportEqualsDeclaration",
			"tsExternalModuleReference",
			"TSExternalModuleReference",
			"tSExternalModuleReference",
			"tsNonNullExpression",
			"TSNonNullExpression",
			"tSNonNullExpression",
			"tsExportAssignment",
			"TSExportAssignment",
			"tSExportAssignment",
			"tsNamespaceExportDeclaration",
			"TSNamespaceExportDeclaration",
			"tSNamespaceExportDeclaration",
			"tsTypeAnnotation",
			"TSTypeAnnotation",
			"tSTypeAnnotation",
			"tsTypeParameterInstantiation",
			"TSTypeParameterInstantiation",
			"tSTypeParameterInstantiation",
			"tsTypeParameterDeclaration",
			"TSTypeParameterDeclaration",
			"tSTypeParameterDeclaration",
			"tsTypeParameter",
			"TSTypeParameter",
			"tSTypeParameter",
			"NumberLiteral",
			"numberLiteral",
			"RegexLiteral",
			"regexLiteral",
			"RestProperty",
			"restProperty",
			"SpreadProperty",
			"spreadProperty",
			"EXPRESSION_TYPES",
			"BINARY_TYPES",
			"SCOPABLE_TYPES",
			"BLOCKPARENT_TYPES",
			"BLOCK_TYPES",
			"STATEMENT_TYPES",
			"TERMINATORLESS_TYPES",
			"COMPLETIONSTATEMENT_TYPES",
			"CONDITIONAL_TYPES",
			"LOOP_TYPES",
			"WHILE_TYPES",
			"EXPRESSIONWRAPPER_TYPES",
			"FOR_TYPES",
			"FORXSTATEMENT_TYPES",
			"FUNCTION_TYPES",
			"FUNCTIONPARENT_TYPES",
			"PUREISH_TYPES",
			"DECLARATION_TYPES",
			"PATTERNLIKE_TYPES",
			"LVAL_TYPES",
			"TSENTITYNAME_TYPES",
			"LITERAL_TYPES",
			"IMMUTABLE_TYPES",
			"USERWHITESPACABLE_TYPES",
			"METHOD_TYPES",
			"OBJECTMEMBER_TYPES",
			"PROPERTY_TYPES",
			"UNARYLIKE_TYPES",
			"PATTERN_TYPES",
			"CLASS_TYPES",
			"MODULEDECLARATION_TYPES",
			"EXPORTDECLARATION_TYPES",
			"MODULESPECIFIER_TYPES",
			"FLOW_TYPES",
			"FLOWTYPE_TYPES",
			"FLOWBASEANNOTATION_TYPES",
			"FLOWDECLARATION_TYPES",
			"FLOWPREDICATE_TYPES",
			"ENUMBODY_TYPES",
			"ENUMMEMBER_TYPES",
			"JSX_TYPES",
			"PRIVATE_TYPES",
			"TSTYPEELEMENT_TYPES",
			"TSTYPE_TYPES",
			"TSBASETYPE_TYPES",
			"STATEMENT_OR_BLOCK_KEYS",
			"FLATTENABLE_KEYS",
			"FOR_INIT_KEYS",
			"COMMENT_KEYS",
			"LOGICAL_OPERATORS",
			"UPDATE_OPERATORS",
			"BOOLEAN_NUMBER_BINARY_OPERATORS",
			"EQUALITY_BINARY_OPERATORS",
			"COMPARISON_BINARY_OPERATORS",
			"BOOLEAN_BINARY_OPERATORS",
			"NUMBER_BINARY_OPERATORS",
			"BINARY_OPERATORS",
			"ASSIGNMENT_OPERATORS",
			"BOOLEAN_UNARY_OPERATORS",
			"NUMBER_UNARY_OPERATORS",
			"STRING_UNARY_OPERATORS",
			"UNARY_OPERATORS",
			"INHERIT_KEYS",
			"BLOCK_SCOPED_SYMBOL",
			"NOT_LOCAL_BINDING",
			"VISITOR_KEYS",
			"ALIAS_KEYS",
			"FLIPPED_ALIAS_KEYS",
			"NODE_FIELDS",
			"BUILDER_KEYS",
			"DEPRECATED_KEYS",
			"NODE_PARENT_VALIDATIONS",
			"PLACEHOLDERS",
			"PLACEHOLDERS_ALIAS",
			"PLACEHOLDERS_FLIPPED_ALIAS",
			"TYPES",
			"isArrayExpression",
			"isAssignmentExpression",
			"isBinaryExpression",
			"isInterpreterDirective",
			"isDirective",
			"isDirectiveLiteral",
			"isBlockStatement",
			"isBreakStatement",
			"isCallExpression",
			"isCatchClause",
			"isConditionalExpression",
			"isContinueStatement",
			"isDebuggerStatement",
			"isDoWhileStatement",
			"isEmptyStatement",
			"isExpressionStatement",
			"isFile",
			"isForInStatement",
			"isForStatement",
			"isFunctionDeclaration",
			"isFunctionExpression",
			"isIdentifier",
			"isIfStatement",
			"isLabeledStatement",
			"isStringLiteral",
			"isNumericLiteral",
			"isNullLiteral",
			"isBooleanLiteral",
			"isRegExpLiteral",
			"isLogicalExpression",
			"isMemberExpression",
			"isNewExpression",
			"isProgram",
			"isObjectExpression",
			"isObjectMethod",
			"isObjectProperty",
			"isRestElement",
			"isReturnStatement",
			"isSequenceExpression",
			"isParenthesizedExpression",
			"isSwitchCase",
			"isSwitchStatement",
			"isThisExpression",
			"isThrowStatement",
			"isTryStatement",
			"isUnaryExpression",
			"isUpdateExpression",
			"isVariableDeclaration",
			"isVariableDeclarator",
			"isWhileStatement",
			"isWithStatement",
			"isAssignmentPattern",
			"isArrayPattern",
			"isArrowFunctionExpression",
			"isClassBody",
			"isClassExpression",
			"isClassDeclaration",
			"isExportAllDeclaration",
			"isExportDefaultDeclaration",
			"isExportNamedDeclaration",
			"isExportSpecifier",
			"isForOfStatement",
			"isImportDeclaration",
			"isImportDefaultSpecifier",
			"isImportNamespaceSpecifier",
			"isImportSpecifier",
			"isMetaProperty",
			"isClassMethod",
			"isObjectPattern",
			"isSpreadElement",
			"isSuper",
			"isTaggedTemplateExpression",
			"isTemplateElement",
			"isTemplateLiteral",
			"isYieldExpression",
			"isAwaitExpression",
			"isImport",
			"isBigIntLiteral",
			"isExportNamespaceSpecifier",
			"isOptionalMemberExpression",
			"isOptionalCallExpression",
			"isAnyTypeAnnotation",
			"isArrayTypeAnnotation",
			"isBooleanTypeAnnotation",
			"isBooleanLiteralTypeAnnotation",
			"isNullLiteralTypeAnnotation",
			"isClassImplements",
			"isDeclareClass",
			"isDeclareFunction",
			"isDeclareInterface",
			"isDeclareModule",
			"isDeclareModuleExports",
			"isDeclareTypeAlias",
			"isDeclareOpaqueType",
			"isDeclareVariable",
			"isDeclareExportDeclaration",
			"isDeclareExportAllDeclaration",
			"isDeclaredPredicate",
			"isExistsTypeAnnotation",
			"isFunctionTypeAnnotation",
			"isFunctionTypeParam",
			"isGenericTypeAnnotation",
			"isInferredPredicate",
			"isInterfaceExtends",
			"isInterfaceDeclaration",
			"isInterfaceTypeAnnotation",
			"isIntersectionTypeAnnotation",
			"isMixedTypeAnnotation",
			"isEmptyTypeAnnotation",
			"isNullableTypeAnnotation",
			"isNumberLiteralTypeAnnotation",
			"isNumberTypeAnnotation",
			"isObjectTypeAnnotation",
			"isObjectTypeInternalSlot",
			"isObjectTypeCallProperty",
			"isObjectTypeIndexer",
			"isObjectTypeProperty",
			"isObjectTypeSpreadProperty",
			"isOpaqueType",
			"isQualifiedTypeIdentifier",
			"isStringLiteralTypeAnnotation",
			"isStringTypeAnnotation",
			"isSymbolTypeAnnotation",
			"isThisTypeAnnotation",
			"isTupleTypeAnnotation",
			"isTypeofTypeAnnotation",
			"isTypeAlias",
			"isTypeAnnotation",
			"isTypeCastExpression",
			"isTypeParameter",
			"isTypeParameterDeclaration",
			"isTypeParameterInstantiation",
			"isUnionTypeAnnotation",
			"isVariance",
			"isVoidTypeAnnotation",
			"isEnumDeclaration",
			"isEnumBooleanBody",
			"isEnumNumberBody",
			"isEnumStringBody",
			"isEnumSymbolBody",
			"isEnumBooleanMember",
			"isEnumNumberMember",
			"isEnumStringMember",
			"isEnumDefaultedMember",
			"isJSXAttribute",
			"isJSXClosingElement",
			"isJSXElement",
			"isJSXEmptyExpression",
			"isJSXExpressionContainer",
			"isJSXSpreadChild",
			"isJSXIdentifier",
			"isJSXMemberExpression",
			"isJSXNamespacedName",
			"isJSXOpeningElement",
			"isJSXSpreadAttribute",
			"isJSXText",
			"isJSXFragment",
			"isJSXOpeningFragment",
			"isJSXClosingFragment",
			"isNoop",
			"isPlaceholder",
			"isV8IntrinsicIdentifier",
			"isArgumentPlaceholder",
			"isBindExpression",
			"isClassProperty",
			"isPipelineTopicExpression",
			"isPipelineBareFunction",
			"isPipelinePrimaryTopicReference",
			"isClassPrivateProperty",
			"isClassPrivateMethod",
			"isImportAttribute",
			"isDecorator",
			"isDoExpression",
			"isExportDefaultSpecifier",
			"isPrivateName",
			"isRecordExpression",
			"isTupleExpression",
			"isDecimalLiteral",
			"isTSParameterProperty",
			"isTSDeclareFunction",
			"isTSDeclareMethod",
			"isTSQualifiedName",
			"isTSCallSignatureDeclaration",
			"isTSConstructSignatureDeclaration",
			"isTSPropertySignature",
			"isTSMethodSignature",
			"isTSIndexSignature",
			"isTSAnyKeyword",
			"isTSBooleanKeyword",
			"isTSBigIntKeyword",
			"isTSNeverKeyword",
			"isTSNullKeyword",
			"isTSNumberKeyword",
			"isTSObjectKeyword",
			"isTSStringKeyword",
			"isTSSymbolKeyword",
			"isTSUndefinedKeyword",
			"isTSUnknownKeyword",
			"isTSVoidKeyword",
			"isTSThisType",
			"isTSFunctionType",
			"isTSConstructorType",
			"isTSTypeReference",
			"isTSTypePredicate",
			"isTSTypeQuery",
			"isTSTypeLiteral",
			"isTSArrayType",
			"isTSTupleType",
			"isTSOptionalType",
			"isTSRestType",
			"isTSNamedTupleMember",
			"isTSUnionType",
			"isTSIntersectionType",
			"isTSConditionalType",
			"isTSInferType",
			"isTSParenthesizedType",
			"isTSTypeOperator",
			"isTSIndexedAccessType",
			"isTSMappedType",
			"isTSLiteralType",
			"isTSExpressionWithTypeArguments",
			"isTSInterfaceDeclaration",
			"isTSInterfaceBody",
			"isTSTypeAliasDeclaration",
			"isTSAsExpression",
			"isTSTypeAssertion",
			"isTSEnumDeclaration",
			"isTSEnumMember",
			"isTSModuleDeclaration",
			"isTSModuleBlock",
			"isTSImportType",
			"isTSImportEqualsDeclaration",
			"isTSExternalModuleReference",
			"isTSNonNullExpression",
			"isTSExportAssignment",
			"isTSNamespaceExportDeclaration",
			"isTSTypeAnnotation",
			"isTSTypeParameterInstantiation",
			"isTSTypeParameterDeclaration",
			"isTSTypeParameter",
			"isExpression",
			"isBinary",
			"isScopable",
			"isBlockParent",
			"isBlock",
			"isStatement",
			"isTerminatorless",
			"isCompletionStatement",
			"isConditional",
			"isLoop",
			"isWhile",
			"isExpressionWrapper",
			"isFor",
			"isForXStatement",
			"isFunction",
			"isFunctionParent",
			"isPureish",
			"isDeclaration",
			"isPatternLike",
			"isLVal",
			"isTSEntityName",
			"isLiteral",
			"isUserWhitespacable",
			"isMethod",
			"isObjectMember",
			"isProperty",
			"isUnaryLike",
			"isPattern",
			"isClass",
			"isModuleDeclaration",
			"isExportDeclaration",
			"isModuleSpecifier",
			"isFlow",
			"isFlowType",
			"isFlowBaseAnnotation",
			"isFlowDeclaration",
			"isFlowPredicate",
			"isEnumBody",
			"isEnumMember",
			"isJSX",
			"isPrivate",
			"isTSTypeElement",
			"isTSType",
			"isTSBaseType",
			"isNumberLiteral",
			"isRegexLiteral",
			"isRestProperty",
			"isSpreadProperty"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "html-entities",
		"transpiled": true,
		"expectedNames": [
			"XmlEntities",
			"Html4Entities",
			"Html5Entities",
			"AllHtmlEntities"
		],
		"detectedNames": [
			"XmlEntities",
			"Html4Entities",
			"Html5Entities",
			"AllHtmlEntities"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cosmiconfig",
		"transpiled": true,
		"expectedNames": [
			"cosmiconfig",
			"cosmiconfigSync",
			"defaultLoaders"
		],
		"detectedNames": [
			"cosmiconfig",
			"cosmiconfigSync",
			"defaultLoaders"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "pino",
		"expectedNames": [
			"extreme",
			"destination",
			"final",
			"levels",
			"stdSerializers",
			"stdTimeFunctions",
			"symbols",
			"version"
		],
		"detectedNames": [],
		"missingNames": [
			"extreme",
			"destination",
			"final",
			"levels",
			"stdSerializers",
			"stdTimeFunctions",
			"symbols",
			"version"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "verror",
		"expectedNames": [
			"VError",
			"SError",
			"WError",
			"MultiError",
			"cause",
			"info",
			"findCauseByName",
			"hasCauseWithName",
			"fullStack",
			"errorFromList",
			"errorForEach"
		],
		"detectedNames": [],
		"missingNames": [
			"VError",
			"SError",
			"WError",
			"MultiError",
			"cause",
			"info",
			"findCauseByName",
			"hasCauseWithName",
			"fullStack",
			"errorFromList",
			"errorForEach"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-notify",
		"expectedNames": [
			"on",
			"onError",
			"logLevel",
			"logger",
			"withReporter"
		],
		"detectedNames": [
			"onError",
			"logLevel",
			"logger",
			"withReporter"
		],
		"missingNames": [
			"on"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "merge-stream",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "npm-run-all",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/preset-typescript",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "he",
		"expectedNames": [
			"version",
			"encode",
			"decode",
			"escape",
			"unescape"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"encode",
			"decode",
			"escape",
			"unescape"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "supports-color",
		"expectedNames": [
			"supportsColor",
			"stdout",
			"stderr"
		],
		"detectedNames": [
			"supportsColor",
			"stdout"
		],
		"missingNames": [
			"stderr"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vue-style-loader",
		"expectedNames": [
			"pitch"
		],
		"detectedNames": [
			"pitch"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "create-hash",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "touch",
		"expectedNames": [
			"touchSync",
			"sync",
			"ftouch",
			"ftouchSync"
		],
		"detectedNames": [
			"touchSync",
			"sync",
			"ftouch",
			"ftouchSync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "csv",
		"expectedNames": [
			"generate",
			"parse",
			"transform",
			"stringify"
		],
		"detectedNames": [
			"generate"
		],
		"missingNames": [
			"parse",
			"transform",
			"stringify"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.camelcase",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "log-update",
		"expectedNames": [
			"clear",
			"done",
			"stderr",
			"create"
		],
		"detectedNames": [
			"stderr",
			"create"
		],
		"missingNames": [
			"clear",
			"done"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.isplainobject",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-conflict",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mathjs",
		"transpiled": true,
		"expectedNames": [
			"config",
			"IndexError",
			"DimensionError",
			"ArgumentsError",
			"create",
			"factory",
			"ResultSet",
			"Complex",
			"Range",
			"_false",
			"_null",
			"_true",
			"BigNumber",
			"Matrix",
			"replacer",
			"i",
			"LN10",
			"LOG10E",
			"_NaN",
			"pi",
			"SQRT1_2",
			"tau",
			"efimovFactor",
			"fineStructure",
			"sackurTetrode",
			"weakMixingAngle",
			"Fraction",
			"e",
			"_Infinity",
			"LOG2E",
			"version",
			"DenseMatrix",
			"phi",
			"typed",
			"isInteger",
			"isNumeric",
			"isPositive",
			"isNaN",
			"equalScalar",
			"number",
			"boolean",
			"complex",
			"splitUnit",
			"unaryPlus",
			"apply",
			"cube",
			"expm1",
			"log10",
			"multiplyScalar",
			"sign",
			"square",
			"bitNot",
			"arg",
			"im",
			"not",
			"filter",
			"forEach",
			"map",
			"erf",
			"format",
			"isPrime",
			"acos",
			"acot",
			"acsc",
			"asec",
			"asin",
			"atan",
			"atanh",
			"cosh",
			"coth",
			"csch",
			"sech",
			"sinh",
			"tanh",
			"combinations",
			"pickRandom",
			"randomInt",
			"LN2",
			"clone",
			"hasNumericValue",
			"typeOf",
			"string",
			"fraction",
			"unaryMinus",
			"addScalar",
			"exp",
			"log2",
			"sqrt",
			"conj",
			"getMatrixDataType",
			"mode",
			"print",
			"acosh",
			"acsch",
			"asinh",
			"cos",
			"csc",
			"sin",
			"combinationsWithRep",
			"random",
			"SQRT2",
			"isNegative",
			"SparseMatrix",
			"matrix",
			"cbrt",
			"gcd",
			"mod",
			"nthRoot",
			"xgcd",
			"bitAnd",
			"bitXor",
			"or",
			"concat",
			"diag",
			"identity",
			"ones",
			"reshape",
			"size",
			"subset",
			"zeros",
			"to",
			"round",
			"leftShift",
			"rightLogShift",
			"compare",
			"compareText",
			"smaller",
			"larger",
			"unequal",
			"ImmutableDenseMatrix",
			"FibonacciHeap",
			"sparse",
			"acoth",
			"atan2",
			"sec",
			"add",
			"dot",
			"composition",
			"isZero",
			"abs",
			"floor",
			"multiply",
			"dotMultiply",
			"re",
			"flatten",
			"resize",
			"squeeze",
			"pow",
			"dotPow",
			"rightArithShift",
			"compareNatural",
			"equalText",
			"largerEq",
			"partitionSelect",
			"Index",
			"asech",
			"tan",
			"setDifference",
			"setIntersect",
			"setMultiplicity",
			"setSize",
			"trace",
			"quantileSeq",
			"gamma",
			"bignumber",
			"lcm",
			"bitOr",
			"kron",
			"transpose",
			"numeric",
			"and",
			"smallerEq",
			"sort",
			"min",
			"cot",
			"setDistinct",
			"setPowerset",
			"index",
			"sum",
			"factorial",
			"permutations",
			"ceil",
			"subtract",
			"cross",
			"range",
			"ctranspose",
			"divideScalar",
			"nthRoots",
			"lsolve",
			"equal",
			"max",
			"setCartesian",
			"setSymDifference",
			"hypot",
			"qr",
			"distance",
			"stirlingS2",
			"catalan",
			"fix",
			"column",
			"row",
			"log",
			"dotDivide",
			"deepEqual",
			"Unit",
			"createUnit",
			"setUnion",
			"slu",
			"intersect",
			"bellNumbers",
			"atomicMass",
			"bohrMagneton",
			"boltzmann",
			"conductanceQuantum",
			"deuteronMass",
			"electronMass",
			"faraday",
			"firstRadiation",
			"gravitationConstant",
			"hartreeEnergy",
			"klitzing",
			"magneticConstant",
			"molarMass",
			"molarPlanckConstant",
			"neutronMass",
			"planckCharge",
			"planckLength",
			"planckTemperature",
			"protonMass",
			"reducedPlanckConstant",
			"secondRadiation",
			"stefanBoltzmann",
			"vacuumImpedance",
			"xor",
			"prod",
			"usolve",
			"unit",
			"avogadro",
			"classicalElectronRadius",
			"electricConstant",
			"fermiCoupling",
			"gravity",
			"loschmidt",
			"molarMassC12",
			"nuclearMagneton",
			"planckMass",
			"quantumOfCirculation",
			"speedOfLight",
			"wienDisplacement",
			"diff",
			"Spa",
			"lup",
			"det",
			"bohrRadius",
			"elementaryCharge",
			"inverseConductanceQuantum",
			"molarVolume",
			"planckTime",
			"thomsonCrossSection",
			"log1p",
			"lusolve",
			"inv",
			"expm",
			"divide",
			"median",
			"variance",
			"kldivergence",
			"gasConstant",
			"planckConstant",
			"setIsSubset",
			"sqrtm",
			"mad",
			"multinomial",
			"coulomb",
			"rydberg",
			"mean",
			"eigs",
			"magneticFluxQuantum",
			"norm",
			"std",
			"docs",
			"Node",
			"ArrayNode",
			"BlockNode",
			"ConstantNode",
			"ObjectNode",
			"ParenthesisNode",
			"RelationalNode",
			"Chain",
			"reviver",
			"ConditionalNode",
			"OperatorNode",
			"RangeNode",
			"FunctionAssignmentNode",
			"chain",
			"AccessorNode",
			"IndexNode",
			"AssignmentNode",
			"SymbolNode",
			"FunctionNode",
			"parse",
			"evaluate",
			"Help",
			"compile",
			"simplify",
			"rationalize",
			"Parser",
			"help",
			"parser",
			"derivative",
			"isAccessorNode",
			"isArray",
			"isArrayNode",
			"isAssignmentNode",
			"isBigNumber",
			"isBlockNode",
			"isBoolean",
			"isChain",
			"isCollection",
			"isComplex",
			"isConditionalNode",
			"isConstantNode",
			"isDate",
			"isDenseMatrix",
			"isFraction",
			"isFunction",
			"isFunctionAssignmentNode",
			"isFunctionNode",
			"isHelp",
			"isIndex",
			"isIndexNode",
			"isMatrix",
			"isNode",
			"isNull",
			"isNumber",
			"isString",
			"isUndefined",
			"isObject",
			"isObjectNode",
			"isOperatorNode",
			"isParenthesisNode",
			"isRange",
			"isRangeNode",
			"isRegExp",
			"isResultSet",
			"isSparseMatrix",
			"isSymbolNode",
			"isUnit",
			"typedDependencies",
			"ResultSetDependencies",
			"BigNumberDependencies",
			"ComplexDependencies",
			"FractionDependencies",
			"RangeDependencies",
			"MatrixDependencies",
			"DenseMatrixDependencies",
			"cloneDependencies",
			"isIntegerDependencies",
			"isNegativeDependencies",
			"isNumericDependencies",
			"hasNumericValueDependencies",
			"isPositiveDependencies",
			"isZeroDependencies",
			"isNaNDependencies",
			"typeOfDependencies",
			"equalScalarDependencies",
			"SparseMatrixDependencies",
			"numberDependencies",
			"stringDependencies",
			"booleanDependencies",
			"bignumberDependencies",
			"complexDependencies",
			"fractionDependencies",
			"matrixDependencies",
			"splitUnitDependencies",
			"unaryMinusDependencies",
			"unaryPlusDependencies",
			"absDependencies",
			"applyDependencies",
			"addScalarDependencies",
			"cbrtDependencies",
			"ceilDependencies",
			"cubeDependencies",
			"expDependencies",
			"expm1Dependencies",
			"fixDependencies",
			"floorDependencies",
			"gcdDependencies",
			"lcmDependencies",
			"log10Dependencies",
			"log2Dependencies",
			"modDependencies",
			"multiplyScalarDependencies",
			"multiplyDependencies",
			"nthRootDependencies",
			"signDependencies",
			"sqrtDependencies",
			"squareDependencies",
			"subtractDependencies",
			"xgcdDependencies",
			"dotMultiplyDependencies",
			"bitAndDependencies",
			"bitNotDependencies",
			"bitOrDependencies",
			"bitXorDependencies",
			"argDependencies",
			"conjDependencies",
			"imDependencies",
			"reDependencies",
			"notDependencies",
			"orDependencies",
			"xorDependencies",
			"concatDependencies",
			"columnDependencies",
			"crossDependencies",
			"diagDependencies",
			"filterDependencies",
			"flattenDependencies",
			"forEachDependencies",
			"getMatrixDataTypeDependencies",
			"identityDependencies",
			"kronDependencies",
			"mapDependencies",
			"diffDependencies",
			"onesDependencies",
			"rangeDependencies",
			"reshapeDependencies",
			"resizeDependencies",
			"rowDependencies",
			"sizeDependencies",
			"squeezeDependencies",
			"subsetDependencies",
			"transposeDependencies",
			"ctransposeDependencies",
			"zerosDependencies",
			"erfDependencies",
			"modeDependencies",
			"prodDependencies",
			"formatDependencies",
			"printDependencies",
			"toDependencies",
			"isPrimeDependencies",
			"numericDependencies",
			"divideScalarDependencies",
			"powDependencies",
			"roundDependencies",
			"logDependencies",
			"log1pDependencies",
			"nthRootsDependencies",
			"dotPowDependencies",
			"dotDivideDependencies",
			"lsolveDependencies",
			"usolveDependencies",
			"leftShiftDependencies",
			"rightArithShiftDependencies",
			"rightLogShiftDependencies",
			"andDependencies",
			"compareDependencies",
			"compareNaturalDependencies",
			"compareTextDependencies",
			"equalDependencies",
			"equalTextDependencies",
			"smallerDependencies",
			"smallerEqDependencies",
			"largerDependencies",
			"largerEqDependencies",
			"deepEqualDependencies",
			"unequalDependencies",
			"partitionSelectDependencies",
			"sortDependencies",
			"maxDependencies",
			"minDependencies",
			"ImmutableDenseMatrixDependencies",
			"IndexDependencies",
			"FibonacciHeapDependencies",
			"SpaDependencies",
			"UnitDependencies",
			"unitDependencies",
			"sparseDependencies",
			"createUnitDependencies",
			"acosDependencies",
			"acoshDependencies",
			"acotDependencies",
			"acothDependencies",
			"acscDependencies",
			"acschDependencies",
			"asecDependencies",
			"asechDependencies",
			"asinDependencies",
			"asinhDependencies",
			"atanDependencies",
			"atan2Dependencies",
			"atanhDependencies",
			"cosDependencies",
			"coshDependencies",
			"cotDependencies",
			"cothDependencies",
			"cscDependencies",
			"cschDependencies",
			"secDependencies",
			"sechDependencies",
			"sinDependencies",
			"sinhDependencies",
			"tanDependencies",
			"tanhDependencies",
			"setCartesianDependencies",
			"setDifferenceDependencies",
			"setDistinctDependencies",
			"setIntersectDependencies",
			"setIsSubsetDependencies",
			"setMultiplicityDependencies",
			"setPowersetDependencies",
			"setSizeDependencies",
			"setSymDifferenceDependencies",
			"setUnionDependencies",
			"addDependencies",
			"hypotDependencies",
			"normDependencies",
			"dotDependencies",
			"traceDependencies",
			"indexDependencies",
			"NodeDependencies",
			"AccessorNodeDependencies",
			"ArrayNodeDependencies",
			"AssignmentNodeDependencies",
			"BlockNodeDependencies",
			"ConditionalNodeDependencies",
			"ConstantNodeDependencies",
			"FunctionAssignmentNodeDependencies",
			"IndexNodeDependencies",
			"ObjectNodeDependencies",
			"OperatorNodeDependencies",
			"ParenthesisNodeDependencies",
			"RangeNodeDependencies",
			"RelationalNodeDependencies",
			"SymbolNodeDependencies",
			"FunctionNodeDependencies",
			"parseDependencies",
			"compileDependencies",
			"evaluateDependencies",
			"ParserDependencies",
			"parserDependencies",
			"lupDependencies",
			"qrDependencies",
			"sluDependencies",
			"lusolveDependencies",
			"HelpDependencies",
			"ChainDependencies",
			"helpDependencies",
			"chainDependencies",
			"detDependencies",
			"invDependencies",
			"eigsDependencies",
			"expmDependencies",
			"sqrtmDependencies",
			"divideDependencies",
			"distanceDependencies",
			"intersectDependencies",
			"sumDependencies",
			"meanDependencies",
			"medianDependencies",
			"madDependencies",
			"varianceDependencies",
			"quantileSeqDependencies",
			"stdDependencies",
			"combinationsDependencies",
			"combinationsWithRepDependencies",
			"gammaDependencies",
			"factorialDependencies",
			"kldivergenceDependencies",
			"multinomialDependencies",
			"permutationsDependencies",
			"pickRandomDependencies",
			"randomDependencies",
			"randomIntDependencies",
			"stirlingS2Dependencies",
			"bellNumbersDependencies",
			"catalanDependencies",
			"compositionDependencies",
			"simplifyDependencies",
			"derivativeDependencies",
			"rationalizeDependencies",
			"reviverDependencies",
			"replacerDependencies",
			"eDependencies",
			"EDependencies",
			"falseDependencies",
			"iDependencies",
			"InfinityDependencies",
			"LN10Dependencies",
			"LN2Dependencies",
			"LOG10EDependencies",
			"LOG2EDependencies",
			"NaNDependencies",
			"nullDependencies",
			"phiDependencies",
			"piDependencies",
			"PIDependencies",
			"SQRT1_2Dependencies",
			"SQRT2Dependencies",
			"tauDependencies",
			"trueDependencies",
			"versionDependencies",
			"atomicMassDependencies",
			"avogadroDependencies",
			"bohrMagnetonDependencies",
			"bohrRadiusDependencies",
			"boltzmannDependencies",
			"classicalElectronRadiusDependencies",
			"conductanceQuantumDependencies",
			"coulombDependencies",
			"deuteronMassDependencies",
			"efimovFactorDependencies",
			"electricConstantDependencies",
			"electronMassDependencies",
			"elementaryChargeDependencies",
			"faradayDependencies",
			"fermiCouplingDependencies",
			"fineStructureDependencies",
			"firstRadiationDependencies",
			"gasConstantDependencies",
			"gravitationConstantDependencies",
			"gravityDependencies",
			"hartreeEnergyDependencies",
			"inverseConductanceQuantumDependencies",
			"klitzingDependencies",
			"loschmidtDependencies",
			"magneticConstantDependencies",
			"magneticFluxQuantumDependencies",
			"molarMassDependencies",
			"molarMassC12Dependencies",
			"molarPlanckConstantDependencies",
			"molarVolumeDependencies",
			"neutronMassDependencies",
			"nuclearMagnetonDependencies",
			"planckChargeDependencies",
			"planckConstantDependencies",
			"planckLengthDependencies",
			"planckMassDependencies",
			"planckTemperatureDependencies",
			"planckTimeDependencies",
			"protonMassDependencies",
			"quantumOfCirculationDependencies",
			"reducedPlanckConstantDependencies",
			"rydbergDependencies",
			"sackurTetrodeDependencies",
			"secondRadiationDependencies",
			"speedOfLightDependencies",
			"stefanBoltzmannDependencies",
			"thomsonCrossSectionDependencies",
			"vacuumImpedanceDependencies",
			"weakMixingAngleDependencies",
			"wienDisplacementDependencies",
			"applyTransformDependencies",
			"columnTransformDependencies",
			"filterTransformDependencies",
			"forEachTransformDependencies",
			"indexTransformDependencies",
			"mapTransformDependencies",
			"maxTransformDependencies",
			"meanTransformDependencies",
			"minTransformDependencies",
			"rangeTransformDependencies",
			"rowTransformDependencies",
			"subsetTransformDependencies",
			"concatTransformDependencies",
			"diffTransformDependencies",
			"stdTransformDependencies",
			"sumTransformDependencies",
			"varianceTransformDependencies",
			"all",
			"createTyped",
			"createResultSet",
			"createBigNumberClass",
			"createComplexClass",
			"createFractionClass",
			"createRangeClass",
			"createMatrixClass",
			"createDenseMatrixClass",
			"createClone",
			"createIsInteger",
			"createIsNegative",
			"createIsNumeric",
			"createHasNumericValue",
			"createIsPositive",
			"createIsZero",
			"createIsNaN",
			"createTypeOf",
			"createEqualScalar",
			"createSparseMatrixClass",
			"createNumber",
			"createString",
			"createBoolean",
			"createBignumber",
			"createComplex",
			"createFraction",
			"createMatrix",
			"createSplitUnit",
			"createUnaryMinus",
			"createUnaryPlus",
			"createAbs",
			"createApply",
			"createAddScalar",
			"createCbrt",
			"createCeil",
			"createCube",
			"createExp",
			"createExpm1",
			"createFix",
			"createFloor",
			"createGcd",
			"createLcm",
			"createLog10",
			"createLog2",
			"createMod",
			"createMultiplyScalar",
			"createMultiply",
			"createNthRoot",
			"createSign",
			"createSqrt",
			"createSquare",
			"createSubtract",
			"createXgcd",
			"createDotMultiply",
			"createBitAnd",
			"createBitNot",
			"createBitOr",
			"createBitXor",
			"createArg",
			"createConj",
			"createIm",
			"createRe",
			"createNot",
			"createOr",
			"createXor",
			"createConcat",
			"createColumn",
			"createCross",
			"createDiag",
			"createFilter",
			"createFlatten",
			"createForEach",
			"createGetMatrixDataType",
			"createIdentity",
			"createKron",
			"createMap",
			"createDiff",
			"createOnes",
			"createRange",
			"createReshape",
			"createResize",
			"createRow",
			"createSize",
			"createSqueeze",
			"createSubset",
			"createTranspose",
			"createCtranspose",
			"createZeros",
			"createErf",
			"createMode",
			"createProd",
			"createFormat",
			"createPrint",
			"createTo",
			"createIsPrime",
			"createNumeric",
			"createDivideScalar",
			"createPow",
			"createRound",
			"createLog",
			"createLog1p",
			"createNthRoots",
			"createDotPow",
			"createDotDivide",
			"createLsolve",
			"createUsolve",
			"createLeftShift",
			"createRightArithShift",
			"createRightLogShift",
			"createAnd",
			"createCompare",
			"createCompareNatural",
			"createCompareText",
			"createEqual",
			"createEqualText",
			"createSmaller",
			"createSmallerEq",
			"createLarger",
			"createLargerEq",
			"createDeepEqual",
			"createUnequal",
			"createPartitionSelect",
			"createSort",
			"createMax",
			"createMin",
			"createImmutableDenseMatrixClass",
			"createIndexClass",
			"createFibonacciHeapClass",
			"createSpaClass",
			"createUnitClass",
			"createUnitFunction",
			"createSparse",
			"createCreateUnit",
			"createAcos",
			"createAcosh",
			"createAcot",
			"createAcoth",
			"createAcsc",
			"createAcsch",
			"createAsec",
			"createAsech",
			"createAsin",
			"createAsinh",
			"createAtan",
			"createAtan2",
			"createAtanh",
			"createCos",
			"createCosh",
			"createCot",
			"createCoth",
			"createCsc",
			"createCsch",
			"createSec",
			"createSech",
			"createSin",
			"createSinh",
			"createTan",
			"createTanh",
			"createSetCartesian",
			"createSetDifference",
			"createSetDistinct",
			"createSetIntersect",
			"createSetIsSubset",
			"createSetMultiplicity",
			"createSetPowerset",
			"createSetSize",
			"createSetSymDifference",
			"createSetUnion",
			"createAdd",
			"createHypot",
			"createNorm",
			"createDot",
			"createTrace",
			"createIndex",
			"createNode",
			"createAccessorNode",
			"createArrayNode",
			"createAssignmentNode",
			"createBlockNode",
			"createConditionalNode",
			"createConstantNode",
			"createFunctionAssignmentNode",
			"createIndexNode",
			"createObjectNode",
			"createOperatorNode",
			"createParenthesisNode",
			"createRangeNode",
			"createRelationalNode",
			"createSymbolNode",
			"createFunctionNode",
			"createParse",
			"createCompile",
			"createEvaluate",
			"createParserClass",
			"createParser",
			"createLup",
			"createQr",
			"createSlu",
			"createLusolve",
			"createHelpClass",
			"createChainClass",
			"createHelp",
			"createChain",
			"createDet",
			"createInv",
			"createEigs",
			"createExpm",
			"createSqrtm",
			"createDivide",
			"createDistance",
			"createIntersect",
			"createSum",
			"createMean",
			"createMedian",
			"createMad",
			"createVariance",
			"createQuantileSeq",
			"createStd",
			"createCombinations",
			"createCombinationsWithRep",
			"createGamma",
			"createFactorial",
			"createKldivergence",
			"createMultinomial",
			"createPermutations",
			"createPickRandom",
			"createRandom",
			"createRandomInt",
			"createStirlingS2",
			"createBellNumbers",
			"createCatalan",
			"createComposition",
			"createSimplify",
			"createDerivative",
			"createRationalize",
			"createReviver",
			"createReplacer",
			"createE",
			"createUppercaseE",
			"createFalse",
			"createI",
			"createInfinity",
			"createLN10",
			"createLN2",
			"createLOG10E",
			"createLOG2E",
			"createNaN",
			"createNull",
			"createPhi",
			"createPi",
			"createUppercasePi",
			"createSQRT1_2",
			"createSQRT2",
			"createTau",
			"createTrue",
			"createVersion",
			"createAtomicMass",
			"createAvogadro",
			"createBohrMagneton",
			"createBohrRadius",
			"createBoltzmann",
			"createClassicalElectronRadius",
			"createConductanceQuantum",
			"createCoulomb",
			"createDeuteronMass",
			"createEfimovFactor",
			"createElectricConstant",
			"createElectronMass",
			"createElementaryCharge",
			"createFaraday",
			"createFermiCoupling",
			"createFineStructure",
			"createFirstRadiation",
			"createGasConstant",
			"createGravitationConstant",
			"createGravity",
			"createHartreeEnergy",
			"createInverseConductanceQuantum",
			"createKlitzing",
			"createLoschmidt",
			"createMagneticConstant",
			"createMagneticFluxQuantum",
			"createMolarMass",
			"createMolarMassC12",
			"createMolarPlanckConstant",
			"createMolarVolume",
			"createNeutronMass",
			"createNuclearMagneton",
			"createPlanckCharge",
			"createPlanckConstant",
			"createPlanckLength",
			"createPlanckMass",
			"createPlanckTemperature",
			"createPlanckTime",
			"createProtonMass",
			"createQuantumOfCirculation",
			"createReducedPlanckConstant",
			"createRydberg",
			"createSackurTetrode",
			"createSecondRadiation",
			"createSpeedOfLight",
			"createStefanBoltzmann",
			"createThomsonCrossSection",
			"createVacuumImpedance",
			"createWeakMixingAngle",
			"createWienDisplacement",
			"createApplyTransform",
			"createColumnTransform",
			"createFilterTransform",
			"createForEachTransform",
			"createIndexTransform",
			"createMapTransform",
			"createMaxTransform",
			"createMeanTransform",
			"createMinTransform",
			"createRangeTransform",
			"createRowTransform",
			"createSubsetTransform",
			"createConcatTransform",
			"createDiffTransform",
			"createStdTransform",
			"createSumTransform",
			"createVarianceTransform"
		],
		"detectedNames": [
			"config",
			"IndexError",
			"DimensionError",
			"ArgumentsError",
			"create",
			"factory"
		],
		"missingNames": [
			"ResultSet",
			"Complex",
			"Range",
			"_false",
			"_null",
			"_true",
			"BigNumber",
			"Matrix",
			"replacer",
			"i",
			"LN10",
			"LOG10E",
			"_NaN",
			"pi",
			"SQRT1_2",
			"tau",
			"efimovFactor",
			"fineStructure",
			"sackurTetrode",
			"weakMixingAngle",
			"Fraction",
			"e",
			"_Infinity",
			"LOG2E",
			"version",
			"DenseMatrix",
			"phi",
			"typed",
			"isInteger",
			"isNumeric",
			"isPositive",
			"isNaN",
			"equalScalar",
			"number",
			"boolean",
			"complex",
			"splitUnit",
			"unaryPlus",
			"apply",
			"cube",
			"expm1",
			"log10",
			"multiplyScalar",
			"sign",
			"square",
			"bitNot",
			"arg",
			"im",
			"not",
			"filter",
			"forEach",
			"map",
			"erf",
			"format",
			"isPrime",
			"acos",
			"acot",
			"acsc",
			"asec",
			"asin",
			"atan",
			"atanh",
			"cosh",
			"coth",
			"csch",
			"sech",
			"sinh",
			"tanh",
			"combinations",
			"pickRandom",
			"randomInt",
			"LN2",
			"clone",
			"hasNumericValue",
			"typeOf",
			"string",
			"fraction",
			"unaryMinus",
			"addScalar",
			"exp",
			"log2",
			"sqrt",
			"conj",
			"getMatrixDataType",
			"mode",
			"print",
			"acosh",
			"acsch",
			"asinh",
			"cos",
			"csc",
			"sin",
			"combinationsWithRep",
			"random",
			"SQRT2",
			"isNegative",
			"SparseMatrix",
			"matrix",
			"cbrt",
			"gcd",
			"mod",
			"nthRoot",
			"xgcd",
			"bitAnd",
			"bitXor",
			"or",
			"concat",
			"diag",
			"identity",
			"ones",
			"reshape",
			"size",
			"subset",
			"zeros",
			"to",
			"round",
			"leftShift",
			"rightLogShift",
			"compare",
			"compareText",
			"smaller",
			"larger",
			"unequal",
			"ImmutableDenseMatrix",
			"FibonacciHeap",
			"sparse",
			"acoth",
			"atan2",
			"sec",
			"add",
			"dot",
			"composition",
			"isZero",
			"abs",
			"floor",
			"multiply",
			"dotMultiply",
			"re",
			"flatten",
			"resize",
			"squeeze",
			"pow",
			"dotPow",
			"rightArithShift",
			"compareNatural",
			"equalText",
			"largerEq",
			"partitionSelect",
			"Index",
			"asech",
			"tan",
			"setDifference",
			"setIntersect",
			"setMultiplicity",
			"setSize",
			"trace",
			"quantileSeq",
			"gamma",
			"bignumber",
			"lcm",
			"bitOr",
			"kron",
			"transpose",
			"numeric",
			"and",
			"smallerEq",
			"sort",
			"min",
			"cot",
			"setDistinct",
			"setPowerset",
			"index",
			"sum",
			"factorial",
			"permutations",
			"ceil",
			"subtract",
			"cross",
			"range",
			"ctranspose",
			"divideScalar",
			"nthRoots",
			"lsolve",
			"equal",
			"max",
			"setCartesian",
			"setSymDifference",
			"hypot",
			"qr",
			"distance",
			"stirlingS2",
			"catalan",
			"fix",
			"column",
			"row",
			"log",
			"dotDivide",
			"deepEqual",
			"Unit",
			"createUnit",
			"setUnion",
			"slu",
			"intersect",
			"bellNumbers",
			"atomicMass",
			"bohrMagneton",
			"boltzmann",
			"conductanceQuantum",
			"deuteronMass",
			"electronMass",
			"faraday",
			"firstRadiation",
			"gravitationConstant",
			"hartreeEnergy",
			"klitzing",
			"magneticConstant",
			"molarMass",
			"molarPlanckConstant",
			"neutronMass",
			"planckCharge",
			"planckLength",
			"planckTemperature",
			"protonMass",
			"reducedPlanckConstant",
			"secondRadiation",
			"stefanBoltzmann",
			"vacuumImpedance",
			"xor",
			"prod",
			"usolve",
			"unit",
			"avogadro",
			"classicalElectronRadius",
			"electricConstant",
			"fermiCoupling",
			"gravity",
			"loschmidt",
			"molarMassC12",
			"nuclearMagneton",
			"planckMass",
			"quantumOfCirculation",
			"speedOfLight",
			"wienDisplacement",
			"diff",
			"Spa",
			"lup",
			"det",
			"bohrRadius",
			"elementaryCharge",
			"inverseConductanceQuantum",
			"molarVolume",
			"planckTime",
			"thomsonCrossSection",
			"log1p",
			"lusolve",
			"inv",
			"expm",
			"divide",
			"median",
			"variance",
			"kldivergence",
			"gasConstant",
			"planckConstant",
			"setIsSubset",
			"sqrtm",
			"mad",
			"multinomial",
			"coulomb",
			"rydberg",
			"mean",
			"eigs",
			"magneticFluxQuantum",
			"norm",
			"std",
			"docs",
			"Node",
			"ArrayNode",
			"BlockNode",
			"ConstantNode",
			"ObjectNode",
			"ParenthesisNode",
			"RelationalNode",
			"Chain",
			"reviver",
			"ConditionalNode",
			"OperatorNode",
			"RangeNode",
			"FunctionAssignmentNode",
			"chain",
			"AccessorNode",
			"IndexNode",
			"AssignmentNode",
			"SymbolNode",
			"FunctionNode",
			"parse",
			"evaluate",
			"Help",
			"compile",
			"simplify",
			"rationalize",
			"Parser",
			"help",
			"parser",
			"derivative",
			"isAccessorNode",
			"isArray",
			"isArrayNode",
			"isAssignmentNode",
			"isBigNumber",
			"isBlockNode",
			"isBoolean",
			"isChain",
			"isCollection",
			"isComplex",
			"isConditionalNode",
			"isConstantNode",
			"isDate",
			"isDenseMatrix",
			"isFraction",
			"isFunction",
			"isFunctionAssignmentNode",
			"isFunctionNode",
			"isHelp",
			"isIndex",
			"isIndexNode",
			"isMatrix",
			"isNode",
			"isNull",
			"isNumber",
			"isString",
			"isUndefined",
			"isObject",
			"isObjectNode",
			"isOperatorNode",
			"isParenthesisNode",
			"isRange",
			"isRangeNode",
			"isRegExp",
			"isResultSet",
			"isSparseMatrix",
			"isSymbolNode",
			"isUnit",
			"typedDependencies",
			"ResultSetDependencies",
			"BigNumberDependencies",
			"ComplexDependencies",
			"FractionDependencies",
			"RangeDependencies",
			"MatrixDependencies",
			"DenseMatrixDependencies",
			"cloneDependencies",
			"isIntegerDependencies",
			"isNegativeDependencies",
			"isNumericDependencies",
			"hasNumericValueDependencies",
			"isPositiveDependencies",
			"isZeroDependencies",
			"isNaNDependencies",
			"typeOfDependencies",
			"equalScalarDependencies",
			"SparseMatrixDependencies",
			"numberDependencies",
			"stringDependencies",
			"booleanDependencies",
			"bignumberDependencies",
			"complexDependencies",
			"fractionDependencies",
			"matrixDependencies",
			"splitUnitDependencies",
			"unaryMinusDependencies",
			"unaryPlusDependencies",
			"absDependencies",
			"applyDependencies",
			"addScalarDependencies",
			"cbrtDependencies",
			"ceilDependencies",
			"cubeDependencies",
			"expDependencies",
			"expm1Dependencies",
			"fixDependencies",
			"floorDependencies",
			"gcdDependencies",
			"lcmDependencies",
			"log10Dependencies",
			"log2Dependencies",
			"modDependencies",
			"multiplyScalarDependencies",
			"multiplyDependencies",
			"nthRootDependencies",
			"signDependencies",
			"sqrtDependencies",
			"squareDependencies",
			"subtractDependencies",
			"xgcdDependencies",
			"dotMultiplyDependencies",
			"bitAndDependencies",
			"bitNotDependencies",
			"bitOrDependencies",
			"bitXorDependencies",
			"argDependencies",
			"conjDependencies",
			"imDependencies",
			"reDependencies",
			"notDependencies",
			"orDependencies",
			"xorDependencies",
			"concatDependencies",
			"columnDependencies",
			"crossDependencies",
			"diagDependencies",
			"filterDependencies",
			"flattenDependencies",
			"forEachDependencies",
			"getMatrixDataTypeDependencies",
			"identityDependencies",
			"kronDependencies",
			"mapDependencies",
			"diffDependencies",
			"onesDependencies",
			"rangeDependencies",
			"reshapeDependencies",
			"resizeDependencies",
			"rowDependencies",
			"sizeDependencies",
			"squeezeDependencies",
			"subsetDependencies",
			"transposeDependencies",
			"ctransposeDependencies",
			"zerosDependencies",
			"erfDependencies",
			"modeDependencies",
			"prodDependencies",
			"formatDependencies",
			"printDependencies",
			"toDependencies",
			"isPrimeDependencies",
			"numericDependencies",
			"divideScalarDependencies",
			"powDependencies",
			"roundDependencies",
			"logDependencies",
			"log1pDependencies",
			"nthRootsDependencies",
			"dotPowDependencies",
			"dotDivideDependencies",
			"lsolveDependencies",
			"usolveDependencies",
			"leftShiftDependencies",
			"rightArithShiftDependencies",
			"rightLogShiftDependencies",
			"andDependencies",
			"compareDependencies",
			"compareNaturalDependencies",
			"compareTextDependencies",
			"equalDependencies",
			"equalTextDependencies",
			"smallerDependencies",
			"smallerEqDependencies",
			"largerDependencies",
			"largerEqDependencies",
			"deepEqualDependencies",
			"unequalDependencies",
			"partitionSelectDependencies",
			"sortDependencies",
			"maxDependencies",
			"minDependencies",
			"ImmutableDenseMatrixDependencies",
			"IndexDependencies",
			"FibonacciHeapDependencies",
			"SpaDependencies",
			"UnitDependencies",
			"unitDependencies",
			"sparseDependencies",
			"createUnitDependencies",
			"acosDependencies",
			"acoshDependencies",
			"acotDependencies",
			"acothDependencies",
			"acscDependencies",
			"acschDependencies",
			"asecDependencies",
			"asechDependencies",
			"asinDependencies",
			"asinhDependencies",
			"atanDependencies",
			"atan2Dependencies",
			"atanhDependencies",
			"cosDependencies",
			"coshDependencies",
			"cotDependencies",
			"cothDependencies",
			"cscDependencies",
			"cschDependencies",
			"secDependencies",
			"sechDependencies",
			"sinDependencies",
			"sinhDependencies",
			"tanDependencies",
			"tanhDependencies",
			"setCartesianDependencies",
			"setDifferenceDependencies",
			"setDistinctDependencies",
			"setIntersectDependencies",
			"setIsSubsetDependencies",
			"setMultiplicityDependencies",
			"setPowersetDependencies",
			"setSizeDependencies",
			"setSymDifferenceDependencies",
			"setUnionDependencies",
			"addDependencies",
			"hypotDependencies",
			"normDependencies",
			"dotDependencies",
			"traceDependencies",
			"indexDependencies",
			"NodeDependencies",
			"AccessorNodeDependencies",
			"ArrayNodeDependencies",
			"AssignmentNodeDependencies",
			"BlockNodeDependencies",
			"ConditionalNodeDependencies",
			"ConstantNodeDependencies",
			"FunctionAssignmentNodeDependencies",
			"IndexNodeDependencies",
			"ObjectNodeDependencies",
			"OperatorNodeDependencies",
			"ParenthesisNodeDependencies",
			"RangeNodeDependencies",
			"RelationalNodeDependencies",
			"SymbolNodeDependencies",
			"FunctionNodeDependencies",
			"parseDependencies",
			"compileDependencies",
			"evaluateDependencies",
			"ParserDependencies",
			"parserDependencies",
			"lupDependencies",
			"qrDependencies",
			"sluDependencies",
			"lusolveDependencies",
			"HelpDependencies",
			"ChainDependencies",
			"helpDependencies",
			"chainDependencies",
			"detDependencies",
			"invDependencies",
			"eigsDependencies",
			"expmDependencies",
			"sqrtmDependencies",
			"divideDependencies",
			"distanceDependencies",
			"intersectDependencies",
			"sumDependencies",
			"meanDependencies",
			"medianDependencies",
			"madDependencies",
			"varianceDependencies",
			"quantileSeqDependencies",
			"stdDependencies",
			"combinationsDependencies",
			"combinationsWithRepDependencies",
			"gammaDependencies",
			"factorialDependencies",
			"kldivergenceDependencies",
			"multinomialDependencies",
			"permutationsDependencies",
			"pickRandomDependencies",
			"randomDependencies",
			"randomIntDependencies",
			"stirlingS2Dependencies",
			"bellNumbersDependencies",
			"catalanDependencies",
			"compositionDependencies",
			"simplifyDependencies",
			"derivativeDependencies",
			"rationalizeDependencies",
			"reviverDependencies",
			"replacerDependencies",
			"eDependencies",
			"EDependencies",
			"falseDependencies",
			"iDependencies",
			"InfinityDependencies",
			"LN10Dependencies",
			"LN2Dependencies",
			"LOG10EDependencies",
			"LOG2EDependencies",
			"NaNDependencies",
			"nullDependencies",
			"phiDependencies",
			"piDependencies",
			"PIDependencies",
			"SQRT1_2Dependencies",
			"SQRT2Dependencies",
			"tauDependencies",
			"trueDependencies",
			"versionDependencies",
			"atomicMassDependencies",
			"avogadroDependencies",
			"bohrMagnetonDependencies",
			"bohrRadiusDependencies",
			"boltzmannDependencies",
			"classicalElectronRadiusDependencies",
			"conductanceQuantumDependencies",
			"coulombDependencies",
			"deuteronMassDependencies",
			"efimovFactorDependencies",
			"electricConstantDependencies",
			"electronMassDependencies",
			"elementaryChargeDependencies",
			"faradayDependencies",
			"fermiCouplingDependencies",
			"fineStructureDependencies",
			"firstRadiationDependencies",
			"gasConstantDependencies",
			"gravitationConstantDependencies",
			"gravityDependencies",
			"hartreeEnergyDependencies",
			"inverseConductanceQuantumDependencies",
			"klitzingDependencies",
			"loschmidtDependencies",
			"magneticConstantDependencies",
			"magneticFluxQuantumDependencies",
			"molarMassDependencies",
			"molarMassC12Dependencies",
			"molarPlanckConstantDependencies",
			"molarVolumeDependencies",
			"neutronMassDependencies",
			"nuclearMagnetonDependencies",
			"planckChargeDependencies",
			"planckConstantDependencies",
			"planckLengthDependencies",
			"planckMassDependencies",
			"planckTemperatureDependencies",
			"planckTimeDependencies",
			"protonMassDependencies",
			"quantumOfCirculationDependencies",
			"reducedPlanckConstantDependencies",
			"rydbergDependencies",
			"sackurTetrodeDependencies",
			"secondRadiationDependencies",
			"speedOfLightDependencies",
			"stefanBoltzmannDependencies",
			"thomsonCrossSectionDependencies",
			"vacuumImpedanceDependencies",
			"weakMixingAngleDependencies",
			"wienDisplacementDependencies",
			"applyTransformDependencies",
			"columnTransformDependencies",
			"filterTransformDependencies",
			"forEachTransformDependencies",
			"indexTransformDependencies",
			"mapTransformDependencies",
			"maxTransformDependencies",
			"meanTransformDependencies",
			"minTransformDependencies",
			"rangeTransformDependencies",
			"rowTransformDependencies",
			"subsetTransformDependencies",
			"concatTransformDependencies",
			"diffTransformDependencies",
			"stdTransformDependencies",
			"sumTransformDependencies",
			"varianceTransformDependencies",
			"all",
			"createTyped",
			"createResultSet",
			"createBigNumberClass",
			"createComplexClass",
			"createFractionClass",
			"createRangeClass",
			"createMatrixClass",
			"createDenseMatrixClass",
			"createClone",
			"createIsInteger",
			"createIsNegative",
			"createIsNumeric",
			"createHasNumericValue",
			"createIsPositive",
			"createIsZero",
			"createIsNaN",
			"createTypeOf",
			"createEqualScalar",
			"createSparseMatrixClass",
			"createNumber",
			"createString",
			"createBoolean",
			"createBignumber",
			"createComplex",
			"createFraction",
			"createMatrix",
			"createSplitUnit",
			"createUnaryMinus",
			"createUnaryPlus",
			"createAbs",
			"createApply",
			"createAddScalar",
			"createCbrt",
			"createCeil",
			"createCube",
			"createExp",
			"createExpm1",
			"createFix",
			"createFloor",
			"createGcd",
			"createLcm",
			"createLog10",
			"createLog2",
			"createMod",
			"createMultiplyScalar",
			"createMultiply",
			"createNthRoot",
			"createSign",
			"createSqrt",
			"createSquare",
			"createSubtract",
			"createXgcd",
			"createDotMultiply",
			"createBitAnd",
			"createBitNot",
			"createBitOr",
			"createBitXor",
			"createArg",
			"createConj",
			"createIm",
			"createRe",
			"createNot",
			"createOr",
			"createXor",
			"createConcat",
			"createColumn",
			"createCross",
			"createDiag",
			"createFilter",
			"createFlatten",
			"createForEach",
			"createGetMatrixDataType",
			"createIdentity",
			"createKron",
			"createMap",
			"createDiff",
			"createOnes",
			"createRange",
			"createReshape",
			"createResize",
			"createRow",
			"createSize",
			"createSqueeze",
			"createSubset",
			"createTranspose",
			"createCtranspose",
			"createZeros",
			"createErf",
			"createMode",
			"createProd",
			"createFormat",
			"createPrint",
			"createTo",
			"createIsPrime",
			"createNumeric",
			"createDivideScalar",
			"createPow",
			"createRound",
			"createLog",
			"createLog1p",
			"createNthRoots",
			"createDotPow",
			"createDotDivide",
			"createLsolve",
			"createUsolve",
			"createLeftShift",
			"createRightArithShift",
			"createRightLogShift",
			"createAnd",
			"createCompare",
			"createCompareNatural",
			"createCompareText",
			"createEqual",
			"createEqualText",
			"createSmaller",
			"createSmallerEq",
			"createLarger",
			"createLargerEq",
			"createDeepEqual",
			"createUnequal",
			"createPartitionSelect",
			"createSort",
			"createMax",
			"createMin",
			"createImmutableDenseMatrixClass",
			"createIndexClass",
			"createFibonacciHeapClass",
			"createSpaClass",
			"createUnitClass",
			"createUnitFunction",
			"createSparse",
			"createCreateUnit",
			"createAcos",
			"createAcosh",
			"createAcot",
			"createAcoth",
			"createAcsc",
			"createAcsch",
			"createAsec",
			"createAsech",
			"createAsin",
			"createAsinh",
			"createAtan",
			"createAtan2",
			"createAtanh",
			"createCos",
			"createCosh",
			"createCot",
			"createCoth",
			"createCsc",
			"createCsch",
			"createSec",
			"createSech",
			"createSin",
			"createSinh",
			"createTan",
			"createTanh",
			"createSetCartesian",
			"createSetDifference",
			"createSetDistinct",
			"createSetIntersect",
			"createSetIsSubset",
			"createSetMultiplicity",
			"createSetPowerset",
			"createSetSize",
			"createSetSymDifference",
			"createSetUnion",
			"createAdd",
			"createHypot",
			"createNorm",
			"createDot",
			"createTrace",
			"createIndex",
			"createNode",
			"createAccessorNode",
			"createArrayNode",
			"createAssignmentNode",
			"createBlockNode",
			"createConditionalNode",
			"createConstantNode",
			"createFunctionAssignmentNode",
			"createIndexNode",
			"createObjectNode",
			"createOperatorNode",
			"createParenthesisNode",
			"createRangeNode",
			"createRelationalNode",
			"createSymbolNode",
			"createFunctionNode",
			"createParse",
			"createCompile",
			"createEvaluate",
			"createParserClass",
			"createParser",
			"createLup",
			"createQr",
			"createSlu",
			"createLusolve",
			"createHelpClass",
			"createChainClass",
			"createHelp",
			"createChain",
			"createDet",
			"createInv",
			"createEigs",
			"createExpm",
			"createSqrtm",
			"createDivide",
			"createDistance",
			"createIntersect",
			"createSum",
			"createMean",
			"createMedian",
			"createMad",
			"createVariance",
			"createQuantileSeq",
			"createStd",
			"createCombinations",
			"createCombinationsWithRep",
			"createGamma",
			"createFactorial",
			"createKldivergence",
			"createMultinomial",
			"createPermutations",
			"createPickRandom",
			"createRandom",
			"createRandomInt",
			"createStirlingS2",
			"createBellNumbers",
			"createCatalan",
			"createComposition",
			"createSimplify",
			"createDerivative",
			"createRationalize",
			"createReviver",
			"createReplacer",
			"createE",
			"createUppercaseE",
			"createFalse",
			"createI",
			"createInfinity",
			"createLN10",
			"createLN2",
			"createLOG10E",
			"createLOG2E",
			"createNaN",
			"createNull",
			"createPhi",
			"createPi",
			"createUppercasePi",
			"createSQRT1_2",
			"createSQRT2",
			"createTau",
			"createTrue",
			"createVersion",
			"createAtomicMass",
			"createAvogadro",
			"createBohrMagneton",
			"createBohrRadius",
			"createBoltzmann",
			"createClassicalElectronRadius",
			"createConductanceQuantum",
			"createCoulomb",
			"createDeuteronMass",
			"createEfimovFactor",
			"createElectricConstant",
			"createElectronMass",
			"createElementaryCharge",
			"createFaraday",
			"createFermiCoupling",
			"createFineStructure",
			"createFirstRadiation",
			"createGasConstant",
			"createGravitationConstant",
			"createGravity",
			"createHartreeEnergy",
			"createInverseConductanceQuantum",
			"createKlitzing",
			"createLoschmidt",
			"createMagneticConstant",
			"createMagneticFluxQuantum",
			"createMolarMass",
			"createMolarMassC12",
			"createMolarPlanckConstant",
			"createMolarVolume",
			"createNeutronMass",
			"createNuclearMagneton",
			"createPlanckCharge",
			"createPlanckConstant",
			"createPlanckLength",
			"createPlanckMass",
			"createPlanckTemperature",
			"createPlanckTime",
			"createProtonMass",
			"createQuantumOfCirculation",
			"createReducedPlanckConstant",
			"createRydberg",
			"createSackurTetrode",
			"createSecondRadiation",
			"createSpeedOfLight",
			"createStefanBoltzmann",
			"createThomsonCrossSection",
			"createVacuumImpedance",
			"createWeakMixingAngle",
			"createWienDisplacement",
			"createApplyTransform",
			"createColumnTransform",
			"createFilterTransform",
			"createForEachTransform",
			"createIndexTransform",
			"createMapTransform",
			"createMaxTransform",
			"createMeanTransform",
			"createMinTransform",
			"createRangeTransform",
			"createRowTransform",
			"createSubsetTransform",
			"createConcatTransform",
			"createDiffTransform",
			"createStdTransform",
			"createSumTransform",
			"createVarianceTransform"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "inversify",
		"transpiled": true,
		"expectedNames": [
			"METADATA_KEY",
			"Container",
			"BindingScopeEnum",
			"BindingTypeEnum",
			"TargetTypeEnum",
			"AsyncContainerModule",
			"ContainerModule",
			"injectable",
			"tagged",
			"named",
			"inject",
			"LazyServiceIdentifer",
			"optional",
			"unmanaged",
			"multiInject",
			"targetName",
			"postConstruct",
			"MetadataReader",
			"id",
			"decorate",
			"traverseAncerstors",
			"taggedConstraint",
			"namedConstraint",
			"typeConstraint",
			"getServiceIdentifierAsString",
			"multiBindToService"
		],
		"detectedNames": [
			"METADATA_KEY",
			"Container",
			"BindingScopeEnum",
			"BindingTypeEnum",
			"TargetTypeEnum",
			"AsyncContainerModule",
			"ContainerModule",
			"injectable",
			"tagged",
			"named",
			"inject",
			"LazyServiceIdentifer",
			"optional",
			"unmanaged",
			"multiInject",
			"targetName",
			"postConstruct",
			"MetadataReader",
			"id",
			"decorate",
			"traverseAncerstors",
			"taggedConstraint",
			"namedConstraint",
			"typeConstraint",
			"getServiceIdentifierAsString",
			"multiBindToService"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "yargs-parser",
		"expectedNames": [
			"detailed",
			"camelCase",
			"decamelize",
			"looksLikeNumber"
		],
		"detectedNames": [],
		"missingNames": [
			"detailed",
			"camelCase",
			"decamelize",
			"looksLikeNumber"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-traverse",
		"transpiled": true,
		"expectedNames": [
			"NodePath",
			"Scope",
			"Hub",
			"visitors"
		],
		"detectedNames": [
			"NodePath",
			"Scope",
			"Hub",
			"visitors"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-syntax-dynamic-import",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "raw-body",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "sync-request",
		"expectedNames": [
			"FormData"
		],
		"detectedNames": [
			"FormData"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "valid-url",
		"expectedNames": [
			"is_uri",
			"is_http_uri",
			"is_https_uri",
			"is_web_uri",
			"isUri",
			"isHttpUri",
			"isHttpsUri",
			"isWebUri"
		],
		"detectedNames": [
			"is_uri",
			"is_http_uri",
			"is_https_uri",
			"is_web_uri",
			"isUri",
			"isHttpUri",
			"isHttpsUri",
			"isWebUri"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-tap-event-plugin",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-transform-react-remove-prop-types",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cuid",
		"expectedNames": [
			"slug",
			"isCuid",
			"isSlug",
			"fingerprint"
		],
		"detectedNames": [],
		"missingNames": [
			"slug",
			"isCuid",
			"isSlug",
			"fingerprint"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "slug",
		"expectedNames": [
			"defaults",
			"multicharmap",
			"charmap",
			"reset",
			"extend"
		],
		"detectedNames": [],
		"missingNames": [
			"defaults",
			"multicharmap",
			"charmap",
			"reset",
			"extend"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bcrypt-nodejs",
		"expectedNames": [
			"genSaltSync",
			"genSalt",
			"hashSync",
			"hash",
			"compareSync",
			"compare",
			"getRounds"
		],
		"detectedNames": [
			"genSaltSync",
			"genSalt",
			"hashSync",
			"hash",
			"compareSync",
			"compare",
			"getRounds"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/parser",
		"transpiled": true,
		"expectedNames": [
			"parse",
			"parseExpression",
			"tokTypes"
		],
		"detectedNames": [
			"parse",
			"parseExpression",
			"tokTypes"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jwt-decode",
		"expectedNames": [
			"InvalidTokenError"
		],
		"detectedNames": [
			"InvalidTokenError"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "postcss-cssnext",
		"expectedNames": [
			"process",
			"features"
		],
		"detectedNames": [],
		"missingNames": [
			"process",
			"features"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "install",
		"expectedNames": [
			"makeInstaller"
		],
		"detectedNames": [
			"makeInstaller"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "basic-auth",
		"expectedNames": [
			"parse"
		],
		"detectedNames": [
			"parse"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "memory-fs",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "d3-selection",
		"transpiled": true,
		"expectedNames": [
			"create",
			"creator",
			"local",
			"matcher",
			"namespace",
			"namespaces",
			"pointer",
			"pointers",
			"select",
			"selectAll",
			"selection",
			"selector",
			"selectorAll",
			"style",
			"window"
		],
		"detectedNames": [
			"create",
			"creator",
			"local",
			"matcher",
			"namespace",
			"namespaces",
			"pointer",
			"pointers",
			"select",
			"selectAll",
			"selection",
			"selector",
			"selectorAll",
			"style",
			"window"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@angular-devkit/schematics",
		"transpiled": true,
		"expectedNames": [
			"SchematicsException",
			"formats",
			"workflow",
			"Tree",
			"UnknownActionException",
			"ActionList",
			"isContentAction",
			"isAction",
			"UnknownUrlSourceProtocol",
			"UnknownCollectionException",
			"CircularCollectionException",
			"UnknownSchematicException",
			"PrivateSchematicException",
			"SchematicEngineConflictingException",
			"UnregisteredTaskException",
			"UnknownTaskDependencyException",
			"CollectionImpl",
			"TaskScheduler",
			"SchematicEngine",
			"InvalidSchematicsNameException",
			"SchematicImpl",
			"FileDoesNotExistException",
			"FileAlreadyExistException",
			"ContentHasMutatedException",
			"InvalidUpdateRecordException",
			"MergeConflictException",
			"UnsuccessfulWorkflowExecution",
			"UnimplementedException",
			"MergeStrategy",
			"FileVisitorCancelToken",
			"TreeSymbol",
			"source",
			"empty",
			"chain",
			"apply",
			"mergeWith",
			"noop",
			"filter",
			"asSource",
			"branchAndMerge",
			"when",
			"partitionApplyMerge",
			"forEach",
			"composeFileOperators",
			"applyToSubtree",
			"InvalidRuleResultException",
			"InvalidSourceResultException",
			"callSource",
			"callRule",
			"move",
			"externalSchematic",
			"schematic",
			"TEMPLATE_FILENAME_RE",
			"OptionIsNotDefinedException",
			"UnknownPipeException",
			"InvalidPipeException",
			"applyContentTemplate",
			"contentTemplate",
			"applyPathTemplate",
			"pathTemplate",
			"renameTemplateFiles",
			"template",
			"applyTemplates",
			"url",
			"DelegateTree",
			"EmptyTree",
			"HostDirEntry",
			"HostTree",
			"HostCreateTree",
			"FilterHostTree",
			"DryRunSink",
			"HostSink",
			"SimpleSinkBase"
		],
		"detectedNames": [
			"SchematicsException",
			"formats",
			"workflow",
			"Tree",
			"UnknownActionException",
			"ActionList",
			"isContentAction",
			"isAction",
			"UnknownUrlSourceProtocol",
			"UnknownCollectionException",
			"CircularCollectionException",
			"UnknownSchematicException",
			"PrivateSchematicException",
			"SchematicEngineConflictingException",
			"UnregisteredTaskException",
			"UnknownTaskDependencyException",
			"CollectionImpl",
			"TaskScheduler",
			"SchematicEngine",
			"InvalidSchematicsNameException",
			"SchematicImpl",
			"FileDoesNotExistException",
			"FileAlreadyExistException",
			"ContentHasMutatedException",
			"InvalidUpdateRecordException",
			"MergeConflictException",
			"UnsuccessfulWorkflowExecution",
			"UnimplementedException",
			"MergeStrategy",
			"FileVisitorCancelToken",
			"TreeSymbol",
			"source",
			"empty",
			"chain",
			"apply",
			"mergeWith",
			"noop",
			"filter",
			"asSource",
			"branchAndMerge",
			"when",
			"partitionApplyMerge",
			"forEach",
			"composeFileOperators",
			"applyToSubtree",
			"InvalidRuleResultException",
			"InvalidSourceResultException",
			"callSource",
			"callRule",
			"move",
			"externalSchematic",
			"schematic",
			"TEMPLATE_FILENAME_RE",
			"OptionIsNotDefinedException",
			"UnknownPipeException",
			"InvalidPipeException",
			"applyContentTemplate",
			"contentTemplate",
			"applyPathTemplate",
			"pathTemplate",
			"renameTemplateFiles",
			"template",
			"applyTemplates",
			"url",
			"DelegateTree",
			"EmptyTree",
			"HostDirEntry",
			"HostTree",
			"HostCreateTree",
			"FilterHostTree",
			"DryRunSink",
			"HostSink",
			"SimpleSinkBase"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "es6-promisify",
		"transpiled": true,
		"expectedNames": [
			"promisify"
		],
		"detectedNames": [
			"promisify"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "lodash.uniq",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-postcss",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "karma-chrome-launcher",
		"expectedNames": [
			"launcher:Chrome",
			"launcher:ChromeHeadless",
			"launcher:ChromeCanary",
			"launcher:ChromeCanaryHeadless",
			"launcher:Chromium",
			"launcher:ChromiumHeadless",
			"launcher:Dartium",
			"test"
		],
		"detectedNames": [
			"test"
		],
		"missingNames": [
			"launcher:Chrome",
			"launcher:ChromeHeadless",
			"launcher:ChromeCanary",
			"launcher:ChromeCanaryHeadless",
			"launcher:Chromium",
			"launcher:ChromiumHeadless",
			"launcher:Dartium"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "fast-glob",
		"expectedNames": [
			"sync",
			"stream",
			"generateTasks",
			"isDynamicPattern",
			"escapePath"
		],
		"detectedNames": [],
		"missingNames": [
			"sync",
			"stream",
			"generateTasks",
			"isDynamicPattern",
			"escapePath"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "file-type",
		"expectedNames": [
			"fromFile",
			"fromStream",
			"fromTokenizer",
			"fromBuffer",
			"stream"
		],
		"detectedNames": [],
		"missingNames": [
			"fromFile",
			"fromStream",
			"fromTokenizer",
			"fromBuffer",
			"stream"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "child-process-promise",
		"expectedNames": [
			"exec",
			"execFile",
			"spawn",
			"fork"
		],
		"detectedNames": [
			"exec",
			"execFile",
			"spawn",
			"fork"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-transform-react-jsx",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "phantomjs-prebuilt",
		"expectedNames": [
			"path",
			"version",
			"cleanPath",
			"exec",
			"run"
		],
		"detectedNames": [
			"path",
			"version",
			"cleanPath",
			"exec",
			"run"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "brfs",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "tar-fs",
		"expectedNames": [
			"pack",
			"extract"
		],
		"detectedNames": [
			"pack",
			"extract"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "clipboard",
		"expectedNames": [
			"TinyEmitter"
		],
		"detectedNames": [
			"TinyEmitter"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nyc",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "phantomjs",
		"expectedNames": [
			"path",
			"version",
			"cleanPath"
		],
		"detectedNames": [
			"path",
			"version",
			"cleanPath"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vinyl-buffer",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "clipboardy",
		"expectedNames": [
			"write",
			"read",
			"writeSync",
			"readSync"
		],
		"detectedNames": [
			"write",
			"read",
			"writeSync",
			"readSync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.isfunction",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "btoa",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rxjs-compat",
		"transpiled": true,
		"expectedNames": [
			"Observable",
			"Subject",
			"AnonymousSubject",
			"config",
			"Subscription",
			"ReplaySubject",
			"BehaviorSubject",
			"Notification",
			"EmptyError",
			"ArgumentOutOfRangeError",
			"ObjectUnsubscribedError",
			"UnsubscriptionError",
			"pipe",
			"TestScheduler",
			"Subscriber",
			"AsyncSubject",
			"ConnectableObservable",
			"TimeoutError",
			"VirtualTimeScheduler",
			"AjaxResponse",
			"AjaxError",
			"AjaxTimeoutError",
			"TimeInterval",
			"Timestamp",
			"operators",
			"Scheduler",
			"Symbol"
		],
		"detectedNames": [
			"Observable",
			"Subject",
			"AnonymousSubject",
			"config",
			"Subscription",
			"ReplaySubject",
			"BehaviorSubject",
			"Notification",
			"EmptyError",
			"ArgumentOutOfRangeError",
			"ObjectUnsubscribedError",
			"UnsubscriptionError",
			"pipe",
			"TestScheduler",
			"Subscriber",
			"AsyncSubject",
			"ConnectableObservable",
			"TimeoutError",
			"VirtualTimeScheduler",
			"AjaxResponse",
			"AjaxError",
			"AjaxTimeoutError",
			"TimeInterval",
			"Timestamp",
			"operators",
			"Scheduler",
			"Symbol"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "fork-ts-checker-webpack-plugin",
		"expectedNames": [
			"version"
		],
		"detectedNames": [],
		"missingNames": [
			"version"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "recast",
		"transpiled": true,
		"expectedNames": [
			"parse",
			"types",
			"print",
			"prettyPrint",
			"run",
			"visit"
		],
		"detectedNames": [
			"parse",
			"types",
			"print",
			"prettyPrint",
			"run",
			"visit"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "d3-array",
		"transpiled": true,
		"expectedNames": [
			"Adder",
			"ascending",
			"bin",
			"bisect",
			"bisectCenter",
			"bisectLeft",
			"bisectRight",
			"bisector",
			"count",
			"cross",
			"cumsum",
			"descending",
			"deviation",
			"extent",
			"fsum",
			"greatest",
			"greatestIndex",
			"group",
			"groups",
			"histogram",
			"index",
			"indexes",
			"least",
			"leastIndex",
			"max",
			"maxIndex",
			"mean",
			"median",
			"merge",
			"min",
			"minIndex",
			"pairs",
			"permute",
			"quantile",
			"quantileSorted",
			"quickselect",
			"range",
			"rollup",
			"rollups",
			"scan",
			"shuffle",
			"shuffler",
			"sum",
			"thresholdFreedmanDiaconis",
			"thresholdScott",
			"thresholdSturges",
			"tickIncrement",
			"tickStep",
			"ticks",
			"transpose",
			"variance",
			"zip"
		],
		"detectedNames": [
			"Adder",
			"ascending",
			"bin",
			"bisect",
			"bisectCenter",
			"bisectLeft",
			"bisectRight",
			"bisector",
			"count",
			"cross",
			"cumsum",
			"descending",
			"deviation",
			"extent",
			"fsum",
			"greatest",
			"greatestIndex",
			"group",
			"groups",
			"histogram",
			"index",
			"indexes",
			"least",
			"leastIndex",
			"max",
			"maxIndex",
			"mean",
			"median",
			"merge",
			"min",
			"minIndex",
			"pairs",
			"permute",
			"quantile",
			"quantileSorted",
			"quickselect",
			"range",
			"rollup",
			"rollups",
			"scan",
			"shuffle",
			"shuffler",
			"sum",
			"thresholdFreedmanDiaconis",
			"thresholdScott",
			"thresholdSturges",
			"tickIncrement",
			"tickStep",
			"ticks",
			"transpose",
			"variance",
			"zip"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-jshint",
		"expectedNames": [
			"failReporter",
			"loadReporter",
			"reporter",
			"extract"
		],
		"detectedNames": [],
		"missingNames": [
			"failReporter",
			"loadReporter",
			"reporter",
			"extract"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "base-64",
		"expectedNames": [
			"encode",
			"decode",
			"version"
		],
		"detectedNames": [],
		"missingNames": [
			"encode",
			"decode",
			"version"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "make-dir",
		"expectedNames": [
			"sync"
		],
		"detectedNames": [
			"sync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "sanitize-filename",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bip39",
		"transpiled": true,
		"expectedNames": [
			"mnemonicToSeedSync",
			"mnemonicToSeed",
			"mnemonicToEntropy",
			"entropyToMnemonic",
			"generateMnemonic",
			"validateMnemonic",
			"setDefaultWordlist",
			"getDefaultWordlist",
			"wordlists"
		],
		"detectedNames": [
			"mnemonicToSeedSync",
			"mnemonicToSeed",
			"mnemonicToEntropy",
			"entropyToMnemonic",
			"generateMnemonic",
			"validateMnemonic",
			"setDefaultWordlist",
			"getDefaultWordlist",
			"wordlists"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "needle",
		"expectedNames": [
			"version",
			"defaults",
			"head",
			"get",
			"post",
			"put",
			"patch",
			"delete",
			"request"
		],
		"detectedNames": [
			"version",
			"defaults",
			"request"
		],
		"missingNames": [
			"head",
			"get",
			"post",
			"put",
			"patch",
			"delete"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "keycode",
		"expectedNames": [
			"isEventKey",
			"codes",
			"code",
			"aliases",
			"title",
			"names"
		],
		"detectedNames": [
			"codes",
			"code",
			"aliases",
			"title",
			"names"
		],
		"missingNames": [
			"isEventKey"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "grunt-contrib-copy",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "selenium-webdriver",
		"expectedNames": [
			"ActionSequence",
			"Browser",
			"Builder",
			"Button",
			"By",
			"Capabilities",
			"Capability",
			"Condition",
			"EventEmitter",
			"FileDetector",
			"Key",
			"Session",
			"ThenableWebDriver",
			"TouchSequence",
			"WebDriver",
			"WebElement",
			"WebElementCondition",
			"WebElementPromise",
			"error",
			"logging",
			"promise",
			"until"
		],
		"detectedNames": [
			"ActionSequence",
			"Browser",
			"Builder",
			"Button",
			"By",
			"Capabilities",
			"Capability",
			"Condition",
			"EventEmitter",
			"FileDetector",
			"Key",
			"Session",
			"ThenableWebDriver",
			"TouchSequence",
			"WebDriver",
			"WebElement",
			"WebElementCondition",
			"WebElementPromise",
			"error",
			"logging",
			"promise",
			"until"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "opener",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "common-tags",
		"transpiled": true,
		"expectedNames": [
			"TemplateTag",
			"trimResultTransformer",
			"stripIndentTransformer",
			"replaceResultTransformer",
			"replaceSubstitutionTransformer",
			"replaceStringTransformer",
			"inlineArrayTransformer",
			"splitStringTransformer",
			"removeNonPrintingValuesTransformer",
			"commaLists",
			"commaListsAnd",
			"commaListsOr",
			"html",
			"codeBlock",
			"source",
			"safeHtml",
			"oneLine",
			"oneLineTrim",
			"oneLineCommaLists",
			"oneLineCommaListsOr",
			"oneLineCommaListsAnd",
			"inlineLists",
			"oneLineInlineLists",
			"stripIndent",
			"stripIndents"
		],
		"detectedNames": [
			"TemplateTag",
			"trimResultTransformer",
			"stripIndentTransformer",
			"replaceResultTransformer",
			"replaceSubstitutionTransformer",
			"replaceStringTransformer",
			"inlineArrayTransformer",
			"splitStringTransformer",
			"removeNonPrintingValuesTransformer",
			"commaLists",
			"commaListsAnd",
			"commaListsOr",
			"html",
			"codeBlock",
			"source",
			"safeHtml",
			"oneLine",
			"oneLineTrim",
			"oneLineCommaLists",
			"oneLineCommaListsOr",
			"oneLineCommaListsAnd",
			"inlineLists",
			"oneLineInlineLists",
			"stripIndent",
			"stripIndents"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "is-wsl",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "koa-body",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.isstring",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.template",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "command-exists",
		"expectedNames": [
			"sync"
		],
		"detectedNames": [
			"sync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "fstream",
		"expectedNames": [
			"Abstract",
			"Reader",
			"Writer",
			"File",
			"Dir",
			"Link",
			"Proxy",
			"DirReader",
			"FileReader",
			"LinkReader",
			"ProxyReader",
			"DirWriter",
			"FileWriter",
			"LinkWriter",
			"ProxyWriter",
			"collect"
		],
		"detectedNames": [
			"Abstract",
			"Reader",
			"Writer",
			"File",
			"Dir",
			"Link",
			"Proxy",
			"DirReader",
			"FileReader",
			"LinkReader",
			"ProxyReader",
			"DirWriter",
			"FileWriter",
			"LinkWriter",
			"ProxyWriter",
			"collect"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-cache",
		"expectedNames": [
			"version",
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"detectedNames": [
			"version"
		],
		"missingNames": [
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-watch",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "convert-source-map",
		"expectedNames": [
			"fromObject",
			"fromJSON",
			"fromBase64",
			"fromComment",
			"fromMapFileComment",
			"fromSource",
			"fromMapFileSource",
			"removeComments",
			"removeMapFileComments",
			"generateMapFileComment"
		],
		"detectedNames": [
			"fromObject",
			"fromJSON",
			"fromBase64",
			"fromComment",
			"fromMapFileComment",
			"fromSource",
			"fromMapFileSource",
			"removeComments",
			"removeMapFileComments",
			"generateMapFileComment"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "imagemin",
		"expectedNames": [
			"buffer"
		],
		"detectedNames": [
			"buffer"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-filter",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gaze",
		"expectedNames": [
			"Gaze"
		],
		"detectedNames": [
			"Gaze"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "supertest",
		"expectedNames": [
			"Test",
			"agent"
		],
		"detectedNames": [
			"Test",
			"agent"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "stack-trace",
		"expectedNames": [
			"get",
			"parse",
			"_createParsedCallSite"
		],
		"detectedNames": [
			"get",
			"parse",
			"_createParsedCallSite"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-clean-css",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "chance",
		"expectedNames": [
			"Chance"
		],
		"detectedNames": [
			"Chance"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-typescript",
		"expectedNames": [
			"reporter",
			"createProject",
			"filter"
		],
		"detectedNames": [],
		"missingNames": [
			"reporter",
			"createProject",
			"filter"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lowdb",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "generic-pool",
		"expectedNames": [
			"Pool",
			"Deque",
			"PriorityQueue",
			"DefaultEvictor",
			"createPool"
		],
		"detectedNames": [
			"Pool",
			"Deque",
			"PriorityQueue",
			"DefaultEvictor",
			"createPool"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "assert-plus",
		"expectedNames": [
			"bool",
			"func",
			"string",
			"object",
			"number",
			"finite",
			"buffer",
			"array",
			"stream",
			"date",
			"regexp",
			"uuid",
			"optionalBool",
			"optionalFunc",
			"optionalString",
			"optionalObject",
			"optionalNumber",
			"optionalFinite",
			"optionalBuffer",
			"optionalArray",
			"optionalStream",
			"optionalDate",
			"optionalRegexp",
			"optionalUuid",
			"arrayOfBool",
			"arrayOfFunc",
			"arrayOfString",
			"arrayOfObject",
			"arrayOfNumber",
			"arrayOfFinite",
			"arrayOfBuffer",
			"arrayOfArray",
			"arrayOfStream",
			"arrayOfDate",
			"arrayOfRegexp",
			"arrayOfUuid",
			"optionalArrayOfBool",
			"optionalArrayOfFunc",
			"optionalArrayOfString",
			"optionalArrayOfObject",
			"optionalArrayOfNumber",
			"optionalArrayOfFinite",
			"optionalArrayOfBuffer",
			"optionalArrayOfArray",
			"optionalArrayOfStream",
			"optionalArrayOfDate",
			"optionalArrayOfRegexp",
			"optionalArrayOfUuid",
			"fail",
			"AssertionError",
			"ok",
			"equal",
			"notEqual",
			"deepEqual",
			"notDeepEqual",
			"deepStrictEqual",
			"notDeepStrictEqual",
			"strictEqual",
			"notStrictEqual",
			"throws",
			"rejects",
			"doesNotThrow",
			"doesNotReject",
			"ifError",
			"match",
			"doesNotMatch",
			"CallTracker",
			"strict",
			"_setExports"
		],
		"detectedNames": [],
		"missingNames": [
			"bool",
			"func",
			"string",
			"object",
			"number",
			"finite",
			"buffer",
			"array",
			"stream",
			"date",
			"regexp",
			"uuid",
			"optionalBool",
			"optionalFunc",
			"optionalString",
			"optionalObject",
			"optionalNumber",
			"optionalFinite",
			"optionalBuffer",
			"optionalArray",
			"optionalStream",
			"optionalDate",
			"optionalRegexp",
			"optionalUuid",
			"arrayOfBool",
			"arrayOfFunc",
			"arrayOfString",
			"arrayOfObject",
			"arrayOfNumber",
			"arrayOfFinite",
			"arrayOfBuffer",
			"arrayOfArray",
			"arrayOfStream",
			"arrayOfDate",
			"arrayOfRegexp",
			"arrayOfUuid",
			"optionalArrayOfBool",
			"optionalArrayOfFunc",
			"optionalArrayOfString",
			"optionalArrayOfObject",
			"optionalArrayOfNumber",
			"optionalArrayOfFinite",
			"optionalArrayOfBuffer",
			"optionalArrayOfArray",
			"optionalArrayOfStream",
			"optionalArrayOfDate",
			"optionalArrayOfRegexp",
			"optionalArrayOfUuid",
			"fail",
			"AssertionError",
			"ok",
			"equal",
			"notEqual",
			"deepEqual",
			"notDeepEqual",
			"deepStrictEqual",
			"notDeepStrictEqual",
			"strictEqual",
			"notStrictEqual",
			"throws",
			"rejects",
			"doesNotThrow",
			"doesNotReject",
			"ifError",
			"match",
			"doesNotMatch",
			"CallTracker",
			"strict",
			"_setExports"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "eslint-plugin-vue",
		"expectedNames": [
			"rules",
			"configs",
			"processors"
		],
		"detectedNames": [],
		"missingNames": [
			"rules",
			"configs",
			"processors"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-minify-css",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "is-url",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "urllib",
		"expectedNames": [
			"USER_AGENT",
			"TIMEOUT",
			"TIMEOUTS",
			"agent",
			"httpsAgent",
			"curl",
			"request",
			"requestWithCallback",
			"requestThunk",
			"HttpClient",
			"HttpClient2",
			"create"
		],
		"detectedNames": [
			"USER_AGENT",
			"TIMEOUT",
			"TIMEOUTS",
			"agent",
			"httpsAgent",
			"curl",
			"request",
			"requestWithCallback",
			"requestThunk",
			"HttpClient",
			"HttpClient2",
			"create"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-generator",
		"transpiled": true,
		"expectedNames": [
			"CodeGenerator"
		],
		"detectedNames": [
			"CodeGenerator"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "immer",
		"transpiled": true,
		"expectedNames": [
			"Immer",
			"applyPatches",
			"castDraft",
			"castImmutable",
			"createDraft",
			"current",
			"enableAllPlugins",
			"enableES5",
			"enableMapSet",
			"enablePatches",
			"finishDraft",
			"immerable",
			"isDraft",
			"isDraftable",
			"nothing",
			"original",
			"produce",
			"produceWithPatches",
			"setAutoFreeze",
			"setUseProxies"
		],
		"detectedNames": [
			"Immer",
			"applyPatches",
			"castDraft",
			"castImmutable",
			"createDraft",
			"current",
			"enableAllPlugins",
			"enableES5",
			"enableMapSet",
			"enablePatches",
			"finishDraft",
			"immerable",
			"isDraft",
			"isDraftable",
			"nothing",
			"original",
			"produce",
			"produceWithPatches",
			"setAutoFreeze",
			"setUseProxies"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "sha1",
		"expectedNames": [
			"_blocksize",
			"_digestsize"
		],
		"detectedNames": [],
		"missingNames": [
			"_blocksize",
			"_digestsize"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "grunt-contrib-jshint",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mockjs",
		"expectedNames": [
			"Handler",
			"Random",
			"Util",
			"XHR",
			"RE",
			"toJSONSchema",
			"valid",
			"heredoc",
			"setup",
			"_mocked",
			"version",
			"mock"
		],
		"detectedNames": [
			"Handler"
		],
		"missingNames": [
			"Random",
			"Util",
			"XHR",
			"RE",
			"toJSONSchema",
			"valid",
			"heredoc",
			"setup",
			"_mocked",
			"version",
			"mock"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node.extend",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "connect-redis",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-module-resolver",
		"transpiled": true,
		"expectedNames": [
			"resolvePath"
		],
		"detectedNames": [
			"resolvePath"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "prompts",
		"expectedNames": [
			"prompt",
			"prompts",
			"inject",
			"override"
		],
		"detectedNames": [],
		"missingNames": [
			"prompt",
			"prompts",
			"inject",
			"override"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "memoize-one",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "shell-quote",
		"expectedNames": [
			"quote",
			"parse"
		],
		"detectedNames": [
			"quote",
			"parse"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "hyperquest",
		"expectedNames": [
			"get",
			"post",
			"put",
			"delete"
		],
		"detectedNames": [],
		"missingNames": [
			"get",
			"post",
			"put",
			"delete"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "https-proxy-agent",
		"expectedNames": [
			"HttpsProxyAgent"
		],
		"detectedNames": [],
		"missingNames": [
			"HttpsProxyAgent"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "long",
		"expectedNames": [
			"isLong",
			"fromInt",
			"fromNumber",
			"fromBits",
			"fromString",
			"fromValue",
			"ZERO",
			"UZERO",
			"ONE",
			"UONE",
			"NEG_ONE",
			"MAX_VALUE",
			"MAX_UNSIGNED_VALUE",
			"MIN_VALUE",
			"fromBytes",
			"fromBytesLE",
			"fromBytesBE"
		],
		"detectedNames": [],
		"missingNames": [
			"isLong",
			"fromInt",
			"fromNumber",
			"fromBits",
			"fromString",
			"fromValue",
			"ZERO",
			"UZERO",
			"ONE",
			"UONE",
			"NEG_ONE",
			"MAX_VALUE",
			"MAX_UNSIGNED_VALUE",
			"MIN_VALUE",
			"fromBytes",
			"fromBytesLE",
			"fromBytesBE"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "chai-as-promised",
		"expectedNames": [
			"transferPromiseness",
			"transformAsserterArgs"
		],
		"detectedNames": [
			"transferPromiseness",
			"transformAsserterArgs"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "secp256k1",
		"expectedNames": [
			"contextRandomize",
			"privateKeyVerify",
			"privateKeyNegate",
			"privateKeyTweakAdd",
			"privateKeyTweakMul",
			"publicKeyVerify",
			"publicKeyCreate",
			"publicKeyConvert",
			"publicKeyNegate",
			"publicKeyCombine",
			"publicKeyTweakAdd",
			"publicKeyTweakMul",
			"signatureNormalize",
			"signatureExport",
			"signatureImport",
			"ecdsaSign",
			"ecdsaVerify",
			"ecdsaRecover",
			"ecdh"
		],
		"detectedNames": [],
		"missingNames": [
			"contextRandomize",
			"privateKeyVerify",
			"privateKeyNegate",
			"privateKeyTweakAdd",
			"privateKeyTweakMul",
			"publicKeyVerify",
			"publicKeyCreate",
			"publicKeyConvert",
			"publicKeyNegate",
			"publicKeyCombine",
			"publicKeyTweakAdd",
			"publicKeyTweakMul",
			"signatureNormalize",
			"signatureExport",
			"signatureImport",
			"ecdsaSign",
			"ecdsaVerify",
			"ecdsaRecover",
			"ecdh"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "http-server",
		"expectedNames": [
			"HTTPServer",
			"HttpServer",
			"createServer"
		],
		"detectedNames": [
			"HTTPServer",
			"HttpServer",
			"createServer"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "utf8",
		"expectedNames": [
			"version",
			"encode",
			"decode"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"encode",
			"decode"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "type-is",
		"expectedNames": [
			"is",
			"hasBody",
			"normalize",
			"match"
		],
		"detectedNames": [
			"is",
			"hasBody",
			"normalize",
			"match"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vorpal",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rollup-pluginutils",
		"transpiled": true,
		"expectedNames": [
			"addExtension",
			"attachScopes",
			"createFilter",
			"dataToEsm",
			"extractAssignedNames",
			"makeLegalIdentifier"
		],
		"detectedNames": [
			"addExtension",
			"attachScopes",
			"createFilter",
			"dataToEsm",
			"extractAssignedNames",
			"makeLegalIdentifier"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "finalhandler",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "tweetnacl",
		"expectedNames": [
			"lowlevel",
			"randomBytes",
			"secretbox",
			"scalarMult",
			"box",
			"sign",
			"hash",
			"verify",
			"setPRNG"
		],
		"detectedNames": [],
		"missingNames": [
			"lowlevel",
			"randomBytes",
			"secretbox",
			"scalarMult",
			"box",
			"sign",
			"hash",
			"verify",
			"setPRNG"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "coveralls",
		"expectedNames": [
			"options",
			"convertLcovToCoveralls",
			"sendToCoveralls",
			"getBaseOptions",
			"getOptions",
			"handleInput",
			"logger"
		],
		"detectedNames": [
			"options",
			"convertLcovToCoveralls",
			"sendToCoveralls",
			"getBaseOptions",
			"getOptions",
			"handleInput",
			"logger"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "d3-shape",
		"transpiled": true,
		"expectedNames": [
			"arc",
			"area",
			"areaRadial",
			"curveBasis",
			"curveBasisClosed",
			"curveBasisOpen",
			"curveBundle",
			"curveCardinal",
			"curveCardinalClosed",
			"curveCardinalOpen",
			"curveCatmullRom",
			"curveCatmullRomClosed",
			"curveCatmullRomOpen",
			"curveLinear",
			"curveLinearClosed",
			"curveMonotoneX",
			"curveMonotoneY",
			"curveNatural",
			"curveStep",
			"curveStepAfter",
			"curveStepBefore",
			"line",
			"lineRadial",
			"linkHorizontal",
			"linkRadial",
			"linkVertical",
			"pie",
			"pointRadial",
			"radialArea",
			"radialLine",
			"stack",
			"stackOffsetDiverging",
			"stackOffsetExpand",
			"stackOffsetNone",
			"stackOffsetSilhouette",
			"stackOffsetWiggle",
			"stackOrderAppearance",
			"stackOrderAscending",
			"stackOrderDescending",
			"stackOrderInsideOut",
			"stackOrderNone",
			"stackOrderReverse",
			"symbol",
			"symbolCircle",
			"symbolCross",
			"symbolDiamond",
			"symbolSquare",
			"symbolStar",
			"symbolTriangle",
			"symbolWye",
			"symbols"
		],
		"detectedNames": [
			"arc",
			"area",
			"areaRadial",
			"curveBasis",
			"curveBasisClosed",
			"curveBasisOpen",
			"curveBundle",
			"curveCardinal",
			"curveCardinalClosed",
			"curveCardinalOpen",
			"curveCatmullRom",
			"curveCatmullRomClosed",
			"curveCatmullRomOpen",
			"curveLinear",
			"curveLinearClosed",
			"curveMonotoneX",
			"curveMonotoneY",
			"curveNatural",
			"curveStep",
			"curveStepAfter",
			"curveStepBefore",
			"line",
			"lineRadial",
			"linkHorizontal",
			"linkRadial",
			"linkVertical",
			"pie",
			"pointRadial",
			"radialArea",
			"radialLine",
			"stack",
			"stackOffsetDiverging",
			"stackOffsetExpand",
			"stackOffsetNone",
			"stackOffsetSilhouette",
			"stackOffsetWiggle",
			"stackOrderAppearance",
			"stackOrderAscending",
			"stackOrderDescending",
			"stackOrderInsideOut",
			"stackOrderNone",
			"stackOrderReverse",
			"symbol",
			"symbolCircle",
			"symbolCross",
			"symbolDiamond",
			"symbolSquare",
			"symbolStar",
			"symbolTriangle",
			"symbolWye",
			"symbols"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "postcss-normalize",
		"expectedNames": [
			"process"
		],
		"detectedNames": [],
		"missingNames": [
			"process"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "showdown",
		"expectedNames": [
			"helper",
			"extensions",
			"setOption",
			"getOption",
			"getOptions",
			"resetOptions",
			"setFlavor",
			"getFlavor",
			"getFlavorOptions",
			"getDefaultOptions",
			"subParser",
			"extension",
			"getAllExtensions",
			"removeExtension",
			"resetExtensions",
			"validateExtension",
			"Converter"
		],
		"detectedNames": [],
		"missingNames": [
			"helper",
			"extensions",
			"setOption",
			"getOption",
			"getOptions",
			"resetOptions",
			"setFlavor",
			"getFlavor",
			"getFlavorOptions",
			"getDefaultOptions",
			"subParser",
			"extension",
			"getAllExtensions",
			"removeExtension",
			"resetExtensions",
			"validateExtension",
			"Converter"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "promise-polyfill",
		"expectedNames": [
			"all",
			"resolve",
			"reject",
			"race",
			"_immediateFn",
			"_unhandledRejectionFn"
		],
		"detectedNames": [],
		"missingNames": [
			"all",
			"resolve",
			"reject",
			"race",
			"_immediateFn",
			"_unhandledRejectionFn"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-pre-gyp",
		"expectedNames": [
			"find",
			"Run"
		],
		"detectedNames": [
			"find",
			"Run"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "path-is-absolute",
		"expectedNames": [
			"posix",
			"win32"
		],
		"detectedNames": [
			"posix",
			"win32"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "preact",
		"expectedNames": [
			"render",
			"hydrate",
			"createElement",
			"h",
			"Fragment",
			"createRef",
			"isValidElement",
			"Component",
			"cloneElement",
			"createContext",
			"toChildArray",
			"__u",
			"options"
		],
		"detectedNames": [
			"render",
			"hydrate",
			"createElement",
			"h",
			"Fragment",
			"createRef",
			"isValidElement",
			"Component",
			"cloneElement",
			"createContext",
			"toChildArray",
			"__u",
			"options"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "crc",
		"expectedNames": [
			"crc1",
			"crc8",
			"crc81wire",
			"crc16",
			"crc16ccitt",
			"crc16modbus",
			"crc16xmodem",
			"crc16kermit",
			"crc24",
			"crc32",
			"crcjam"
		],
		"detectedNames": [
			"crc1"
		],
		"missingNames": [
			"crc8",
			"crc81wire",
			"crc16",
			"crc16ccitt",
			"crc16modbus",
			"crc16xmodem",
			"crc16kermit",
			"crc24",
			"crc32",
			"crcjam"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "babel-plugin-transform-async-to-generator",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "osenv",
		"expectedNames": [
			"user",
			"prompt",
			"hostname",
			"tmpdir",
			"home",
			"path",
			"editor",
			"shell"
		],
		"detectedNames": [],
		"missingNames": [
			"user",
			"prompt",
			"hostname",
			"tmpdir",
			"home",
			"path",
			"editor",
			"shell"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.isempty",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/traverse",
		"transpiled": true,
		"expectedNames": [
			"NodePath",
			"Scope",
			"Hub",
			"visitors"
		],
		"detectedNames": [
			"NodePath",
			"Scope",
			"Hub",
			"visitors"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "serve-index",
		"expectedNames": [
			"html",
			"json",
			"plain"
		],
		"detectedNames": [],
		"missingNames": [
			"html",
			"json",
			"plain"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.map",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "highland",
		"expectedNames": [
			"isUndefined",
			"isFunction",
			"isObject",
			"isString",
			"isArray",
			"setImmediate",
			"nil",
			"curry",
			"ncurry",
			"partial",
			"flip",
			"compose",
			"seq",
			"of",
			"fromError",
			"isNil",
			"isStream",
			"_isStreamError",
			"_isStreamRedirect",
			"consume",
			"errors",
			"stopOnError",
			"each",
			"apply",
			"toCallback",
			"toPromise",
			"toNodeStream",
			"map",
			"doto",
			"tap",
			"ratelimit",
			"flatMap",
			"pluck",
			"pickBy",
			"pick",
			"filter",
			"flatFilter",
			"reject",
			"find",
			"findWhere",
			"group",
			"compact",
			"where",
			"uniqBy",
			"uniq",
			"zipAll0",
			"zipAll",
			"zip",
			"batch",
			"batchWithTimeOrCount",
			"intersperse",
			"splitBy",
			"split",
			"slice",
			"take",
			"drop",
			"head",
			"last",
			"sortBy",
			"sort",
			"through",
			"pipeline",
			"sequence",
			"series",
			"flatten",
			"parallel",
			"otherwise",
			"append",
			"reduce",
			"reduce1",
			"collect",
			"scan",
			"scan1",
			"transduce",
			"concat",
			"merge",
			"mergeWithLimit",
			"invoke",
			"nfcall",
			"throttle",
			"debounce",
			"latest",
			"values",
			"keys",
			"pairs",
			"extend",
			"get",
			"set",
			"log",
			"wrapCallback",
			"streamifyAll",
			"add",
			"not"
		],
		"detectedNames": [],
		"missingNames": [
			"isUndefined",
			"isFunction",
			"isObject",
			"isString",
			"isArray",
			"setImmediate",
			"nil",
			"curry",
			"ncurry",
			"partial",
			"flip",
			"compose",
			"seq",
			"of",
			"fromError",
			"isNil",
			"isStream",
			"_isStreamError",
			"_isStreamRedirect",
			"consume",
			"errors",
			"stopOnError",
			"each",
			"apply",
			"toCallback",
			"toPromise",
			"toNodeStream",
			"map",
			"doto",
			"tap",
			"ratelimit",
			"flatMap",
			"pluck",
			"pickBy",
			"pick",
			"filter",
			"flatFilter",
			"reject",
			"find",
			"findWhere",
			"group",
			"compact",
			"where",
			"uniqBy",
			"uniq",
			"zipAll0",
			"zipAll",
			"zip",
			"batch",
			"batchWithTimeOrCount",
			"intersperse",
			"splitBy",
			"split",
			"slice",
			"take",
			"drop",
			"head",
			"last",
			"sortBy",
			"sort",
			"through",
			"pipeline",
			"sequence",
			"series",
			"flatten",
			"parallel",
			"otherwise",
			"append",
			"reduce",
			"reduce1",
			"collect",
			"scan",
			"scan1",
			"transduce",
			"concat",
			"merge",
			"mergeWithLimit",
			"invoke",
			"nfcall",
			"throttle",
			"debounce",
			"latest",
			"values",
			"keys",
			"pairs",
			"extend",
			"get",
			"set",
			"log",
			"wrapCallback",
			"streamifyAll",
			"add",
			"not"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "localforage",
		"expectedNames": [
			"INDEXEDDB",
			"WEBSQL",
			"LOCALSTORAGE",
			"_defaultConfig",
			"_config",
			"_driverSet",
			"_initDriver",
			"_ready",
			"_dbInfo",
			"clear",
			"getItem",
			"iterate",
			"key",
			"keys",
			"length",
			"removeItem",
			"setItem",
			"dropInstance",
			"config",
			"defineDriver",
			"driver",
			"getDriver",
			"getSerializer",
			"ready",
			"setDriver",
			"supports",
			"_extend",
			"_getSupportedDrivers",
			"_wrapLibraryMethodsWithReady",
			"createInstance"
		],
		"detectedNames": [],
		"missingNames": [
			"INDEXEDDB",
			"WEBSQL",
			"LOCALSTORAGE",
			"_defaultConfig",
			"_config",
			"_driverSet",
			"_initDriver",
			"_ready",
			"_dbInfo",
			"clear",
			"getItem",
			"iterate",
			"key",
			"keys",
			"length",
			"removeItem",
			"setItem",
			"dropInstance",
			"config",
			"defineDriver",
			"driver",
			"getDriver",
			"getSerializer",
			"ready",
			"setDriver",
			"supports",
			"_extend",
			"_getSupportedDrivers",
			"_wrapLibraryMethodsWithReady",
			"createInstance"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "deep-diff",
		"expectedNames": [
			"diff",
			"orderIndependentDiff",
			"observableDiff",
			"orderIndependentObservableDiff",
			"orderIndepHash",
			"applyDiff",
			"applyChange",
			"revertChange",
			"isConflict",
			"DeepDiff"
		],
		"detectedNames": [],
		"missingNames": [
			"diff",
			"orderIndependentDiff",
			"observableDiff",
			"orderIndependentObservableDiff",
			"orderIndepHash",
			"applyDiff",
			"applyChange",
			"revertChange",
			"isConflict",
			"DeepDiff"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "passport-oauth",
		"expectedNames": [
			"OAuthStrategy",
			"OAuth2Strategy",
			"InternalOAuthError"
		],
		"detectedNames": [
			"OAuthStrategy",
			"OAuth2Strategy",
			"InternalOAuthError"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "passport-strategy",
		"expectedNames": [
			"Strategy"
		],
		"detectedNames": [
			"Strategy"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "dom-helpers",
		"transpiled": true,
		"expectedNames": [
			"activeElement",
			"addClass",
			"addEventListener",
			"animate",
			"cancelAnimationFrame",
			"requestAnimationFrame",
			"closest",
			"contains",
			"style",
			"filter",
			"getComputedStyle",
			"hasClass",
			"height",
			"listen",
			"matches",
			"offset",
			"offsetParent",
			"ownerDocument",
			"ownerWindow",
			"position",
			"querySelectorAll",
			"removeClass",
			"removeEventListener",
			"scrollbarSize",
			"scrollLeft",
			"scrollParent",
			"scrollTo",
			"scrollTop",
			"toggleClass",
			"transitionEnd",
			"width"
		],
		"detectedNames": [
			"activeElement",
			"addClass",
			"addEventListener",
			"animate",
			"cancelAnimationFrame",
			"requestAnimationFrame",
			"closest",
			"contains",
			"style",
			"filter",
			"getComputedStyle",
			"hasClass",
			"height",
			"listen",
			"matches",
			"offset",
			"offsetParent",
			"ownerDocument",
			"ownerWindow",
			"position",
			"querySelectorAll",
			"removeClass",
			"removeEventListener",
			"scrollbarSize",
			"scrollLeft",
			"scrollParent",
			"scrollTo",
			"scrollTop",
			"toggleClass",
			"transitionEnd",
			"width"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "tildify",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ethereumjs-tx",
		"transpiled": true,
		"expectedNames": [
			"Transaction",
			"FakeTransaction"
		],
		"detectedNames": [
			"Transaction",
			"FakeTransaction"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-template",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "leveldown",
		"expectedNames": [
			"destroy",
			"repair"
		],
		"detectedNames": [],
		"missingNames": [
			"destroy",
			"repair"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-eslint",
		"expectedNames": [
			"result",
			"results",
			"failOnError",
			"failAfterError",
			"formatEach",
			"format"
		],
		"detectedNames": [],
		"missingNames": [
			"result",
			"results",
			"failOnError",
			"failAfterError",
			"formatEach",
			"format"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "depd",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "content-type",
		"expectedNames": [
			"format",
			"parse"
		],
		"detectedNames": [
			"format",
			"parse"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nanoid",
		"expectedNames": [
			"nanoid",
			"customAlphabet",
			"customRandom",
			"urlAlphabet",
			"random"
		],
		"detectedNames": [
			"nanoid",
			"customAlphabet",
			"customRandom",
			"urlAlphabet",
			"random"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "babel-plugin-syntax-jsx",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bl",
		"expectedNames": [
			"isBufferList",
			"BufferListStream",
			"BufferList"
		],
		"detectedNames": [
			"BufferListStream",
			"BufferList"
		],
		"missingNames": [
			"isBufferList"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "read-pkg",
		"expectedNames": [
			"sync"
		],
		"detectedNames": [
			"sync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "markdown",
		"expectedNames": [
			"markdown",
			"parse"
		],
		"detectedNames": [
			"markdown",
			"parse"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jest-environment-jsdom-fourteen",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "serialize-javascript",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nprogress",
		"expectedNames": [
			"version",
			"settings",
			"configure",
			"status",
			"set",
			"isStarted",
			"start",
			"done",
			"inc",
			"trickle",
			"promise",
			"render",
			"remove",
			"isRendered",
			"getPositioningCSS"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"settings",
			"configure",
			"status",
			"set",
			"isStarted",
			"start",
			"done",
			"inc",
			"trickle",
			"promise",
			"render",
			"remove",
			"isRendered",
			"getPositioningCSS"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "accepts",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "require-all",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "base64-js",
		"expectedNames": [
			"byteLength",
			"toByteArray",
			"fromByteArray"
		],
		"detectedNames": [
			"byteLength",
			"toByteArray",
			"fromByteArray"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "component-emitter",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "connect-flash",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "koa-logger",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-color",
		"transpiled": true,
		"expectedNames": [
			"AlphaPicker",
			"BlockPicker",
			"CirclePicker",
			"ChromePicker",
			"CompactPicker",
			"GithubPicker",
			"HuePicker",
			"MaterialPicker",
			"PhotoshopPicker",
			"SketchPicker",
			"SliderPicker",
			"SwatchesPicker",
			"TwitterPicker",
			"CustomPicker"
		],
		"detectedNames": [
			"AlphaPicker",
			"BlockPicker",
			"CirclePicker",
			"ChromePicker",
			"CompactPicker",
			"GithubPicker",
			"HuePicker",
			"MaterialPicker",
			"PhotoshopPicker",
			"SketchPicker",
			"SliderPicker",
			"SwatchesPicker",
			"TwitterPicker",
			"CustomPicker"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "findup-sync",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "passport-oauth2",
		"expectedNames": [
			"Strategy",
			"AuthorizationError",
			"TokenError",
			"InternalOAuthError"
		],
		"detectedNames": [
			"Strategy",
			"AuthorizationError",
			"TokenError",
			"InternalOAuthError"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "dockerode",
		"expectedNames": [
			"Container",
			"Image",
			"Volume",
			"Network",
			"Service",
			"Plugin",
			"Secret",
			"Task",
			"Node",
			"Exec"
		],
		"detectedNames": [],
		"missingNames": [
			"Container",
			"Image",
			"Volume",
			"Network",
			"Service",
			"Plugin",
			"Secret",
			"Task",
			"Node",
			"Exec"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "etag",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "immutability-helper",
		"expectedNames": [
			"extend",
			"isEquals",
			"newContext",
			"invariant",
			"Context"
		],
		"detectedNames": [
			"extend",
			"isEquals",
			"invariant",
			"Context"
		],
		"missingNames": [
			"newContext"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "front-matter",
		"expectedNames": [
			"test"
		],
		"detectedNames": [
			"test"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "mssql",
		"expectedNames": [
			"ConnectionPool",
			"Transaction",
			"Request",
			"PreparedStatement",
			"ConnectionError",
			"TransactionError",
			"RequestError",
			"PreparedStatementError",
			"MSSQLError",
			"Table",
			"ISOLATION_LEVEL",
			"TYPES",
			"MAX",
			"map",
			"getTypeByValue",
			"connect",
			"close",
			"on",
			"removeListener",
			"off",
			"query",
			"batch",
			"VarChar",
			"VARCHAR",
			"NVarChar",
			"NVARCHAR",
			"Text",
			"TEXT",
			"Int",
			"INT",
			"BigInt",
			"BIGINT",
			"TinyInt",
			"TINYINT",
			"SmallInt",
			"SMALLINT",
			"Bit",
			"BIT",
			"Float",
			"FLOAT",
			"Numeric",
			"NUMERIC",
			"Decimal",
			"DECIMAL",
			"Real",
			"REAL",
			"Date",
			"DATE",
			"DateTime",
			"DATETIME",
			"DateTime2",
			"DATETIME2",
			"DateTimeOffset",
			"DATETIMEOFFSET",
			"SmallDateTime",
			"SMALLDATETIME",
			"Time",
			"TIME",
			"UniqueIdentifier",
			"UNIQUEIDENTIFIER",
			"SmallMoney",
			"SMALLMONEY",
			"Money",
			"MONEY",
			"Binary",
			"BINARY",
			"VarBinary",
			"VARBINARY",
			"Image",
			"IMAGE",
			"Xml",
			"XML",
			"Char",
			"CHAR",
			"NChar",
			"NCHAR",
			"NText",
			"NTEXT",
			"TVP",
			"UDT",
			"Geography",
			"GEOGRAPHY",
			"Geometry",
			"GEOMETRY",
			"Variant",
			"VARIANT",
			"Promise"
		],
		"detectedNames": [
			"Promise"
		],
		"missingNames": [
			"ConnectionPool",
			"Transaction",
			"Request",
			"PreparedStatement",
			"ConnectionError",
			"TransactionError",
			"RequestError",
			"PreparedStatementError",
			"MSSQLError",
			"Table",
			"ISOLATION_LEVEL",
			"TYPES",
			"MAX",
			"map",
			"getTypeByValue",
			"connect",
			"close",
			"on",
			"removeListener",
			"off",
			"query",
			"batch",
			"VarChar",
			"VARCHAR",
			"NVarChar",
			"NVARCHAR",
			"Text",
			"TEXT",
			"Int",
			"INT",
			"BigInt",
			"BIGINT",
			"TinyInt",
			"TINYINT",
			"SmallInt",
			"SMALLINT",
			"Bit",
			"BIT",
			"Float",
			"FLOAT",
			"Numeric",
			"NUMERIC",
			"Decimal",
			"DECIMAL",
			"Real",
			"REAL",
			"Date",
			"DATE",
			"DateTime",
			"DATETIME",
			"DateTime2",
			"DATETIME2",
			"DateTimeOffset",
			"DATETIMEOFFSET",
			"SmallDateTime",
			"SMALLDATETIME",
			"Time",
			"TIME",
			"UniqueIdentifier",
			"UNIQUEIDENTIFIER",
			"SmallMoney",
			"SMALLMONEY",
			"Money",
			"MONEY",
			"Binary",
			"BINARY",
			"VarBinary",
			"VARBINARY",
			"Image",
			"IMAGE",
			"Xml",
			"XML",
			"Char",
			"CHAR",
			"NChar",
			"NCHAR",
			"NText",
			"NTEXT",
			"TVP",
			"UDT",
			"Geography",
			"GEOGRAPHY",
			"Geometry",
			"GEOMETRY",
			"Variant",
			"VARIANT"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "react-virtualized",
		"transpiled": true,
		"expectedNames": [
			"ArrowKeyStepper",
			"AutoSizer",
			"CellMeasurer",
			"CellMeasurerCache",
			"Collection",
			"ColumnSizer",
			"accessibilityOverscanIndicesGetter",
			"defaultCellRangeRenderer",
			"defaultOverscanIndicesGetter",
			"Grid",
			"InfiniteLoader",
			"List",
			"createMasonryCellPositioner",
			"Masonry",
			"MultiGrid",
			"ScrollSync",
			"createTableMultiSort",
			"defaultTableCellDataGetter",
			"defaultTableCellRenderer",
			"defaultTableHeaderRenderer",
			"defaultTableHeaderRowRenderer",
			"defaultTableRowRenderer",
			"Table",
			"Column",
			"SortDirection",
			"SortIndicator",
			"WindowScroller"
		],
		"detectedNames": [
			"ArrowKeyStepper",
			"AutoSizer",
			"CellMeasurer",
			"CellMeasurerCache",
			"Collection",
			"ColumnSizer",
			"accessibilityOverscanIndicesGetter",
			"defaultCellRangeRenderer",
			"defaultOverscanIndicesGetter",
			"Grid",
			"InfiniteLoader",
			"List",
			"createMasonryCellPositioner",
			"Masonry",
			"MultiGrid",
			"ScrollSync",
			"createTableMultiSort",
			"defaultTableCellDataGetter",
			"defaultTableCellRenderer",
			"defaultTableHeaderRenderer",
			"defaultTableHeaderRowRenderer",
			"defaultTableRowRenderer",
			"Table",
			"Column",
			"SortDirection",
			"SortIndicator",
			"WindowScroller"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "fork-ts-checker-webpack-plugin-alt",
		"expectedNames": [
			"createFormatter",
			"DEFAULT_MEMORY_LIMIT",
			"ONE_CPU",
			"ALL_CPUS",
			"ONE_CPU_FREE",
			"TWO_CPUS_FREE"
		],
		"detectedNames": [],
		"missingNames": [
			"createFormatter",
			"DEFAULT_MEMORY_LIMIT",
			"ONE_CPU",
			"ALL_CPUS",
			"ONE_CPU_FREE",
			"TWO_CPUS_FREE"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "slugify",
		"expectedNames": [
			"extend"
		],
		"detectedNames": [],
		"missingNames": [
			"extend"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-dir",
		"expectedNames": [
			"promiseFiles",
			"files",
			"paths",
			"subdirs",
			"readFiles",
			"readFilesStream"
		],
		"detectedNames": [
			"readFiles",
			"readFilesStream"
		],
		"missingNames": [
			"promiseFiles",
			"files",
			"paths",
			"subdirs"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-transform-regenerator",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "keypress",
		"expectedNames": [
			"enableMouse",
			"disableMouse"
		],
		"detectedNames": [
			"enableMouse",
			"disableMouse"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.foreach",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "grunt-contrib-concat",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "split2",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "extend-shallow",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "xregexp",
		"expectedNames": [
			"version",
			"_clipDuplicates",
			"_hasNativeFlag",
			"_dec",
			"_hex",
			"_pad4",
			"addToken",
			"cache",
			"escape",
			"exec",
			"forEach",
			"globalize",
			"install",
			"isInstalled",
			"isRegExp",
			"match",
			"matchChain",
			"replace",
			"replaceEach",
			"split",
			"test",
			"uninstall",
			"union",
			"tag",
			"build",
			"matchRecursive",
			"addUnicodeData",
			"_getUnicodeProperty"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"_clipDuplicates",
			"_hasNativeFlag",
			"_dec",
			"_hex",
			"_pad4",
			"addToken",
			"cache",
			"escape",
			"exec",
			"forEach",
			"globalize",
			"install",
			"isInstalled",
			"isRegExp",
			"match",
			"matchChain",
			"replace",
			"replaceEach",
			"split",
			"test",
			"uninstall",
			"union",
			"tag",
			"build",
			"matchRecursive",
			"addUnicodeData",
			"_getUnicodeProperty"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "awesome-typescript-loader",
		"expectedNames": [
			"TsConfigPathsPlugin",
			"CheckerPlugin"
		],
		"detectedNames": [],
		"missingNames": [
			"TsConfigPathsPlugin",
			"CheckerPlugin"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "hash-sum",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-preset-stage-3",
		"expectedNames": [
			"plugins"
		],
		"detectedNames": [],
		"missingNames": [
			"plugins"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "restler",
		"expectedNames": [
			"Request",
			"Service",
			"request",
			"service",
			"get",
			"patch",
			"post",
			"put",
			"del",
			"head",
			"json",
			"postJson",
			"putJson",
			"patchJson",
			"parsers",
			"file",
			"data"
		],
		"detectedNames": [],
		"missingNames": [
			"Request",
			"Service",
			"request",
			"service",
			"get",
			"patch",
			"post",
			"put",
			"del",
			"head",
			"json",
			"postJson",
			"putJson",
			"patchJson",
			"parsers",
			"file",
			"data"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.flatten",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "intl",
		"expectedNames": [
			"__localeSensitiveProtos"
		],
		"detectedNames": [],
		"missingNames": [
			"__localeSensitiveProtos"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-dynamic-import-node",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "uglify-es",
		"expectedNames": [
			"FILES",
			"AST_Token",
			"AST_Node",
			"AST_Statement",
			"AST_Debugger",
			"AST_Directive",
			"AST_SimpleStatement",
			"AST_Block",
			"AST_BlockStatement",
			"AST_EmptyStatement",
			"AST_StatementWithBody",
			"AST_LabeledStatement",
			"AST_IterationStatement",
			"AST_DWLoop",
			"AST_Do",
			"AST_While",
			"AST_For",
			"AST_ForIn",
			"AST_ForOf",
			"AST_With",
			"AST_Scope",
			"AST_Toplevel",
			"AST_Expansion",
			"AST_Lambda",
			"AST_Accessor",
			"AST_Function",
			"AST_Arrow",
			"AST_Defun",
			"AST_Destructuring",
			"AST_PrefixedTemplateString",
			"AST_TemplateString",
			"AST_TemplateSegment",
			"AST_Jump",
			"AST_Exit",
			"AST_Return",
			"AST_Throw",
			"AST_LoopControl",
			"AST_Break",
			"AST_Continue",
			"AST_If",
			"AST_Switch",
			"AST_SwitchBranch",
			"AST_Default",
			"AST_Case",
			"AST_Try",
			"AST_Catch",
			"AST_Finally",
			"AST_Definitions",
			"AST_Var",
			"AST_Let",
			"AST_Const",
			"AST_NameMapping",
			"AST_Import",
			"AST_Export",
			"AST_VarDef",
			"AST_Call",
			"AST_New",
			"AST_Sequence",
			"AST_PropAccess",
			"AST_Dot",
			"AST_Sub",
			"AST_Unary",
			"AST_UnaryPrefix",
			"AST_UnaryPostfix",
			"AST_Binary",
			"AST_Conditional",
			"AST_Assign",
			"AST_DefaultAssign",
			"AST_Array",
			"AST_Object",
			"AST_ObjectProperty",
			"AST_ObjectKeyVal",
			"AST_ObjectSetter",
			"AST_ObjectGetter",
			"AST_ConciseMethod",
			"AST_Class",
			"AST_DefClass",
			"AST_ClassExpression",
			"AST_Symbol",
			"AST_NewTarget",
			"AST_SymbolDeclaration",
			"AST_SymbolVar",
			"AST_SymbolBlockDeclaration",
			"AST_SymbolConst",
			"AST_SymbolLet",
			"AST_SymbolFunarg",
			"AST_SymbolDefun",
			"AST_SymbolMethod",
			"AST_SymbolLambda",
			"AST_SymbolDefClass",
			"AST_SymbolClass",
			"AST_SymbolCatch",
			"AST_SymbolImport",
			"AST_SymbolImportForeign",
			"AST_Label",
			"AST_SymbolRef",
			"AST_SymbolExport",
			"AST_SymbolExportForeign",
			"AST_LabelRef",
			"AST_This",
			"AST_Super",
			"AST_Constant",
			"AST_String",
			"AST_Number",
			"AST_RegExp",
			"AST_Atom",
			"AST_Null",
			"AST_NaN",
			"AST_Undefined",
			"AST_Hole",
			"AST_Infinity",
			"AST_Boolean",
			"AST_False",
			"AST_True",
			"AST_Await",
			"AST_Yield",
			"Dictionary",
			"TreeWalker",
			"TreeTransformer",
			"minify",
			"parse",
			"_push_uniq",
			"describe_ast",
			"default_options"
		],
		"detectedNames": [],
		"missingNames": [
			"FILES",
			"AST_Token",
			"AST_Node",
			"AST_Statement",
			"AST_Debugger",
			"AST_Directive",
			"AST_SimpleStatement",
			"AST_Block",
			"AST_BlockStatement",
			"AST_EmptyStatement",
			"AST_StatementWithBody",
			"AST_LabeledStatement",
			"AST_IterationStatement",
			"AST_DWLoop",
			"AST_Do",
			"AST_While",
			"AST_For",
			"AST_ForIn",
			"AST_ForOf",
			"AST_With",
			"AST_Scope",
			"AST_Toplevel",
			"AST_Expansion",
			"AST_Lambda",
			"AST_Accessor",
			"AST_Function",
			"AST_Arrow",
			"AST_Defun",
			"AST_Destructuring",
			"AST_PrefixedTemplateString",
			"AST_TemplateString",
			"AST_TemplateSegment",
			"AST_Jump",
			"AST_Exit",
			"AST_Return",
			"AST_Throw",
			"AST_LoopControl",
			"AST_Break",
			"AST_Continue",
			"AST_If",
			"AST_Switch",
			"AST_SwitchBranch",
			"AST_Default",
			"AST_Case",
			"AST_Try",
			"AST_Catch",
			"AST_Finally",
			"AST_Definitions",
			"AST_Var",
			"AST_Let",
			"AST_Const",
			"AST_NameMapping",
			"AST_Import",
			"AST_Export",
			"AST_VarDef",
			"AST_Call",
			"AST_New",
			"AST_Sequence",
			"AST_PropAccess",
			"AST_Dot",
			"AST_Sub",
			"AST_Unary",
			"AST_UnaryPrefix",
			"AST_UnaryPostfix",
			"AST_Binary",
			"AST_Conditional",
			"AST_Assign",
			"AST_DefaultAssign",
			"AST_Array",
			"AST_Object",
			"AST_ObjectProperty",
			"AST_ObjectKeyVal",
			"AST_ObjectSetter",
			"AST_ObjectGetter",
			"AST_ConciseMethod",
			"AST_Class",
			"AST_DefClass",
			"AST_ClassExpression",
			"AST_Symbol",
			"AST_NewTarget",
			"AST_SymbolDeclaration",
			"AST_SymbolVar",
			"AST_SymbolBlockDeclaration",
			"AST_SymbolConst",
			"AST_SymbolLet",
			"AST_SymbolFunarg",
			"AST_SymbolDefun",
			"AST_SymbolMethod",
			"AST_SymbolLambda",
			"AST_SymbolDefClass",
			"AST_SymbolClass",
			"AST_SymbolCatch",
			"AST_SymbolImport",
			"AST_SymbolImportForeign",
			"AST_Label",
			"AST_SymbolRef",
			"AST_SymbolExport",
			"AST_SymbolExportForeign",
			"AST_LabelRef",
			"AST_This",
			"AST_Super",
			"AST_Constant",
			"AST_String",
			"AST_Number",
			"AST_RegExp",
			"AST_Atom",
			"AST_Null",
			"AST_NaN",
			"AST_Undefined",
			"AST_Hole",
			"AST_Infinity",
			"AST_Boolean",
			"AST_False",
			"AST_True",
			"AST_Await",
			"AST_Yield",
			"Dictionary",
			"TreeWalker",
			"TreeTransformer",
			"minify",
			"parse",
			"_push_uniq",
			"describe_ast",
			"default_options"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-lifecycles-compat",
		"transpiled": true,
		"expectedNames": [
			"polyfill"
		],
		"detectedNames": [
			"polyfill"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "lint-staged",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/plugin-proposal-export-default-from",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "normalize-wheel",
		"expectedNames": [
			"getEventType"
		],
		"detectedNames": [],
		"missingNames": [
			"getEventType"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "is-promise",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pako",
		"expectedNames": [
			"Deflate",
			"deflate",
			"deflateRaw",
			"gzip",
			"Inflate",
			"inflate",
			"inflateRaw",
			"ungzip",
			"Z_NO_FLUSH",
			"Z_PARTIAL_FLUSH",
			"Z_SYNC_FLUSH",
			"Z_FULL_FLUSH",
			"Z_FINISH",
			"Z_BLOCK",
			"Z_TREES",
			"Z_OK",
			"Z_STREAM_END",
			"Z_NEED_DICT",
			"Z_ERRNO",
			"Z_STREAM_ERROR",
			"Z_DATA_ERROR",
			"Z_BUF_ERROR",
			"Z_NO_COMPRESSION",
			"Z_BEST_SPEED",
			"Z_BEST_COMPRESSION",
			"Z_DEFAULT_COMPRESSION",
			"Z_FILTERED",
			"Z_HUFFMAN_ONLY",
			"Z_RLE",
			"Z_FIXED",
			"Z_DEFAULT_STRATEGY",
			"Z_BINARY",
			"Z_TEXT",
			"Z_UNKNOWN",
			"Z_DEFLATED"
		],
		"detectedNames": [],
		"missingNames": [
			"Deflate",
			"deflate",
			"deflateRaw",
			"gzip",
			"Inflate",
			"inflate",
			"inflateRaw",
			"ungzip",
			"Z_NO_FLUSH",
			"Z_PARTIAL_FLUSH",
			"Z_SYNC_FLUSH",
			"Z_FULL_FLUSH",
			"Z_FINISH",
			"Z_BLOCK",
			"Z_TREES",
			"Z_OK",
			"Z_STREAM_END",
			"Z_NEED_DICT",
			"Z_ERRNO",
			"Z_STREAM_ERROR",
			"Z_DATA_ERROR",
			"Z_BUF_ERROR",
			"Z_NO_COMPRESSION",
			"Z_BEST_SPEED",
			"Z_BEST_COMPRESSION",
			"Z_DEFAULT_COMPRESSION",
			"Z_FILTERED",
			"Z_HUFFMAN_ONLY",
			"Z_RLE",
			"Z_FIXED",
			"Z_DEFAULT_STRATEGY",
			"Z_BINARY",
			"Z_TEXT",
			"Z_UNKNOWN",
			"Z_DEFLATED"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pngjs",
		"expectedNames": [
			"PNG"
		],
		"detectedNames": [
			"PNG"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "utils-merge",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gray-matter",
		"expectedNames": [
			"engines",
			"stringify",
			"read",
			"test",
			"language",
			"cache",
			"clearCache"
		],
		"detectedNames": [],
		"missingNames": [
			"engines",
			"stringify",
			"read",
			"test",
			"language",
			"cache",
			"clearCache"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "postcss-nested",
		"expectedNames": [
			"postcss"
		],
		"detectedNames": [
			"postcss"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pretty-error",
		"expectedNames": [
			"_filters",
			"_getDefaultStyle",
			"start",
			"stop"
		],
		"detectedNames": [],
		"missingNames": [
			"_filters",
			"_getDefaultStyle",
			"start",
			"stop"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "rc-slider",
		"transpiled": true,
		"expectedNames": [
			"Range",
			"Handle",
			"createSliderWithTooltip"
		],
		"detectedNames": [
			"Range",
			"Handle",
			"createSliderWithTooltip"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "node-static",
		"expectedNames": [
			"Server",
			"version",
			"mime"
		],
		"detectedNames": [
			"Server",
			"version",
			"mime"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "decompress",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gh-pages",
		"expectedNames": [
			"defaults",
			"publish",
			"clean"
		],
		"detectedNames": [
			"defaults",
			"publish",
			"clean"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cli-table2",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "os",
		"expectedNames": [
			"arch",
			"cpus",
			"endianness",
			"freemem",
			"getPriority",
			"homedir",
			"hostname",
			"loadavg",
			"networkInterfaces",
			"platform",
			"release",
			"setPriority",
			"tmpdir",
			"totalmem",
			"type",
			"userInfo",
			"uptime",
			"version",
			"constants",
			"EOL"
		],
		"detectedNames": [
			"arch",
			"cpus",
			"endianness",
			"freemem",
			"getPriority",
			"homedir",
			"hostname",
			"loadavg",
			"networkInterfaces",
			"platform",
			"release",
			"setPriority",
			"tmpdir",
			"totalmem",
			"type",
			"userInfo",
			"uptime",
			"version",
			"constants",
			"EOL"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "reactstrap",
		"transpiled": true,
		"expectedNames": [
			"DropdownContext",
			"Util",
			"Polyfill",
			"Container",
			"Row",
			"Col",
			"Navbar",
			"NavbarBrand",
			"NavbarText",
			"NavbarToggler",
			"Nav",
			"NavItem",
			"NavLink",
			"Breadcrumb",
			"BreadcrumbItem",
			"Button",
			"ButtonToggle",
			"ButtonDropdown",
			"ButtonGroup",
			"ButtonToolbar",
			"Dropdown",
			"DropdownItem",
			"DropdownMenu",
			"DropdownToggle",
			"Fade",
			"Badge",
			"Card",
			"CardGroup",
			"CardDeck",
			"CardColumns",
			"CardBody",
			"CardLink",
			"CardFooter",
			"CardHeader",
			"CardImg",
			"CardImgOverlay",
			"Carousel",
			"UncontrolledCarousel",
			"CarouselControl",
			"CarouselItem",
			"CarouselIndicators",
			"CarouselCaption",
			"CardSubtitle",
			"CardText",
			"CardTitle",
			"CustomFileInput",
			"CustomInput",
			"PopperContent",
			"PopperTargetHelper",
			"Popover",
			"UncontrolledPopover",
			"PopoverHeader",
			"PopoverBody",
			"Progress",
			"Modal",
			"ModalHeader",
			"ModalBody",
			"ModalFooter",
			"Tooltip",
			"Table",
			"ListGroup",
			"Form",
			"FormFeedback",
			"FormGroup",
			"FormText",
			"Input",
			"InputGroup",
			"InputGroupAddon",
			"InputGroupButtonDropdown",
			"InputGroupText",
			"Label",
			"Media",
			"Pagination",
			"PaginationItem",
			"PaginationLink",
			"TabContent",
			"TabPane",
			"Jumbotron",
			"Alert",
			"Toast",
			"ToastBody",
			"ToastHeader",
			"Collapse",
			"ListGroupItem",
			"ListGroupItemHeading",
			"ListGroupItemText",
			"UncontrolledAlert",
			"UncontrolledButtonDropdown",
			"UncontrolledCollapse",
			"UncontrolledDropdown",
			"UncontrolledTooltip",
			"Spinner"
		],
		"detectedNames": [
			"DropdownContext",
			"Util",
			"Polyfill",
			"Container",
			"Row",
			"Col",
			"Navbar",
			"NavbarBrand",
			"NavbarText",
			"NavbarToggler",
			"Nav",
			"NavItem",
			"NavLink",
			"Breadcrumb",
			"BreadcrumbItem",
			"Button",
			"ButtonToggle",
			"ButtonDropdown",
			"ButtonGroup",
			"ButtonToolbar",
			"Dropdown",
			"DropdownItem",
			"DropdownMenu",
			"DropdownToggle",
			"Fade",
			"Badge",
			"Card",
			"CardGroup",
			"CardDeck",
			"CardColumns",
			"CardBody",
			"CardLink",
			"CardFooter",
			"CardHeader",
			"CardImg",
			"CardImgOverlay",
			"Carousel",
			"UncontrolledCarousel",
			"CarouselControl",
			"CarouselItem",
			"CarouselIndicators",
			"CarouselCaption",
			"CardSubtitle",
			"CardText",
			"CardTitle",
			"CustomFileInput",
			"CustomInput",
			"PopperContent",
			"PopperTargetHelper",
			"Popover",
			"UncontrolledPopover",
			"PopoverHeader",
			"PopoverBody",
			"Progress",
			"Modal",
			"ModalHeader",
			"ModalBody",
			"ModalFooter",
			"Tooltip",
			"Table",
			"ListGroup",
			"Form",
			"FormFeedback",
			"FormGroup",
			"FormText",
			"Input",
			"InputGroup",
			"InputGroupAddon",
			"InputGroupButtonDropdown",
			"InputGroupText",
			"Label",
			"Media",
			"Pagination",
			"PaginationItem",
			"PaginationLink",
			"TabContent",
			"TabPane",
			"Jumbotron",
			"Alert",
			"Toast",
			"ToastBody",
			"ToastHeader",
			"Collapse",
			"ListGroupItem",
			"ListGroupItemHeading",
			"ListGroupItemText",
			"UncontrolledAlert",
			"UncontrolledButtonDropdown",
			"UncontrolledCollapse",
			"UncontrolledDropdown",
			"UncontrolledTooltip",
			"Spinner"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "sanitize-html",
		"expectedNames": [
			"defaults",
			"simpleTransform"
		],
		"detectedNames": [],
		"missingNames": [
			"defaults",
			"simpleTransform"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "extract-zip",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "gulp-shell",
		"expectedNames": [
			"task"
		],
		"detectedNames": [],
		"missingNames": [
			"task"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "vue-i18n",
		"expectedNames": [
			"install",
			"version"
		],
		"detectedNames": [],
		"missingNames": [
			"install",
			"version"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "http-status-codes",
		"transpiled": true,
		"expectedNames": [
			"getStatusCode",
			"getReasonPhrase",
			"getStatusText",
			"StatusCodes",
			"ReasonPhrases",
			"ACCEPTED",
			"BAD_GATEWAY",
			"BAD_REQUEST",
			"CONFLICT",
			"CONTINUE",
			"CREATED",
			"EXPECTATION_FAILED",
			"FAILED_DEPENDENCY",
			"FORBIDDEN",
			"GATEWAY_TIMEOUT",
			"GONE",
			"HTTP_VERSION_NOT_SUPPORTED",
			"IM_A_TEAPOT",
			"INSUFFICIENT_SPACE_ON_RESOURCE",
			"INSUFFICIENT_STORAGE",
			"INTERNAL_SERVER_ERROR",
			"LENGTH_REQUIRED",
			"LOCKED",
			"METHOD_FAILURE",
			"METHOD_NOT_ALLOWED",
			"MOVED_PERMANENTLY",
			"MOVED_TEMPORARILY",
			"MULTI_STATUS",
			"MULTIPLE_CHOICES",
			"NETWORK_AUTHENTICATION_REQUIRED",
			"NO_CONTENT",
			"NON_AUTHORITATIVE_INFORMATION",
			"NOT_ACCEPTABLE",
			"NOT_FOUND",
			"NOT_IMPLEMENTED",
			"NOT_MODIFIED",
			"OK",
			"PARTIAL_CONTENT",
			"PAYMENT_REQUIRED",
			"PERMANENT_REDIRECT",
			"PRECONDITION_FAILED",
			"PRECONDITION_REQUIRED",
			"PROCESSING",
			"PROXY_AUTHENTICATION_REQUIRED",
			"REQUEST_HEADER_FIELDS_TOO_LARGE",
			"REQUEST_TIMEOUT",
			"REQUEST_TOO_LONG",
			"REQUEST_URI_TOO_LONG",
			"REQUESTED_RANGE_NOT_SATISFIABLE",
			"RESET_CONTENT",
			"SEE_OTHER",
			"SERVICE_UNAVAILABLE",
			"SWITCHING_PROTOCOLS",
			"TEMPORARY_REDIRECT",
			"TOO_MANY_REQUESTS",
			"UNAUTHORIZED",
			"UNPROCESSABLE_ENTITY",
			"UNSUPPORTED_MEDIA_TYPE",
			"USE_PROXY"
		],
		"detectedNames": [
			"getStatusCode",
			"getReasonPhrase",
			"getStatusText",
			"StatusCodes",
			"ReasonPhrases",
			"ACCEPTED",
			"BAD_GATEWAY",
			"BAD_REQUEST",
			"CONFLICT",
			"CONTINUE",
			"CREATED",
			"EXPECTATION_FAILED",
			"FAILED_DEPENDENCY",
			"FORBIDDEN",
			"GATEWAY_TIMEOUT",
			"GONE",
			"HTTP_VERSION_NOT_SUPPORTED",
			"IM_A_TEAPOT",
			"INSUFFICIENT_SPACE_ON_RESOURCE",
			"INSUFFICIENT_STORAGE",
			"INTERNAL_SERVER_ERROR",
			"LENGTH_REQUIRED",
			"LOCKED",
			"METHOD_FAILURE",
			"METHOD_NOT_ALLOWED",
			"MOVED_PERMANENTLY",
			"MOVED_TEMPORARILY",
			"MULTI_STATUS",
			"MULTIPLE_CHOICES",
			"NETWORK_AUTHENTICATION_REQUIRED",
			"NO_CONTENT",
			"NON_AUTHORITATIVE_INFORMATION",
			"NOT_ACCEPTABLE",
			"NOT_FOUND",
			"NOT_IMPLEMENTED",
			"NOT_MODIFIED",
			"OK",
			"PARTIAL_CONTENT",
			"PAYMENT_REQUIRED",
			"PERMANENT_REDIRECT",
			"PRECONDITION_FAILED",
			"PRECONDITION_REQUIRED",
			"PROCESSING",
			"PROXY_AUTHENTICATION_REQUIRED",
			"REQUEST_HEADER_FIELDS_TOO_LARGE",
			"REQUEST_TIMEOUT",
			"REQUEST_TOO_LONG",
			"REQUEST_URI_TOO_LONG",
			"REQUESTED_RANGE_NOT_SATISFIABLE",
			"RESET_CONTENT",
			"SEE_OTHER",
			"SERVICE_UNAVAILABLE",
			"SWITCHING_PROTOCOLS",
			"TEMPORARY_REDIRECT",
			"TOO_MANY_REQUESTS",
			"UNAUTHORIZED",
			"UNPROCESSABLE_ENTITY",
			"UNSUPPORTED_MEDIA_TYPE",
			"USE_PROXY"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "hogan.js",
		"expectedNames": [
			"tags",
			"scan",
			"stringify",
			"generate",
			"wrapMain",
			"template",
			"makeTemplate",
			"makePartials",
			"codegen",
			"walk",
			"parse",
			"cache",
			"cacheKey",
			"compile",
			"Template"
		],
		"detectedNames": [],
		"missingNames": [
			"tags",
			"scan",
			"stringify",
			"generate",
			"wrapMain",
			"template",
			"makeTemplate",
			"makePartials",
			"codegen",
			"walk",
			"parse",
			"cache",
			"cacheKey",
			"compile",
			"Template"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "soap",
		"transpiled": true,
		"expectedNames": [
			"security",
			"Client",
			"HttpClient",
			"BasicAuthSecurity",
			"BearerSecurity",
			"ClientSSLSecurity",
			"ClientSSLSecurityPFX",
			"NTLMSecurity",
			"WSSecurity",
			"WSSecurityCert",
			"Server",
			"passwordDigest",
			"WSDL",
			"createClient",
			"createClientAsync",
			"listen"
		],
		"detectedNames": [
			"security",
			"Client",
			"HttpClient",
			"BasicAuthSecurity",
			"BearerSecurity",
			"ClientSSLSecurity",
			"ClientSSLSecurityPFX",
			"NTLMSecurity",
			"WSSecurity",
			"WSSecurityCert",
			"Server",
			"passwordDigest",
			"WSDL",
			"createClient",
			"createClientAsync",
			"listen"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "randombytes",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "decamelize",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bson",
		"expectedNames": [
			"BSON_INT32_MAX",
			"BSON_INT32_MIN",
			"BSON_INT64_MAX",
			"BSON_INT64_MIN",
			"JS_INT_MAX",
			"JS_INT_MIN",
			"BSON_DATA_NUMBER",
			"BSON_DATA_STRING",
			"BSON_DATA_OBJECT",
			"BSON_DATA_ARRAY",
			"BSON_DATA_BINARY",
			"BSON_DATA_UNDEFINED",
			"BSON_DATA_OID",
			"BSON_DATA_BOOLEAN",
			"BSON_DATA_DATE",
			"BSON_DATA_NULL",
			"BSON_DATA_REGEXP",
			"BSON_DATA_DBPOINTER",
			"BSON_DATA_CODE",
			"BSON_DATA_SYMBOL",
			"BSON_DATA_CODE_W_SCOPE",
			"BSON_DATA_INT",
			"BSON_DATA_TIMESTAMP",
			"BSON_DATA_LONG",
			"BSON_DATA_DECIMAL128",
			"BSON_DATA_MIN_KEY",
			"BSON_DATA_MAX_KEY",
			"BSON_BINARY_SUBTYPE_DEFAULT",
			"BSON_BINARY_SUBTYPE_FUNCTION",
			"BSON_BINARY_SUBTYPE_BYTE_ARRAY",
			"BSON_BINARY_SUBTYPE_UUID",
			"BSON_BINARY_SUBTYPE_MD5",
			"BSON_BINARY_SUBTYPE_USER_DEFINED",
			"Code",
			"Map",
			"BSONSymbol",
			"DBRef",
			"Binary",
			"ObjectId",
			"Long",
			"Timestamp",
			"Double",
			"Int32",
			"MinKey",
			"MaxKey",
			"BSONRegExp",
			"Decimal128",
			"serialize",
			"serializeWithBufferAndIndex",
			"deserialize",
			"calculateObjectSize",
			"deserializeStream",
			"setInternalBufferSize",
			"ObjectID",
			"EJSON"
		],
		"detectedNames": [
			"BSON_INT32_MAX"
		],
		"missingNames": [
			"BSON_INT32_MIN",
			"BSON_INT64_MAX",
			"BSON_INT64_MIN",
			"JS_INT_MAX",
			"JS_INT_MIN",
			"BSON_DATA_NUMBER",
			"BSON_DATA_STRING",
			"BSON_DATA_OBJECT",
			"BSON_DATA_ARRAY",
			"BSON_DATA_BINARY",
			"BSON_DATA_UNDEFINED",
			"BSON_DATA_OID",
			"BSON_DATA_BOOLEAN",
			"BSON_DATA_DATE",
			"BSON_DATA_NULL",
			"BSON_DATA_REGEXP",
			"BSON_DATA_DBPOINTER",
			"BSON_DATA_CODE",
			"BSON_DATA_SYMBOL",
			"BSON_DATA_CODE_W_SCOPE",
			"BSON_DATA_INT",
			"BSON_DATA_TIMESTAMP",
			"BSON_DATA_LONG",
			"BSON_DATA_DECIMAL128",
			"BSON_DATA_MIN_KEY",
			"BSON_DATA_MAX_KEY",
			"BSON_BINARY_SUBTYPE_DEFAULT",
			"BSON_BINARY_SUBTYPE_FUNCTION",
			"BSON_BINARY_SUBTYPE_BYTE_ARRAY",
			"BSON_BINARY_SUBTYPE_UUID",
			"BSON_BINARY_SUBTYPE_MD5",
			"BSON_BINARY_SUBTYPE_USER_DEFINED",
			"Code",
			"Map",
			"BSONSymbol",
			"DBRef",
			"Binary",
			"ObjectId",
			"Long",
			"Timestamp",
			"Double",
			"Int32",
			"MinKey",
			"MaxKey",
			"BSONRegExp",
			"Decimal128",
			"serialize",
			"serializeWithBufferAndIndex",
			"deserialize",
			"calculateObjectSize",
			"deserializeStream",
			"setInternalBufferSize",
			"ObjectID",
			"EJSON"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "imagemin-pngquant",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "arrify",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bytebuffer",
		"expectedNames": [
			"VERSION",
			"LITTLE_ENDIAN",
			"BIG_ENDIAN",
			"DEFAULT_CAPACITY",
			"DEFAULT_ENDIAN",
			"DEFAULT_NOASSERT",
			"Long",
			"accessor",
			"allocate",
			"concat",
			"isByteBuffer",
			"type",
			"wrap",
			"MAX_VARINT32_BYTES",
			"calculateVarint32",
			"zigZagEncode32",
			"zigZagDecode32",
			"MAX_VARINT64_BYTES",
			"calculateVarint64",
			"zigZagEncode64",
			"zigZagDecode64",
			"METRICS_CHARS",
			"METRICS_BYTES",
			"calculateUTF8Chars",
			"calculateUTF8Bytes",
			"calculateString",
			"fromBase64",
			"btoa",
			"atob",
			"fromBinary",
			"fromDebug",
			"fromHex",
			"fromUTF8",
			"memcpy"
		],
		"detectedNames": [],
		"missingNames": [
			"VERSION",
			"LITTLE_ENDIAN",
			"BIG_ENDIAN",
			"DEFAULT_CAPACITY",
			"DEFAULT_ENDIAN",
			"DEFAULT_NOASSERT",
			"Long",
			"accessor",
			"allocate",
			"concat",
			"isByteBuffer",
			"type",
			"wrap",
			"MAX_VARINT32_BYTES",
			"calculateVarint32",
			"zigZagEncode32",
			"zigZagDecode32",
			"MAX_VARINT64_BYTES",
			"calculateVarint64",
			"zigZagEncode64",
			"zigZagDecode64",
			"METRICS_CHARS",
			"METRICS_BYTES",
			"calculateUTF8Chars",
			"calculateUTF8Bytes",
			"calculateString",
			"fromBase64",
			"btoa",
			"atob",
			"fromBinary",
			"fromDebug",
			"fromHex",
			"fromUTF8",
			"memcpy"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "lodash.isobject",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "columnify",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "fluent-ffmpeg",
		"expectedNames": [
			"setFfmpegPath",
			"setFfprobePath",
			"setFlvtoolPath",
			"getAvailableFilters",
			"availableFilters",
			"getAvailableCodecs",
			"availableCodecs",
			"getAvailableFormats",
			"availableFormats",
			"getAvailableEncoders",
			"availableEncoders",
			"ffprobe"
		],
		"detectedNames": [],
		"missingNames": [
			"setFfmpegPath",
			"setFfprobePath",
			"setFlvtoolPath",
			"getAvailableFilters",
			"availableFilters",
			"getAvailableCodecs",
			"availableCodecs",
			"getAvailableFormats",
			"availableFormats",
			"getAvailableEncoders",
			"availableEncoders",
			"ffprobe"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "xml-js",
		"expectedNames": [
			"xml2js",
			"xml2json",
			"js2xml",
			"json2xml"
		],
		"detectedNames": [
			"xml2js",
			"xml2json",
			"js2xml",
			"json2xml"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "sockjs-client",
		"expectedNames": [
			"version",
			"CONNECTING",
			"OPEN",
			"CLOSING",
			"CLOSED",
			"bootstrap_iframe"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"CONNECTING",
			"OPEN",
			"CLOSING",
			"CLOSED",
			"bootstrap_iframe"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "resolve-from",
		"expectedNames": [
			"silent"
		],
		"detectedNames": [
			"silent"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "es6-error",
		"expectedNames": [
			"stackTraceLimit"
		],
		"detectedNames": [],
		"missingNames": [
			"stackTraceLimit"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-slick",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "typeorm",
		"transpiled": true,
		"expectedNames": [
			"useContainer",
			"getFromContainer",
			"QueryFailedError",
			"Column",
			"CreateDateColumn",
			"DeleteDateColumn",
			"PrimaryGeneratedColumn",
			"PrimaryColumn",
			"UpdateDateColumn",
			"VersionColumn",
			"ViewColumn",
			"ObjectIdColumn",
			"AfterInsert",
			"AfterLoad",
			"AfterRemove",
			"AfterUpdate",
			"BeforeInsert",
			"BeforeRemove",
			"BeforeUpdate",
			"EventSubscriber",
			"JoinColumn",
			"JoinTable",
			"ManyToMany",
			"ManyToOne",
			"OneToMany",
			"OneToOne",
			"RelationCount",
			"RelationId",
			"Entity",
			"ChildEntity",
			"TableInheritance",
			"ViewEntity",
			"Transaction",
			"TransactionManager",
			"TransactionRepository",
			"TreeLevelColumn",
			"TreeParent",
			"TreeChildren",
			"Tree",
			"Index",
			"Unique",
			"Check",
			"Exclusion",
			"Generated",
			"EntityRepository",
			"Any",
			"Between",
			"Equal",
			"In",
			"IsNull",
			"LessThan",
			"LessThanOrEqual",
			"Like",
			"MoreThan",
			"MoreThanOrEqual",
			"Not",
			"Raw",
			"FindOperator",
			"FindOptionsUtils",
			"AdvancedConsoleLogger",
			"SimpleConsoleLogger",
			"FileLogger",
			"EntityMetadata",
			"EntityManager",
			"AbstractRepository",
			"Repository",
			"BaseEntity",
			"TreeRepository",
			"MongoRepository",
			"TableCheck",
			"TableColumn",
			"TableExclusion",
			"TableForeignKey",
			"TableIndex",
			"TableUnique",
			"Table",
			"MssqlParameter",
			"ConnectionOptionsReader",
			"Connection",
			"ConnectionManager",
			"QueryBuilder",
			"SelectQueryBuilder",
			"DeleteQueryBuilder",
			"InsertQueryBuilder",
			"UpdateQueryBuilder",
			"RelationQueryBuilder",
			"Brackets",
			"InsertResult",
			"UpdateResult",
			"DeleteResult",
			"MongoEntityManager",
			"Migration",
			"MigrationExecutor",
			"DefaultNamingStrategy",
			"EntitySchema",
			"PromiseUtils",
			"getMetadataArgsStorage",
			"getConnectionOptions",
			"getConnectionManager",
			"createConnection",
			"createConnections",
			"getConnection",
			"getManager",
			"getMongoManager",
			"getSqljsManager",
			"getRepository",
			"getTreeRepository",
			"getCustomRepository",
			"getMongoRepository",
			"createQueryBuilder"
		],
		"detectedNames": [
			"useContainer",
			"getFromContainer",
			"QueryFailedError",
			"Column",
			"CreateDateColumn",
			"DeleteDateColumn",
			"PrimaryGeneratedColumn",
			"PrimaryColumn",
			"UpdateDateColumn",
			"VersionColumn",
			"ViewColumn",
			"ObjectIdColumn",
			"AfterInsert",
			"AfterLoad",
			"AfterRemove",
			"AfterUpdate",
			"BeforeInsert",
			"BeforeRemove",
			"BeforeUpdate",
			"EventSubscriber",
			"JoinColumn",
			"JoinTable",
			"ManyToMany",
			"ManyToOne",
			"OneToMany",
			"OneToOne",
			"RelationCount",
			"RelationId",
			"Entity",
			"ChildEntity",
			"TableInheritance",
			"ViewEntity",
			"Transaction",
			"TransactionManager",
			"TransactionRepository",
			"TreeLevelColumn",
			"TreeParent",
			"TreeChildren",
			"Tree",
			"Index",
			"Unique",
			"Check",
			"Exclusion",
			"Generated",
			"EntityRepository",
			"Any",
			"Between",
			"Equal",
			"In",
			"IsNull",
			"LessThan",
			"LessThanOrEqual",
			"Like",
			"MoreThan",
			"MoreThanOrEqual",
			"Not",
			"Raw",
			"FindOperator",
			"FindOptionsUtils",
			"AdvancedConsoleLogger",
			"SimpleConsoleLogger",
			"FileLogger",
			"EntityMetadata",
			"EntityManager",
			"AbstractRepository",
			"Repository",
			"BaseEntity",
			"TreeRepository",
			"MongoRepository",
			"TableCheck",
			"TableColumn",
			"TableExclusion",
			"TableForeignKey",
			"TableIndex",
			"TableUnique",
			"Table",
			"MssqlParameter",
			"ConnectionOptionsReader",
			"Connection",
			"ConnectionManager",
			"QueryBuilder",
			"SelectQueryBuilder",
			"DeleteQueryBuilder",
			"InsertQueryBuilder",
			"UpdateQueryBuilder",
			"RelationQueryBuilder",
			"Brackets",
			"InsertResult",
			"UpdateResult",
			"DeleteResult",
			"MongoEntityManager",
			"Migration",
			"MigrationExecutor",
			"DefaultNamingStrategy",
			"EntitySchema",
			"PromiseUtils",
			"getMetadataArgsStorage",
			"getConnectionOptions",
			"getConnectionManager",
			"createConnection",
			"createConnections",
			"getConnection",
			"getManager",
			"getMongoManager",
			"getSqljsManager",
			"getRepository",
			"getTreeRepository",
			"getCustomRepository",
			"getMongoRepository",
			"createQueryBuilder"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "sprintf",
		"expectedNames": [
			"object_stringify",
			"format",
			"cache",
			"parse",
			"sprintf",
			"vsprintf"
		],
		"detectedNames": [],
		"missingNames": [
			"object_stringify",
			"format",
			"cache",
			"parse",
			"sprintf",
			"vsprintf"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "babel-plugin-lodash",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "hexlet-pairs",
		"transpiled": true,
		"expectedNames": [
			"isPair",
			"checkPair",
			"cons",
			"car",
			"cdr",
			"toString"
		],
		"detectedNames": [
			"isPair",
			"checkPair",
			"cons",
			"car",
			"cdr",
			"toString"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "pretty-ms",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "pouchdb",
		"expectedNames": [
			"adapters",
			"preferredAdapters",
			"prefix",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames",
			"_destructionListeners",
			"adapter",
			"plugin",
			"defaults",
			"fetch",
			"_changesFilterPlugin",
			"version",
			"replicate",
			"sync"
		],
		"detectedNames": [],
		"missingNames": [
			"adapters",
			"preferredAdapters",
			"prefix",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames",
			"_destructionListeners",
			"adapter",
			"plugin",
			"defaults",
			"fetch",
			"_changesFilterPlugin",
			"version",
			"replicate",
			"sync"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "md5-file",
		"expectedNames": [
			"sync"
		],
		"detectedNames": [
			"sync"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-markdown",
		"expectedNames": [
			"defaultProps",
			"propTypes",
			"types",
			"renderers",
			"uriTransformer"
		],
		"detectedNames": [],
		"missingNames": [
			"defaultProps",
			"propTypes",
			"types",
			"renderers",
			"uriTransformer"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "is",
		"expectedNames": [
			"type",
			"a",
			"defined",
			"empty",
			"equal",
			"hosted",
			"instanceof",
			"instance",
			"null",
			"nil",
			"undefined",
			"undef",
			"arguments",
			"args",
			"array",
			"arraylike",
			"boolean",
			"bool",
			"false",
			"true",
			"date",
			"element",
			"error",
			"function",
			"fn",
			"number",
			"infinite",
			"decimal",
			"divisibleBy",
			"int",
			"integer",
			"maximum",
			"minimum",
			"nan",
			"even",
			"odd",
			"ge",
			"gt",
			"le",
			"lt",
			"within",
			"object",
			"primitive",
			"hash",
			"regexp",
			"string",
			"base64",
			"hex",
			"symbol",
			"bigint"
		],
		"detectedNames": [],
		"missingNames": [
			"type",
			"a",
			"defined",
			"empty",
			"equal",
			"hosted",
			"instanceof",
			"instance",
			"null",
			"nil",
			"undefined",
			"undef",
			"arguments",
			"args",
			"array",
			"arraylike",
			"boolean",
			"bool",
			"false",
			"true",
			"date",
			"element",
			"error",
			"function",
			"fn",
			"number",
			"infinite",
			"decimal",
			"divisibleBy",
			"int",
			"integer",
			"maximum",
			"minimum",
			"nan",
			"even",
			"odd",
			"ge",
			"gt",
			"le",
			"lt",
			"within",
			"object",
			"primitive",
			"hash",
			"regexp",
			"string",
			"base64",
			"hex",
			"symbol",
			"bigint"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "yeoman-environment",
		"expectedNames": [
			"util",
			"repository",
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"detectedNames": [],
		"missingNames": [
			"util",
			"repository",
			"once",
			"on",
			"EventEmitter",
			"usingDomains",
			"captureRejectionSymbol",
			"captureRejections",
			"errorMonitor",
			"defaultMaxListeners",
			"init",
			"listenerCount"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "left-pad",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "follow-redirects",
		"expectedNames": [
			"maxRedirects",
			"maxBodyLength",
			"http",
			"https",
			"wrap"
		],
		"detectedNames": [
			"wrap"
		],
		"missingNames": [
			"maxRedirects",
			"maxBodyLength",
			"http",
			"https"
		],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "koa-mount",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "busboy",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "sinon-chai",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jasmine-core",
		"expectedNames": [
			"core",
			"requireMatchers",
			"base",
			"util",
			"Spec",
			"Order",
			"Env",
			"JsApiReporter",
			"Any",
			"Anything",
			"ArrayContaining",
			"ArrayWithExactContents",
			"Empty",
			"Falsy",
			"MapContaining",
			"NotEmpty",
			"ObjectContaining",
			"SetContaining",
			"StringMatching",
			"Truthy",
			"asymmetricEqualityTesterArgCompatShim",
			"CallTracker",
			"clearStack",
			"Clock",
			"DelayedFunctionScheduler",
			"errors",
			"ExceptionFormatter",
			"Expectation",
			"ExpectationFilterChain",
			"buildExpectationResult",
			"Expector",
			"formatErrorMsg",
			"GlobalErrors",
			"toBePending",
			"toBeRejected",
			"toBeRejectedWith",
			"toBeRejectedWithError",
			"toBeResolved",
			"toBeResolvedTo",
			"DiffBuilder",
			"MatchersUtil",
			"MismatchTree",
			"nothing",
			"NullDiffBuilder",
			"ObjectPath",
			"requireAsyncMatchers",
			"toBe",
			"toBeCloseTo",
			"toBeDefined",
			"toBeFalse",
			"toBeFalsy",
			"toBeGreaterThan",
			"toBeGreaterThanOrEqual",
			"toBeInstanceOf",
			"toBeLessThan",
			"toBeLessThanOrEqual",
			"toBeNaN",
			"toBeNegativeInfinity",
			"toBeNull",
			"toBePositiveInfinity",
			"toBeTrue",
			"toBeTruthy",
			"toBeUndefined",
			"toContain",
			"toEqual",
			"toHaveBeenCalled",
			"toHaveBeenCalledBefore",
			"toHaveBeenCalledOnceWith",
			"toHaveBeenCalledTimes",
			"toHaveBeenCalledWith",
			"toHaveClass",
			"toHaveSize",
			"toMatch",
			"toThrow",
			"toThrowError",
			"toThrowMatching",
			"MockDate",
			"makePrettyPrinter",
			"QueueRunner",
			"ReportDispatcher",
			"interface",
			"Spy",
			"SpyFactory",
			"SpyRegistry",
			"SpyStrategy",
			"StackTrace",
			"Suite",
			"Timer",
			"TreeProcessor",
			"UserContext",
			"version",
			"boot",
			"files"
		],
		"detectedNames": [
			"Spec",
			"Suite",
			"boot",
			"files"
		],
		"missingNames": [
			"core",
			"requireMatchers",
			"base",
			"util",
			"Order",
			"Env",
			"JsApiReporter",
			"Any",
			"Anything",
			"ArrayContaining",
			"ArrayWithExactContents",
			"Empty",
			"Falsy",
			"MapContaining",
			"NotEmpty",
			"ObjectContaining",
			"SetContaining",
			"StringMatching",
			"Truthy",
			"asymmetricEqualityTesterArgCompatShim",
			"CallTracker",
			"clearStack",
			"Clock",
			"DelayedFunctionScheduler",
			"errors",
			"ExceptionFormatter",
			"Expectation",
			"ExpectationFilterChain",
			"buildExpectationResult",
			"Expector",
			"formatErrorMsg",
			"GlobalErrors",
			"toBePending",
			"toBeRejected",
			"toBeRejectedWith",
			"toBeRejectedWithError",
			"toBeResolved",
			"toBeResolvedTo",
			"DiffBuilder",
			"MatchersUtil",
			"MismatchTree",
			"nothing",
			"NullDiffBuilder",
			"ObjectPath",
			"requireAsyncMatchers",
			"toBe",
			"toBeCloseTo",
			"toBeDefined",
			"toBeFalse",
			"toBeFalsy",
			"toBeGreaterThan",
			"toBeGreaterThanOrEqual",
			"toBeInstanceOf",
			"toBeLessThan",
			"toBeLessThanOrEqual",
			"toBeNaN",
			"toBeNegativeInfinity",
			"toBeNull",
			"toBePositiveInfinity",
			"toBeTrue",
			"toBeTruthy",
			"toBeUndefined",
			"toContain",
			"toEqual",
			"toHaveBeenCalled",
			"toHaveBeenCalledBefore",
			"toHaveBeenCalledOnceWith",
			"toHaveBeenCalledTimes",
			"toHaveBeenCalledWith",
			"toHaveClass",
			"toHaveSize",
			"toMatch",
			"toThrow",
			"toThrowError",
			"toThrowMatching",
			"MockDate",
			"makePrettyPrinter",
			"QueueRunner",
			"ReportDispatcher",
			"interface",
			"Spy",
			"SpyFactory",
			"SpyRegistry",
			"SpyStrategy",
			"StackTrace",
			"Timer",
			"TreeProcessor",
			"UserContext",
			"version"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "loose-envify",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "process",
		"expectedNames": [
			"version",
			"versions",
			"arch",
			"platform",
			"release",
			"_rawDebug",
			"moduleLoadList",
			"binding",
			"_linkedBinding",
			"_events",
			"_eventsCount",
			"_maxListeners",
			"domain",
			"_exiting",
			"config",
			"dlopen",
			"uptime",
			"_getActiveRequests",
			"_getActiveHandles",
			"reallyExit",
			"_kill",
			"cpuUsage",
			"resourceUsage",
			"memoryUsage",
			"kill",
			"exit",
			"openStdin",
			"getuid",
			"geteuid",
			"getgid",
			"getegid",
			"getgroups",
			"allowedNodeEnvironmentFlags",
			"assert",
			"features",
			"_fatalException",
			"setUncaughtExceptionCaptureCallback",
			"hasUncaughtExceptionCaptureCallback",
			"emitWarning",
			"nextTick",
			"_tickCallback",
			"_debugProcess",
			"_debugEnd",
			"_startProfilerIdleNotifier",
			"_stopProfilerIdleNotifier",
			"stdout",
			"stdin",
			"stderr",
			"abort",
			"umask",
			"chdir",
			"cwd",
			"initgroups",
			"setgroups",
			"setegid",
			"seteuid",
			"setgid",
			"setuid",
			"env",
			"title",
			"argv",
			"execArgv",
			"pid",
			"ppid",
			"execPath",
			"debugPort",
			"hrtime",
			"argv0",
			"_preload_modules",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"detectedNames": [
			"version",
			"versions",
			"arch",
			"platform",
			"release",
			"_rawDebug",
			"moduleLoadList",
			"binding",
			"_linkedBinding",
			"_events",
			"_eventsCount",
			"_maxListeners",
			"domain",
			"_exiting",
			"config",
			"dlopen",
			"uptime",
			"_getActiveRequests",
			"_getActiveHandles",
			"reallyExit",
			"_kill",
			"cpuUsage",
			"resourceUsage",
			"memoryUsage",
			"kill",
			"exit",
			"openStdin",
			"getuid",
			"geteuid",
			"getgid",
			"getegid",
			"getgroups",
			"allowedNodeEnvironmentFlags",
			"assert",
			"features",
			"_fatalException",
			"setUncaughtExceptionCaptureCallback",
			"hasUncaughtExceptionCaptureCallback",
			"emitWarning",
			"nextTick",
			"_tickCallback",
			"_debugProcess",
			"_debugEnd",
			"_startProfilerIdleNotifier",
			"_stopProfilerIdleNotifier",
			"stdout",
			"stdin",
			"stderr",
			"abort",
			"umask",
			"chdir",
			"cwd",
			"initgroups",
			"setgroups",
			"setegid",
			"seteuid",
			"setgid",
			"setuid",
			"env",
			"title",
			"argv",
			"execArgv",
			"pid",
			"ppid",
			"execPath",
			"debugPort",
			"hrtime",
			"argv0",
			"_preload_modules"
		],
		"missingNames": [
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "envify",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "bufferutil",
		"expectedNames": [
			"mask",
			"unmask"
		],
		"detectedNames": [
			"mask",
			"unmask"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "normalize-url",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "tv4",
		"expectedNames": [
			"setErrorReporter",
			"addFormat",
			"language",
			"addLanguage",
			"freshApi",
			"validate",
			"validateResult",
			"validateMultiple",
			"addSchema",
			"getSchema",
			"getSchemaMap",
			"getSchemaUris",
			"getMissingUris",
			"dropSchemas",
			"defineKeyword",
			"defineError",
			"reset",
			"missing",
			"error",
			"valid",
			"normSchema",
			"resolveUrl",
			"getDocumentUri",
			"errorCodes",
			"tv4"
		],
		"detectedNames": [],
		"missingNames": [
			"setErrorReporter",
			"addFormat",
			"language",
			"addLanguage",
			"freshApi",
			"validate",
			"validateResult",
			"validateMultiple",
			"addSchema",
			"getSchema",
			"getSchemaMap",
			"getSchemaUris",
			"getMissingUris",
			"dropSchemas",
			"defineKeyword",
			"defineError",
			"reset",
			"missing",
			"error",
			"valid",
			"normSchema",
			"resolveUrl",
			"getDocumentUri",
			"errorCodes",
			"tv4"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "karma-mocha",
		"expectedNames": [
			"framework:mocha"
		],
		"detectedNames": [],
		"missingNames": [
			"framework:mocha"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ts-pnp",
		"expectedNames": [
			"resolveModuleName"
		],
		"detectedNames": [
			"resolveModuleName"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "atob",
		"expectedNames": [
			"atob"
		],
		"detectedNames": [],
		"missingNames": [
			"atob"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "connect-mongo",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "@babel/plugin-proposal-export-namespace-from",
		"transpiled": true,
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "http-status",
		"expectedNames": [
			"100",
			"101",
			"102",
			"103",
			"200",
			"201",
			"202",
			"203",
			"204",
			"205",
			"206",
			"207",
			"208",
			"226",
			"300",
			"301",
			"302",
			"303",
			"304",
			"305",
			"306",
			"307",
			"308",
			"400",
			"401",
			"402",
			"403",
			"404",
			"405",
			"406",
			"407",
			"408",
			"409",
			"410",
			"411",
			"412",
			"413",
			"414",
			"415",
			"416",
			"417",
			"418",
			"421",
			"422",
			"423",
			"424",
			"426",
			"428",
			"429",
			"431",
			"451",
			"500",
			"501",
			"502",
			"503",
			"504",
			"505",
			"506",
			"507",
			"508",
			"510",
			"511",
			"classes",
			"100_NAME",
			"100_MESSAGE",
			"100_CLASS",
			"CONTINUE",
			"101_NAME",
			"101_MESSAGE",
			"101_CLASS",
			"SWITCHING_PROTOCOLS",
			"102_NAME",
			"102_MESSAGE",
			"102_CLASS",
			"PROCESSING",
			"103_NAME",
			"103_MESSAGE",
			"103_CLASS",
			"EARLY_HINTS",
			"200_NAME",
			"200_MESSAGE",
			"200_CLASS",
			"OK",
			"201_NAME",
			"201_MESSAGE",
			"201_CLASS",
			"CREATED",
			"202_NAME",
			"202_MESSAGE",
			"202_CLASS",
			"ACCEPTED",
			"203_NAME",
			"203_MESSAGE",
			"203_CLASS",
			"NON_AUTHORITATIVE_INFORMATION",
			"204_NAME",
			"204_MESSAGE",
			"204_CLASS",
			"NO_CONTENT",
			"205_NAME",
			"205_MESSAGE",
			"205_CLASS",
			"RESET_CONTENT",
			"206_NAME",
			"206_MESSAGE",
			"206_CLASS",
			"PARTIAL_CONTENT",
			"207_NAME",
			"207_MESSAGE",
			"207_CLASS",
			"MULTI_STATUS",
			"208_NAME",
			"208_MESSAGE",
			"208_CLASS",
			"ALREADY_REPORTED",
			"226_NAME",
			"226_MESSAGE",
			"226_CLASS",
			"IM_USED",
			"300_NAME",
			"300_MESSAGE",
			"300_CLASS",
			"MULTIPLE_CHOICES",
			"301_NAME",
			"301_MESSAGE",
			"301_CLASS",
			"MOVED_PERMANENTLY",
			"302_NAME",
			"302_MESSAGE",
			"302_CLASS",
			"FOUND",
			"303_NAME",
			"303_MESSAGE",
			"303_CLASS",
			"SEE_OTHER",
			"304_NAME",
			"304_MESSAGE",
			"304_CLASS",
			"NOT_MODIFIED",
			"305_NAME",
			"305_MESSAGE",
			"305_CLASS",
			"USE_PROXY",
			"306_NAME",
			"306_MESSAGE",
			"306_CLASS",
			"SWITCH_PROXY",
			"307_NAME",
			"307_MESSAGE",
			"307_CLASS",
			"TEMPORARY_REDIRECT",
			"308_NAME",
			"308_MESSAGE",
			"308_CLASS",
			"PERMANENT_REDIRECT",
			"400_NAME",
			"400_MESSAGE",
			"400_CLASS",
			"BAD_REQUEST",
			"401_NAME",
			"401_MESSAGE",
			"401_CLASS",
			"UNAUTHORIZED",
			"402_NAME",
			"402_MESSAGE",
			"402_CLASS",
			"PAYMENT_REQUIRED",
			"403_NAME",
			"403_MESSAGE",
			"403_CLASS",
			"FORBIDDEN",
			"404_NAME",
			"404_MESSAGE",
			"404_CLASS",
			"NOT_FOUND",
			"405_NAME",
			"405_MESSAGE",
			"405_CLASS",
			"METHOD_NOT_ALLOWED",
			"406_NAME",
			"406_MESSAGE",
			"406_CLASS",
			"NOT_ACCEPTABLE",
			"407_NAME",
			"407_MESSAGE",
			"407_CLASS",
			"PROXY_AUTHENTICATION_REQUIRED",
			"408_NAME",
			"408_MESSAGE",
			"408_CLASS",
			"REQUEST_TIMEOUT",
			"409_NAME",
			"409_MESSAGE",
			"409_CLASS",
			"CONFLICT",
			"410_NAME",
			"410_MESSAGE",
			"410_CLASS",
			"GONE",
			"411_NAME",
			"411_MESSAGE",
			"411_CLASS",
			"LENGTH_REQUIRED",
			"412_NAME",
			"412_MESSAGE",
			"412_CLASS",
			"PRECONDITION_FAILED",
			"413_NAME",
			"413_MESSAGE",
			"413_CLASS",
			"REQUEST_ENTITY_TOO_LARGE",
			"414_NAME",
			"414_MESSAGE",
			"414_CLASS",
			"REQUEST_URI_TOO_LONG",
			"415_NAME",
			"415_MESSAGE",
			"415_CLASS",
			"UNSUPPORTED_MEDIA_TYPE",
			"416_NAME",
			"416_MESSAGE",
			"416_CLASS",
			"REQUESTED_RANGE_NOT_SATISFIABLE",
			"417_NAME",
			"417_MESSAGE",
			"417_CLASS",
			"EXPECTATION_FAILED",
			"418_NAME",
			"418_MESSAGE",
			"418_CLASS",
			"IM_A_TEAPOT",
			"421_NAME",
			"421_MESSAGE",
			"421_CLASS",
			"MISDIRECTED_REQUEST",
			"422_NAME",
			"422_MESSAGE",
			"422_CLASS",
			"UNPROCESSABLE_ENTITY",
			"423_NAME",
			"423_MESSAGE",
			"423_CLASS",
			"LOCKED",
			"424_NAME",
			"424_MESSAGE",
			"424_CLASS",
			"FAILED_DEPENDENCY",
			"426_NAME",
			"426_MESSAGE",
			"426_CLASS",
			"UPGRADE_REQUIRED",
			"428_NAME",
			"428_MESSAGE",
			"428_CLASS",
			"PRECONDITION_REQUIRED",
			"429_NAME",
			"429_MESSAGE",
			"429_CLASS",
			"TOO_MANY_REQUESTS",
			"431_NAME",
			"431_MESSAGE",
			"431_CLASS",
			"REQUEST_HEADER_FIELDS_TOO_LARGE",
			"451_NAME",
			"451_MESSAGE",
			"451_CLASS",
			"UNAVAILABLE_FOR_LEGAL_REASONS",
			"500_NAME",
			"500_MESSAGE",
			"500_CLASS",
			"INTERNAL_SERVER_ERROR",
			"501_NAME",
			"501_MESSAGE",
			"501_CLASS",
			"NOT_IMPLEMENTED",
			"502_NAME",
			"502_MESSAGE",
			"502_CLASS",
			"BAD_GATEWAY",
			"503_NAME",
			"503_MESSAGE",
			"503_CLASS",
			"SERVICE_UNAVAILABLE",
			"504_NAME",
			"504_MESSAGE",
			"504_CLASS",
			"GATEWAY_TIMEOUT",
			"505_NAME",
			"505_MESSAGE",
			"505_CLASS",
			"HTTP_VERSION_NOT_SUPPORTED",
			"506_NAME",
			"506_MESSAGE",
			"506_CLASS",
			"VARIANT_ALSO_NEGOTIATES",
			"507_NAME",
			"507_MESSAGE",
			"507_CLASS",
			"INSUFFICIENT_STORAGE",
			"508_NAME",
			"508_MESSAGE",
			"508_CLASS",
			"LOOP_DETECTED",
			"510_NAME",
			"510_MESSAGE",
			"510_CLASS",
			"NOT_EXTENDED",
			"511_NAME",
			"511_MESSAGE",
			"511_CLASS",
			"NETWORK_AUTHENTICATION_REQUIRED",
			"extra"
		],
		"detectedNames": [
			"classes"
		],
		"missingNames": [
			"100",
			"101",
			"102",
			"103",
			"200",
			"201",
			"202",
			"203",
			"204",
			"205",
			"206",
			"207",
			"208",
			"226",
			"300",
			"301",
			"302",
			"303",
			"304",
			"305",
			"306",
			"307",
			"308",
			"400",
			"401",
			"402",
			"403",
			"404",
			"405",
			"406",
			"407",
			"408",
			"409",
			"410",
			"411",
			"412",
			"413",
			"414",
			"415",
			"416",
			"417",
			"418",
			"421",
			"422",
			"423",
			"424",
			"426",
			"428",
			"429",
			"431",
			"451",
			"500",
			"501",
			"502",
			"503",
			"504",
			"505",
			"506",
			"507",
			"508",
			"510",
			"511",
			"100_NAME",
			"100_MESSAGE",
			"100_CLASS",
			"CONTINUE",
			"101_NAME",
			"101_MESSAGE",
			"101_CLASS",
			"SWITCHING_PROTOCOLS",
			"102_NAME",
			"102_MESSAGE",
			"102_CLASS",
			"PROCESSING",
			"103_NAME",
			"103_MESSAGE",
			"103_CLASS",
			"EARLY_HINTS",
			"200_NAME",
			"200_MESSAGE",
			"200_CLASS",
			"OK",
			"201_NAME",
			"201_MESSAGE",
			"201_CLASS",
			"CREATED",
			"202_NAME",
			"202_MESSAGE",
			"202_CLASS",
			"ACCEPTED",
			"203_NAME",
			"203_MESSAGE",
			"203_CLASS",
			"NON_AUTHORITATIVE_INFORMATION",
			"204_NAME",
			"204_MESSAGE",
			"204_CLASS",
			"NO_CONTENT",
			"205_NAME",
			"205_MESSAGE",
			"205_CLASS",
			"RESET_CONTENT",
			"206_NAME",
			"206_MESSAGE",
			"206_CLASS",
			"PARTIAL_CONTENT",
			"207_NAME",
			"207_MESSAGE",
			"207_CLASS",
			"MULTI_STATUS",
			"208_NAME",
			"208_MESSAGE",
			"208_CLASS",
			"ALREADY_REPORTED",
			"226_NAME",
			"226_MESSAGE",
			"226_CLASS",
			"IM_USED",
			"300_NAME",
			"300_MESSAGE",
			"300_CLASS",
			"MULTIPLE_CHOICES",
			"301_NAME",
			"301_MESSAGE",
			"301_CLASS",
			"MOVED_PERMANENTLY",
			"302_NAME",
			"302_MESSAGE",
			"302_CLASS",
			"FOUND",
			"303_NAME",
			"303_MESSAGE",
			"303_CLASS",
			"SEE_OTHER",
			"304_NAME",
			"304_MESSAGE",
			"304_CLASS",
			"NOT_MODIFIED",
			"305_NAME",
			"305_MESSAGE",
			"305_CLASS",
			"USE_PROXY",
			"306_NAME",
			"306_MESSAGE",
			"306_CLASS",
			"SWITCH_PROXY",
			"307_NAME",
			"307_MESSAGE",
			"307_CLASS",
			"TEMPORARY_REDIRECT",
			"308_NAME",
			"308_MESSAGE",
			"308_CLASS",
			"PERMANENT_REDIRECT",
			"400_NAME",
			"400_MESSAGE",
			"400_CLASS",
			"BAD_REQUEST",
			"401_NAME",
			"401_MESSAGE",
			"401_CLASS",
			"UNAUTHORIZED",
			"402_NAME",
			"402_MESSAGE",
			"402_CLASS",
			"PAYMENT_REQUIRED",
			"403_NAME",
			"403_MESSAGE",
			"403_CLASS",
			"FORBIDDEN",
			"404_NAME",
			"404_MESSAGE",
			"404_CLASS",
			"NOT_FOUND",
			"405_NAME",
			"405_MESSAGE",
			"405_CLASS",
			"METHOD_NOT_ALLOWED",
			"406_NAME",
			"406_MESSAGE",
			"406_CLASS",
			"NOT_ACCEPTABLE",
			"407_NAME",
			"407_MESSAGE",
			"407_CLASS",
			"PROXY_AUTHENTICATION_REQUIRED",
			"408_NAME",
			"408_MESSAGE",
			"408_CLASS",
			"REQUEST_TIMEOUT",
			"409_NAME",
			"409_MESSAGE",
			"409_CLASS",
			"CONFLICT",
			"410_NAME",
			"410_MESSAGE",
			"410_CLASS",
			"GONE",
			"411_NAME",
			"411_MESSAGE",
			"411_CLASS",
			"LENGTH_REQUIRED",
			"412_NAME",
			"412_MESSAGE",
			"412_CLASS",
			"PRECONDITION_FAILED",
			"413_NAME",
			"413_MESSAGE",
			"413_CLASS",
			"REQUEST_ENTITY_TOO_LARGE",
			"414_NAME",
			"414_MESSAGE",
			"414_CLASS",
			"REQUEST_URI_TOO_LONG",
			"415_NAME",
			"415_MESSAGE",
			"415_CLASS",
			"UNSUPPORTED_MEDIA_TYPE",
			"416_NAME",
			"416_MESSAGE",
			"416_CLASS",
			"REQUESTED_RANGE_NOT_SATISFIABLE",
			"417_NAME",
			"417_MESSAGE",
			"417_CLASS",
			"EXPECTATION_FAILED",
			"418_NAME",
			"418_MESSAGE",
			"418_CLASS",
			"IM_A_TEAPOT",
			"421_NAME",
			"421_MESSAGE",
			"421_CLASS",
			"MISDIRECTED_REQUEST",
			"422_NAME",
			"422_MESSAGE",
			"422_CLASS",
			"UNPROCESSABLE_ENTITY",
			"423_NAME",
			"423_MESSAGE",
			"423_CLASS",
			"LOCKED",
			"424_NAME",
			"424_MESSAGE",
			"424_CLASS",
			"FAILED_DEPENDENCY",
			"426_NAME",
			"426_MESSAGE",
			"426_CLASS",
			"UPGRADE_REQUIRED",
			"428_NAME",
			"428_MESSAGE",
			"428_CLASS",
			"PRECONDITION_REQUIRED",
			"429_NAME",
			"429_MESSAGE",
			"429_CLASS",
			"TOO_MANY_REQUESTS",
			"431_NAME",
			"431_MESSAGE",
			"431_CLASS",
			"REQUEST_HEADER_FIELDS_TOO_LARGE",
			"451_NAME",
			"451_MESSAGE",
			"451_CLASS",
			"UNAVAILABLE_FOR_LEGAL_REASONS",
			"500_NAME",
			"500_MESSAGE",
			"500_CLASS",
			"INTERNAL_SERVER_ERROR",
			"501_NAME",
			"501_MESSAGE",
			"501_CLASS",
			"NOT_IMPLEMENTED",
			"502_NAME",
			"502_MESSAGE",
			"502_CLASS",
			"BAD_GATEWAY",
			"503_NAME",
			"503_MESSAGE",
			"503_CLASS",
			"SERVICE_UNAVAILABLE",
			"504_NAME",
			"504_MESSAGE",
			"504_CLASS",
			"GATEWAY_TIMEOUT",
			"505_NAME",
			"505_MESSAGE",
			"505_CLASS",
			"HTTP_VERSION_NOT_SUPPORTED",
			"506_NAME",
			"506_MESSAGE",
			"506_CLASS",
			"VARIANT_ALSO_NEGOTIATES",
			"507_NAME",
			"507_MESSAGE",
			"507_CLASS",
			"INSUFFICIENT_STORAGE",
			"508_NAME",
			"508_MESSAGE",
			"508_CLASS",
			"LOOP_DETECTED",
			"510_NAME",
			"510_MESSAGE",
			"510_CLASS",
			"NOT_EXTENDED",
			"511_NAME",
			"511_MESSAGE",
			"511_CLASS",
			"NETWORK_AUTHENTICATION_REQUIRED",
			"extra"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "cli-ux",
		"transpiled": true,
		"expectedNames": [
			"ActionBase",
			"config",
			"Config",
			"ExitError",
			"Table",
			"ux",
			"cli"
		],
		"detectedNames": [
			"ActionBase",
			"config",
			"Config",
			"ExitError",
			"Table",
			"ux",
			"cli"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": true
	},
	{
		"name": "iniparser",
		"expectedNames": [
			"parse",
			"parseSync",
			"parseString"
		],
		"detectedNames": [
			"parse",
			"parseSync",
			"parseString"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nock",
		"expectedNames": [
			"activate",
			"isActive",
			"isDone",
			"pendingMocks",
			"activeMocks",
			"removeInterceptor",
			"disableNetConnect",
			"enableNetConnect",
			"cleanAll",
			"abortPendingRequests",
			"load",
			"loadDefs",
			"define",
			"emitter",
			"recorder",
			"restore",
			"back"
		],
		"detectedNames": [],
		"missingNames": [
			"activate",
			"isActive",
			"isDone",
			"pendingMocks",
			"activeMocks",
			"removeInterceptor",
			"disableNetConnect",
			"enableNetConnect",
			"cleanAll",
			"abortPendingRequests",
			"load",
			"loadDefs",
			"define",
			"emitter",
			"recorder",
			"restore",
			"back"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "object.assign",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "flux",
		"expectedNames": [
			"Dispatcher"
		],
		"detectedNames": [
			"Dispatcher"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "semantic-ui-react",
		"transpiled": true,
		"expectedNames": [
			"Ref",
			"Confirm",
			"MountNode",
			"Pagination",
			"PaginationItem",
			"Portal",
			"PortalInner",
			"Radio",
			"Responsive",
			"Select",
			"TextArea",
			"TransitionablePortal",
			"Visibility",
			"Breadcrumb",
			"BreadcrumbDivider",
			"BreadcrumbSection",
			"Form",
			"FormButton",
			"FormCheckbox",
			"FormDropdown",
			"FormField",
			"FormGroup",
			"FormInput",
			"FormRadio",
			"FormSelect",
			"FormTextArea",
			"Grid",
			"GridColumn",
			"GridRow",
			"Menu",
			"MenuHeader",
			"MenuItem",
			"MenuMenu",
			"Message",
			"MessageContent",
			"MessageHeader",
			"MessageItem",
			"MessageList",
			"Table",
			"TableBody",
			"TableCell",
			"TableFooter",
			"TableHeader",
			"TableHeaderCell",
			"TableRow",
			"Button",
			"ButtonContent",
			"ButtonGroup",
			"ButtonOr",
			"Container",
			"Divider",
			"Flag",
			"Header",
			"HeaderContent",
			"HeaderSubheader",
			"Icon",
			"IconGroup",
			"Image",
			"ImageGroup",
			"Input",
			"Label",
			"LabelDetail",
			"LabelGroup",
			"List",
			"ListContent",
			"ListDescription",
			"ListHeader",
			"ListIcon",
			"ListItem",
			"ListList",
			"Loader",
			"Placeholder",
			"PlaceholderHeader",
			"PlaceholderImage",
			"PlaceholderLine",
			"PlaceholderParagraph",
			"Rail",
			"Reveal",
			"RevealContent",
			"Segment",
			"SegmentGroup",
			"SegmentInline",
			"Step",
			"StepContent",
			"StepDescription",
			"StepGroup",
			"StepTitle",
			"Accordion",
			"AccordionAccordion",
			"AccordionContent",
			"AccordionPanel",
			"AccordionTitle",
			"Checkbox",
			"Dimmer",
			"DimmerDimmable",
			"DimmerInner",
			"Dropdown",
			"DropdownDivider",
			"DropdownHeader",
			"DropdownItem",
			"DropdownMenu",
			"DropdownSearchInput",
			"DropdownText",
			"Embed",
			"Modal",
			"ModalActions",
			"ModalContent",
			"ModalDescription",
			"ModalDimmer",
			"ModalHeader",
			"Popup",
			"PopupContent",
			"PopupHeader",
			"Progress",
			"Rating",
			"RatingIcon",
			"Search",
			"SearchCategory",
			"SearchResult",
			"SearchResults",
			"Sidebar",
			"SidebarPushable",
			"SidebarPusher",
			"Sticky",
			"Tab",
			"TabPane",
			"Transition",
			"TransitionGroup",
			"Advertisement",
			"Card",
			"CardContent",
			"CardDescription",
			"CardGroup",
			"CardHeader",
			"CardMeta",
			"Comment",
			"CommentAction",
			"CommentActions",
			"CommentAuthor",
			"CommentAvatar",
			"CommentContent",
			"CommentGroup",
			"CommentMetadata",
			"CommentText",
			"Feed",
			"FeedContent",
			"FeedDate",
			"FeedEvent",
			"FeedExtra",
			"FeedLabel",
			"FeedLike",
			"FeedMeta",
			"FeedSummary",
			"FeedUser",
			"Item",
			"ItemContent",
			"ItemDescription",
			"ItemExtra",
			"ItemGroup",
			"ItemHeader",
			"ItemImage",
			"ItemMeta",
			"Statistic",
			"StatisticGroup",
			"StatisticLabel",
			"StatisticValue"
		],
		"detectedNames": [
			"Ref",
			"Confirm",
			"MountNode",
			"Pagination",
			"PaginationItem",
			"Portal",
			"PortalInner",
			"Radio",
			"Responsive",
			"Select",
			"TextArea",
			"TransitionablePortal",
			"Visibility",
			"Breadcrumb",
			"BreadcrumbDivider",
			"BreadcrumbSection",
			"Form",
			"FormButton",
			"FormCheckbox",
			"FormDropdown",
			"FormField",
			"FormGroup",
			"FormInput",
			"FormRadio",
			"FormSelect",
			"FormTextArea",
			"Grid",
			"GridColumn",
			"GridRow",
			"Menu",
			"MenuHeader",
			"MenuItem",
			"MenuMenu",
			"Message",
			"MessageContent",
			"MessageHeader",
			"MessageItem",
			"MessageList",
			"Table",
			"TableBody",
			"TableCell",
			"TableFooter",
			"TableHeader",
			"TableHeaderCell",
			"TableRow",
			"Button",
			"ButtonContent",
			"ButtonGroup",
			"ButtonOr",
			"Container",
			"Divider",
			"Flag",
			"Header",
			"HeaderContent",
			"HeaderSubheader",
			"Icon",
			"IconGroup",
			"Image",
			"ImageGroup",
			"Input",
			"Label",
			"LabelDetail",
			"LabelGroup",
			"List",
			"ListContent",
			"ListDescription",
			"ListHeader",
			"ListIcon",
			"ListItem",
			"ListList",
			"Loader",
			"Placeholder",
			"PlaceholderHeader",
			"PlaceholderImage",
			"PlaceholderLine",
			"PlaceholderParagraph",
			"Rail",
			"Reveal",
			"RevealContent",
			"Segment",
			"SegmentGroup",
			"SegmentInline",
			"Step",
			"StepContent",
			"StepDescription",
			"StepGroup",
			"StepTitle",
			"Accordion",
			"AccordionAccordion",
			"AccordionContent",
			"AccordionPanel",
			"AccordionTitle",
			"Checkbox",
			"Dimmer",
			"DimmerDimmable",
			"DimmerInner",
			"Dropdown",
			"DropdownDivider",
			"DropdownHeader",
			"DropdownItem",
			"DropdownMenu",
			"DropdownSearchInput",
			"DropdownText",
			"Embed",
			"Modal",
			"ModalActions",
			"ModalContent",
			"ModalDescription",
			"ModalDimmer",
			"ModalHeader",
			"Popup",
			"PopupContent",
			"PopupHeader",
			"Progress",
			"Rating",
			"RatingIcon",
			"Search",
			"SearchCategory",
			"SearchResult",
			"SearchResults",
			"Sidebar",
			"SidebarPushable",
			"SidebarPusher",
			"Sticky",
			"Tab",
			"TabPane",
			"Transition",
			"TransitionGroup",
			"Advertisement",
			"Card",
			"CardContent",
			"CardDescription",
			"CardGroup",
			"CardHeader",
			"CardMeta",
			"Comment",
			"CommentAction",
			"CommentActions",
			"CommentAuthor",
			"CommentAvatar",
			"CommentContent",
			"CommentGroup",
			"CommentMetadata",
			"CommentText",
			"Feed",
			"FeedContent",
			"FeedDate",
			"FeedEvent",
			"FeedExtra",
			"FeedLabel",
			"FeedLike",
			"FeedMeta",
			"FeedSummary",
			"FeedUser",
			"Item",
			"ItemContent",
			"ItemDescription",
			"ItemExtra",
			"ItemGroup",
			"ItemHeader",
			"ItemImage",
			"ItemMeta",
			"Statistic",
			"StatisticGroup",
			"StatisticLabel",
			"StatisticValue"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "karma-jasmine",
		"expectedNames": [
			"framework:jasmine",
			"reporter:karma-jasmine"
		],
		"detectedNames": [],
		"missingNames": [
			"framework:jasmine",
			"reporter:karma-jasmine"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "fuse.js",
		"expectedNames": [
			"version",
			"createIndex",
			"parseIndex",
			"config",
			"parseQuery"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"createIndex",
			"parseIndex",
			"config",
			"parseQuery"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "inert",
		"expectedNames": [
			"plugin"
		],
		"detectedNames": [
			"plugin"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "jwt-simple",
		"expectedNames": [
			"version",
			"decode",
			"encode"
		],
		"detectedNames": [],
		"missingNames": [
			"version",
			"decode",
			"encode"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "isobject",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "element-resize-detector",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-datepicker",
		"transpiled": true,
		"expectedNames": [
			"CalendarContainer",
			"getDefaultLocale",
			"registerLocale",
			"setDefaultLocale"
		],
		"detectedNames": [
			"CalendarContainer",
			"getDefaultLocale",
			"registerLocale",
			"setDefaultLocale"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "standard",
		"expectedNames": [
			"cmd",
			"eslint",
			"cwd",
			"customParseOpts",
			"eslintConfig",
			"lintTextSync",
			"lintText",
			"lintFiles",
			"parseOpts"
		],
		"detectedNames": [],
		"missingNames": [
			"cmd",
			"eslint",
			"cwd",
			"customParseOpts",
			"eslintConfig",
			"lintTextSync",
			"lintText",
			"lintFiles",
			"parseOpts"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-onclickoutside",
		"transpiled": true,
		"expectedNames": [
			"IGNORE_CLASS_NAME"
		],
		"detectedNames": [
			"IGNORE_CLASS_NAME"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "react-addons-shallow-compare",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "dot",
		"expectedNames": [
			"name",
			"version",
			"templateSettings",
			"template",
			"compile",
			"log",
			"encodeHTMLSource",
			"process"
		],
		"detectedNames": [],
		"missingNames": [
			"name",
			"version",
			"templateSettings",
			"template",
			"compile",
			"log",
			"encodeHTMLSource",
			"process"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "browserslist",
		"expectedNames": [
			"cache",
			"data",
			"usage",
			"defaults",
			"aliases",
			"desktopNames",
			"versionAliases",
			"clearCaches",
			"parseConfig",
			"readConfig",
			"findConfig",
			"loadConfig",
			"coverage"
		],
		"detectedNames": [],
		"missingNames": [
			"cache",
			"data",
			"usage",
			"defaults",
			"aliases",
			"desktopNames",
			"versionAliases",
			"clearCaches",
			"parseConfig",
			"readConfig",
			"findConfig",
			"loadConfig",
			"coverage"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "firebase-admin",
		"transpiled": true,
		"expectedNames": [
			"credential",
			"SDK_VERSION",
			"Promise",
			"INTERNAL",
			"initializeApp",
			"app",
			"ensureApp"
		],
		"detectedNames": [],
		"missingNames": [
			"credential",
			"SDK_VERSION",
			"Promise",
			"INTERNAL",
			"initializeApp",
			"app",
			"ensureApp"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "nib",
		"expectedNames": [
			"version",
			"path"
		],
		"detectedNames": [
			"version",
			"path"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "fuzzy",
		"expectedNames": [
			"simpleFilter",
			"test",
			"match",
			"filter"
		],
		"detectedNames": [],
		"missingNames": [
			"simpleFilter",
			"test",
			"match",
			"filter"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "word-wrap",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ansi-colors",
		"expectedNames": [
			"enabled",
			"visible",
			"styles",
			"keys",
			"reset",
			"bold",
			"dim",
			"italic",
			"underline",
			"inverse",
			"hidden",
			"strikethrough",
			"black",
			"red",
			"green",
			"yellow",
			"blue",
			"magenta",
			"cyan",
			"white",
			"gray",
			"grey",
			"bgBlack",
			"bgRed",
			"bgGreen",
			"bgYellow",
			"bgBlue",
			"bgMagenta",
			"bgCyan",
			"bgWhite",
			"blackBright",
			"redBright",
			"greenBright",
			"yellowBright",
			"blueBright",
			"magentaBright",
			"cyanBright",
			"whiteBright",
			"bgBlackBright",
			"bgRedBright",
			"bgGreenBright",
			"bgYellowBright",
			"bgBlueBright",
			"bgMagentaBright",
			"bgCyanBright",
			"bgWhiteBright",
			"ansiRegex",
			"hasAnsi",
			"hasColor",
			"alias",
			"theme",
			"unstyle",
			"noop",
			"clear",
			"none",
			"stripColor",
			"symbols",
			"define",
			"create"
		],
		"detectedNames": [
			"create"
		],
		"missingNames": [
			"enabled",
			"visible",
			"styles",
			"keys",
			"reset",
			"bold",
			"dim",
			"italic",
			"underline",
			"inverse",
			"hidden",
			"strikethrough",
			"black",
			"red",
			"green",
			"yellow",
			"blue",
			"magenta",
			"cyan",
			"white",
			"gray",
			"grey",
			"bgBlack",
			"bgRed",
			"bgGreen",
			"bgYellow",
			"bgBlue",
			"bgMagenta",
			"bgCyan",
			"bgWhite",
			"blackBright",
			"redBright",
			"greenBright",
			"yellowBright",
			"blueBright",
			"magentaBright",
			"cyanBright",
			"whiteBright",
			"bgBlackBright",
			"bgRedBright",
			"bgGreenBright",
			"bgYellowBright",
			"bgBlueBright",
			"bgMagentaBright",
			"bgCyanBright",
			"bgWhiteBright",
			"ansiRegex",
			"hasAnsi",
			"hasColor",
			"alias",
			"theme",
			"unstyle",
			"noop",
			"clear",
			"none",
			"stripColor",
			"symbols",
			"define"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "tracer",
		"expectedNames": [
			"console",
			"colorConsole",
			"dailyfile",
			"close",
			"setLevel",
			"getLevel"
		],
		"detectedNames": [
			"console",
			"colorConsole",
			"dailyfile",
			"close",
			"setLevel",
			"getLevel"
		],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "yaml",
		"expectedNames": [
			"createNode",
			"defaultOptions",
			"Document",
			"parse",
			"parseAllDocuments",
			"parseCST",
			"parseDocument",
			"scalarOptions",
			"stringify"
		],
		"detectedNames": [],
		"missingNames": [
			"createNode",
			"defaultOptions",
			"Document",
			"parse",
			"parseAllDocuments",
			"parseCST",
			"parseDocument",
			"scalarOptions",
			"stringify"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "ansi-escapes",
		"expectedNames": [
			"cursorTo",
			"cursorMove",
			"cursorUp",
			"cursorDown",
			"cursorForward",
			"cursorBackward",
			"cursorLeft",
			"cursorSavePosition",
			"cursorRestorePosition",
			"cursorGetPosition",
			"cursorNextLine",
			"cursorPrevLine",
			"cursorHide",
			"cursorShow",
			"eraseLines",
			"eraseEndLine",
			"eraseStartLine",
			"eraseLine",
			"eraseDown",
			"eraseUp",
			"eraseScreen",
			"scrollUp",
			"scrollDown",
			"clearScreen",
			"clearTerminal",
			"beep",
			"link",
			"image",
			"iTerm"
		],
		"detectedNames": [],
		"missingNames": [
			"cursorTo",
			"cursorMove",
			"cursorUp",
			"cursorDown",
			"cursorForward",
			"cursorBackward",
			"cursorLeft",
			"cursorSavePosition",
			"cursorRestorePosition",
			"cursorGetPosition",
			"cursorNextLine",
			"cursorPrevLine",
			"cursorHide",
			"cursorShow",
			"eraseLines",
			"eraseEndLine",
			"eraseStartLine",
			"eraseLine",
			"eraseDown",
			"eraseUp",
			"eraseScreen",
			"scrollUp",
			"scrollDown",
			"clearScreen",
			"clearTerminal",
			"beep",
			"link",
			"image",
			"iTerm"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "raven",
		"expectedNames": [
			"breadcrumbs",
			"Client",
			"version",
			"disableConsoleAlerts",
			"utils",
			"transports",
			"parsers",
			"config",
			"install",
			"uninstall",
			"makeErrorHandler",
			"generateEventId",
			"process",
			"send",
			"captureMessage",
			"captureException",
			"context",
			"wrap",
			"interceptErr",
			"setContext",
			"mergeContext",
			"getContext",
			"setCallbackHelper",
			"setDataCallback",
			"setShouldSendCallback",
			"requestHandler",
			"errorHandler",
			"captureBreadcrumb",
			"_createRequestObject",
			"_events",
			"_eventsCount",
			"_maxListeners",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"detectedNames": [
			"utils",
			"transports",
			"parsers"
		],
		"missingNames": [
			"breadcrumbs",
			"Client",
			"version",
			"disableConsoleAlerts",
			"config",
			"install",
			"uninstall",
			"makeErrorHandler",
			"generateEventId",
			"process",
			"send",
			"captureMessage",
			"captureException",
			"context",
			"wrap",
			"interceptErr",
			"setContext",
			"mergeContext",
			"getContext",
			"setCallbackHelper",
			"setDataCallback",
			"setShouldSendCallback",
			"requestHandler",
			"errorHandler",
			"captureBreadcrumb",
			"_createRequestObject",
			"_events",
			"_eventsCount",
			"_maxListeners",
			"setMaxListeners",
			"getMaxListeners",
			"emit",
			"addListener",
			"on",
			"prependListener",
			"once",
			"prependOnceListener",
			"removeListener",
			"off",
			"removeAllListeners",
			"listeners",
			"rawListeners",
			"listenerCount",
			"eventNames"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "i",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "xhr",
		"expectedNames": [
			"XMLHttpRequest",
			"XDomainRequest",
			"get",
			"put",
			"post",
			"patch",
			"head",
			"del"
		],
		"detectedNames": [],
		"missingNames": [
			"XMLHttpRequest",
			"XDomainRequest",
			"get",
			"put",
			"post",
			"patch",
			"head",
			"del"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "deep-assign",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "inquirer-autocomplete-prompt",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "xpath",
		"expectedNames": [
			"createExpression",
			"createNSResolver",
			"evaluate",
			"parse",
			"XPath",
			"XPathParser",
			"XPathResult",
			"Step",
			"NodeTest",
			"BarOperation",
			"NamespaceResolver",
			"FunctionResolver",
			"VariableResolver",
			"Utilities",
			"XPathContext",
			"XNodeSet",
			"XBoolean",
			"XString",
			"XNumber",
			"select",
			"useNamespaces",
			"selectWithResolver",
			"select1"
		],
		"detectedNames": [
			"parse",
			"XPath",
			"XPathParser",
			"XPathResult",
			"Step",
			"NodeTest",
			"BarOperation",
			"NamespaceResolver",
			"FunctionResolver",
			"VariableResolver",
			"Utilities",
			"XPathContext",
			"XNodeSet",
			"XBoolean",
			"XString",
			"XNumber",
			"select",
			"useNamespaces",
			"selectWithResolver",
			"select1"
		],
		"missingNames": [
			"createExpression",
			"createNSResolver",
			"evaluate"
		],
		"readmeEncouragesNamedExports": false
	},
	{
		"name": "fresh",
		"expectedNames": [],
		"detectedNames": [],
		"missingNames": [],
		"readmeEncouragesNamedExports": false
	}
]